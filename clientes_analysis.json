{
  "metadata": {
    "database": "toolstock",
    "analyzed_at": "2025-07-30T11:39:14.784Z",
    "erp_version": "Ahora Freeware 4.4.2400.83"
  },
  "entities": {
    "Ahora_Planes_Clientes_Tipos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdPlan",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "nvarchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CuentaVentas",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdIVADefecto",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdPlan", "IdTipo"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Articulos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdArticulo",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Articulo",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEmbalaje",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Cantidad",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TipoAcabado",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Precio",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "PrecioEuros",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Norma",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Habitual",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "PlazoAprovisionamiento",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Preferencialidad",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdAlmacen",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiasTransito",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Muelle",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "EAN13",
          "dataType": "varchar",
          "maxLength": 28,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DUN14",
          "dataType": "varchar",
          "maxLength": 28,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdArticulo", "IdCliente"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Canales": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCanal",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCanal"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Compañias": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCompañia",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "NombreCompañia",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Direccion",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Ciudad",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Provincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodPostal",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Pais",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Notas",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCompañia"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_CopiasAlbaranes": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "NumCopiaAlb",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente", "NumCopiaAlb"],
      "identityColumns": []
    },
    "Clientes_CopiasFacturas": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "NumCopiaFact",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente", "NumCopiaFact"],
      "identityColumns": []
    },
    "Clientes_CopiasOfertas": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "NumCopiaOfer",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente", "NumCopiaOfer"],
      "identityColumns": []
    },
    "Clientes_CopiasPedidos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "NumCopiaPed",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente", "NumCopiaPed"],
      "identityColumns": []
    },
    "Clientes_Datos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCompañia",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Cliente",
          "dataType": "varchar",
          "maxLength": 120,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Direccion",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Ciudad",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Provincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodPostal",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Pais",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdContactoA",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdContactoF",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NumTelefono",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Extension",
          "dataType": "varchar",
          "maxLength": 30,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NumFax",
          "dataType": "varchar",
          "maxLength": 30,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "E_Mail",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Web",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaAlta",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Notas",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Nif",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Nif2",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Padre",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Nivel",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "MiCod",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Bloqueado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RazonSocial",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdContactoCliente",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TipoTransporte",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDelegacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((-1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPoblacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdProvincia",
          "dataType": "varchar",
          "maxLength": 3,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPais",
          "dataType": "varchar",
          "maxLength": 2,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Kmts",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCalendario",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipoOtro",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdRelacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RappelsPorPlanta",
          "dataType": "bit",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "EsUbicacion",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Cliente_Contado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMotivoBloqueo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEmpleadoBloqueo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdContactoG",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDelegacionCli",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_PersonaNombre",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_PersonaApellidos",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Observaciones",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_Activo",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdVendedor1",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_ComisionVendedor1",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdVendedor2",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_ComisionVendedor2",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdVendedor3",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_ComisionVendedor3",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdVendedor4",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_ComisionVendedor4",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_TextoLibre1",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_TextoLibre2",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_TextoLibre3",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_TextoLibre4",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_TextoLibre5",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdFormaPago",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdTipoEfecto",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_IdAgencia",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PedidoPlantilla",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PedidoEnviarEmail",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PedidoEmail",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PedidoReceptor",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PresupuestoPlantilla",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PresupuestoEnviarEmail",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PresupuestoEmail",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_PresupuestoReceptor",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_AlbaranPlantilla",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_AlbaranEnviarEmail",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_AlbaranEmail",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_AlbaranReceptor",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_FacturaPlantilla",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_FacturaEnviarEmail",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_FacturaEmail",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_FacturaReceptor",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_Observaciones",
          "dataType": "varchar",
          "maxLength": 2000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_VerObsEnDocumentos",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Datos_Comerciales": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Sector",
          "dataType": "varchar",
          "maxLength": 5,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CapitalSocial",
          "dataType": "float",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Facturacion",
          "dataType": "float",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Empleados",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Origen",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ObservacionesCom",
          "dataType": "nvarchar",
          "maxLength": 4000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Clasificacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Mailing",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiasTransporte",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaEntrega",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEmpleado",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Zona",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Atencion",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DirEntrega",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NotaAlb",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NotaFact",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TextoFactura",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TextoAlbaran",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImpFactura",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImpAlbaran",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImpPedido",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImpOferta",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoEAN",
          "dataType": "varchar",
          "maxLength": 13,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdAgente",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdRuta",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdIdioma",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DescripDelOrigen",
          "dataType": "nvarchar",
          "maxLength": 500,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DescripDelEstado",
          "dataType": "nvarchar",
          "maxLength": 500,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEstadoComercial",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CreadoPorId",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaModificacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ModificadoPorId",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Departamento",
          "dataType": "nvarchar",
          "maxLength": 500,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteOportunidad",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NombreContacto",
          "dataType": "nvarchar",
          "maxLength": 500,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CargoContacto",
          "dataType": "nvarchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TelMovilContacto",
          "dataType": "nvarchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Certificado",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Tipo_EFactura",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Tipo_Envio_EFactura",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaCreacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipoRelacionContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "UltimaActuacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdInforme_FacturaE",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "EmailContacto",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Factura_Impresa",
          "dataType": "bit",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "B2BAdjuntarFactura",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "B2BAdjuntarGesDocu",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Datos_Economicos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdLista",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FormaPago",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Descuento",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ProntoPago",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdIva",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CopiasFactura",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CopiasAlbaran",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Cuenta",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDomiciliacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiaPago1",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiaPago2",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiaPago3",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Riesgo",
          "dataType": "float",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Riesgo_Euro",
          "dataType": "float",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPortes",
          "dataType": "varchar",
          "maxLength": 1,
          "nullable": true,
          "defaultValue": "('D')",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AlbValorado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AlbPorPedido",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "PeriodicidadPago",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "MesVacaciones",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTransportista",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMoneda",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NSerie",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Precodigo",
          "dataType": "varchar",
          "maxLength": 10,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FacturarPorContacto",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TipoFacturacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RecEquivalencia",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SerieContrato",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CopiasPedido",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CopiasOferta",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FacturarPorReferencia",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NumPedidoObligado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiasPrecioMin",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdRegimen",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "MaxFacturacion",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdListaTra",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NoBloqueaRiesgo",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipoPedido",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "DiasCarencia",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AgruparEfectos",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdListaCont",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTarifa",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDelegacionDto",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((-1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FactXContrato",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdImpuestoIndirecto",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "F_Nacimiento",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Sexo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Asociacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "No_Paga_Cuota",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Categoria",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdProveedor",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "F_Alta_Socio",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "F_Baja_Socio",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Aportacion_Socio",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AplicarLeyMorosidad",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CambioEnFactura",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMetodoPrecio",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdGrupoRet",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IvaDefecto",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdLineaDescuento",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdModoFacturacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Datos_GCredito_Categoria": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCategoria",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCategoria"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Datos_GCredito_TSocio": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdTipoSocio",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdTipoSocio"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Delegaciones": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdDelegacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Nombre",
          "dataType": "varchar",
          "maxLength": 120,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Direccion",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPais",
          "dataType": "varchar",
          "maxLength": 2,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Pais",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdProvincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Provincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCiudad",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Ciudad",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodPostal",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdDelegacion", "IdCliente"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Efectos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdFactura",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdEfecto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEjercicio",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDelegacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Tipo",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEstado",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaVencimiento",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaCobro",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEmpleado",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDomiciliacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDomiciliacionCli",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Remesa",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaRemesa",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Observaciones",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Marca",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCentroCoste",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CuentaCli",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaRecepcion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdNumControl",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CuentaGastos",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaCreacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaVtoTeorico",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMonedaImporte",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteTotal",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteACuenta",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteCambioEuros",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteFechaCambio",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteCambioBloq",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMonedaGastos",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Gastos",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "GastosCambioEuros",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "GastosFechaCambio",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "GastosCambioBloq",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Gastos_Info",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdFacturaProvGen",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FacturaAnticipada",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Bloqueado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMotivoBloqueo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEmpleadoBloqueo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Anotaciones",
          "dataType": "varchar",
          "maxLength": 2000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaVtoFactoring",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipoOperacionContable",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((1))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdAnticipo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdTipoCuentaGastos",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdFianza",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Base_Deterioro_Euros",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Base_Deterioro_Moneda",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Compensacion",
          "dataType": "bit",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdFactura", "IdEfecto"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Efectos_Cobros_Facturas": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdFactura",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdEfecto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdFacturaAsignada",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "ImporteAsignado",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ImporteCobrado",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdFactura", "IdEfecto", "IdFacturaAsignada"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Efectos_ErroresAsignacionRemesa": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdError",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "EsError",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdError"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Efectos_Historico": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdFactura",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEfecto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEstadoAnterior",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdEstadoNuevo",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Importe",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Fecha",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdDoc"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Modos_Facturacion": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdModoFacturacion",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descripcion",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Observaciones",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AgruparContacto",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdModoFacturacion"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Niveles": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "Nivel",
          "dataType": "tinyint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        }
      ],
      "primaryKeys": ["Nivel"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Origen": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "Origen",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "DComision",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdCanal",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["Origen"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_PreciosGrupos_OrdenAplicacion": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "Codigo",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Orden",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["Codigo"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Riesgos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdPadre",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoPed",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoAlb",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoFact",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoImpagados",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoRecibidos",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoNoRecibidos",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "RiesgoAlquiler",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "AnticiposFianzas",
          "dataType": "decimal",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente"],
      "identityColumns": []
    },
    "Clientes_Sectores": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "Sector",
          "dataType": "varchar",
          "maxLength": 5,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "DescripcionSec",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["Sector"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Subcuentas": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdTipoCuentaOperacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Subcuenta",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente", "IdTipoCuentaOperacion"],
      "identityColumns": ["IdDoc"]
    },
    "Clientes_Tipos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CuentaVentas",
          "dataType": "varchar",
          "maxLength": 12,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdIVADefecto",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdTipo"],
      "identityColumns": ["IdDoc"]
    },
    "Conf_Clientes": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdCliente",
          "dataType": "varchar",
          "maxLength": 15,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdCliente"],
      "identityColumns": []
    },
    "Conf_Clientes_Efectos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdFactura",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdEfecto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "CREATE DEFAULT [dbo].[NUMERO_DEFAULT]\r\n    AS 0;\r\n\r\n",
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdFactura", "IdEfecto"],
      "identityColumns": []
    },
    "Conf_Contactos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdContacto"],
      "identityColumns": []
    },
    "Contactos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Nombre",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Direccion",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPoblacion",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Ciudad",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdProvincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Provincia",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodPostal",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdPais",
          "dataType": "varchar",
          "maxLength": 2,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Pais",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Cargo",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TelefonoTrabajo",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ExtensionTrabajo",
          "dataType": "varchar",
          "maxLength": 30,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TelefonoCasa",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "TelefonoMovil",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NumFax",
          "dataType": "varchar",
          "maxLength": 30,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "E_Mail",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "NIF",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "EnvioInformacion",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Departamento",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoEAN",
          "dataType": "varchar",
          "maxLength": 13,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Observaciones",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Zona",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdRuta",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdIdioma",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Bloqueado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdMotivoBloqueo",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaCreacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CreadoPorId",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaModificacion",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ModificadoPorId",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Empresa",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_PersonaNombre",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_PersonaApellidos",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Direccion2",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ECommerce_Borrado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoOC",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoOG",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoUT",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "SWIN_DireccionEntrega",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CodigoOP",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdContacto"],
      "identityColumns": ["IdDoc"]
    },
    "Contactos_Objetos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Objeto",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdDocObjeto",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdContactoObj",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdEstado",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaHasta",
          "dataType": "smalldatetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Departamento",
          "dataType": "nvarchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "CargoContacto",
          "dataType": "nvarchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": [
        "IdContacto",
        "Objeto",
        "IdDocObjeto",
        "IdContactoObj",
        "IdTipo"
      ],
      "identityColumns": ["IdDoc"]
    },
    "Contactos_Tipos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Descrip",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdTipo"],
      "identityColumns": ["IdDoc"]
    },
    "Contactos_Tipos_Objetos": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdTipo",
          "dataType": "smallint",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "Objeto",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdTipo"],
      "identityColumns": ["IdDoc"]
    },
    "ECommerce_Int_ClientesDirecciones": {
      "schema": "dbo",
      "type": "BASE TABLE",
      "columns": [
        {
          "name": "IdRegistro",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": true,
          "isIdentity": false
        },
        {
          "name": "IdTipo",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Error",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "ErrorDesc",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDocCliente",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDocContacto",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_idCustomer",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_idAddress",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_lastName",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_firstName",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_email",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_note",
          "dataType": "varchar",
          "maxLength": 1000,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_dateAdd",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_idCountry",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_idProvincia",
          "dataType": "int",
          "maxLength": null,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_alias",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_company",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_address1",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_address2",
          "dataType": "varchar",
          "maxLength": 255,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_postcode",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_city",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_other",
          "dataType": "varchar",
          "maxLength": 250,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_phone",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_phoneMobile",
          "dataType": "varchar",
          "maxLength": 100,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Int_dni",
          "dataType": "varchar",
          "maxLength": 20,
          "nullable": true,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "IdDoc",
          "dataType": "int",
          "maxLength": null,
          "nullable": false,
          "defaultValue": null,
          "isPrimaryKey": false,
          "isIdentity": true
        },
        {
          "name": "InsertUpdate",
          "dataType": "bit",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "((0))",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "Usuario",
          "dataType": "varchar",
          "maxLength": 50,
          "nullable": false,
          "defaultValue": "(user_name())",
          "isPrimaryKey": false,
          "isIdentity": false
        },
        {
          "name": "FechaInsertUpdate",
          "dataType": "datetime",
          "maxLength": null,
          "nullable": false,
          "defaultValue": "(getdate())",
          "isPrimaryKey": false,
          "isIdentity": false
        }
      ],
      "primaryKeys": ["IdRegistro"],
      "identityColumns": ["IdDoc"]
    }
  },
  "relationships": [
    {
      "name": "Ahora_Planes_Clientes_Tipos_IdPlan_FK",
      "parentTable": "Ahora_Planes_Clientes_Tipos",
      "parentColumn": "IdPlan",
      "referencedTable": "Ahora_Planes_Contables",
      "referencedColumn": "IdPlan",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Albaranes_Envio_IDCLIENTE",
      "parentTable": "Albaranes_Envio",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Almacen_Hist_Mov_IdCliente",
      "parentTable": "Almacen_Hist_Mov",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Almacenes_IDCLIENTE",
      "parentTable": "Almacenes",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_AlqOper_Servicios_Contactos",
      "parentTable": "AlqOper_Servicios",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "SET_NULL",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_AlqOper_Servicios_IdCli",
      "parentTable": "AlqOper_Servicios",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_AsientosModelo_Conta_Apuntes_Temp_IdCliente",
      "parentTable": "AsientosModelo_Conta_Apuntes_Temp",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Cajas_Clientes_Datos",
      "parentTable": "Cajas",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Cajas_Movimientos_Efectos_Cajas_Movimientos_IdDocEfecto",
      "parentTable": "Cajas_Movimientos_Efectos",
      "parentColumn": "IdDocEfecto",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdDoc",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Cli_Tipos_Delegaciones_IdCli",
      "parentTable": "Cli_Tipos_Delegaciones",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Cli_Tipos_Delegacioness_IdTipo",
      "parentTable": "Cli_Tipos_Delegaciones",
      "parentColumn": "IdTipo",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "Clientes_Articulos_ACABADO_FK",
      "parentTable": "Clientes_Articulos",
      "parentColumn": "TipoAcabado",
      "referencedTable": "Acabados_Tipos",
      "referencedColumn": "TipoAcabado",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Articulos_Propiedades_IdArticulo_Articulos",
      "parentTable": "Clientes_Articulos_Propiedades",
      "parentColumn": "IdArticulo",
      "referencedTable": "Articulos",
      "referencedColumn": "IdArticulo",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Articulos_Propiedades_IdCliente_Clientes_Datos",
      "parentTable": "Clientes_Articulos_Propiedades",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Contactos_CRM_IdCliente",
      "parentTable": "Clientes_Contactos_CRM",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Contactos_CRM_IdContato",
      "parentTable": "Clientes_Contactos_CRM",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "clientes_CRM_IdEstado_FK",
      "parentTable": "Clientes_CRM",
      "parentColumn": "IdEstado",
      "referencedTable": "Clientes_CRM_Estados",
      "referencedColumn": "IdEstado",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_COMPAÑIA_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "IdCompañia",
      "referencedTable": "Clientes_Compañias",
      "referencedColumn": "IdCompañia",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_IDPAIS_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "IdPais",
      "referencedTable": "Geo_Paises",
      "referencedColumn": "IdPais",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_IDPOBLACION_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "IdPoblacion",
      "referencedTable": "Geo_Poblaciones",
      "referencedColumn": "IdPoblacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_IDTIPOOTRO_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "IdTipoOtro",
      "referencedTable": "Clientes_TiposOtros",
      "referencedColumn": "IdTipoOtro",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_NIVEL_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "Nivel",
      "referencedTable": "Clientes_Niveles",
      "referencedColumn": "Nivel",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_SWINAlbPlantilla_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "SWIN_AlbaranPlantilla",
      "referencedTable": "CEESI_Listados",
      "referencedColumn": "IdDoc",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_SWINFacPlantilla_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "SWIN_FacturaPlantilla",
      "referencedTable": "CEESI_Listados",
      "referencedColumn": "IdDoc",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_SWINPedPlantilla_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "SWIN_PedidoPlantilla",
      "referencedTable": "CEESI_Listados",
      "referencedColumn": "IdDoc",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_TIPO_FK",
      "parentTable": "Clientes_Datos",
      "parentColumn": "IdTipo",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Com_CLASIF_FK",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Clasificacion",
      "referencedTable": "Clasificacion",
      "referencedColumn": "Clasificacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Com_ORIGEN_FK",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Origen",
      "referencedTable": "Clientes_Origen",
      "referencedColumn": "Origen",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Com_SECTOR_FK",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Sector",
      "referencedTable": "Clientes_Sectores",
      "referencedColumn": "Sector",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Comerciales_ZONA_FK",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Zona",
      "referencedTable": "Zonas",
      "referencedColumn": "Zona",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_datos_comerciales_Crm_Clientes_Comerciales_estados",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "IdEstadoComercial",
      "referencedTable": "Crm_Clientes_Comerciales_estados",
      "referencedColumn": "IdEstado",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_datos_comerciales_eFactura_Tipos",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Tipo_EFactura",
      "referencedTable": "eFactura_Tipos",
      "referencedColumn": "Tipo_Factura",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_datos_comerciales_eFactura_Tipos_Envios",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Tipo_Envio_EFactura",
      "referencedTable": "eFactura_Tipos_Envios",
      "referencedColumn": "Tipo_Envio",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_datos_comerciales_eFactura_Tipos_Envios",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "Tipo_EFactura",
      "referencedTable": "eFactura_Tipos_Envios",
      "referencedColumn": "Tipo_Factura",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Comerciales_IdInforme_FacturaE",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "IdInforme_FacturaE",
      "referencedTable": "CEESI_Informes",
      "referencedColumn": "IdInforme",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Comerciales_IDIOMA",
      "parentTable": "Clientes_Datos_Comerciales",
      "parentColumn": "IdIdioma",
      "referencedTable": "Idiomas",
      "referencedColumn": "IdIdioma",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_FACT_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "TipoFacturacion",
      "referencedTable": "ClientesFact_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_IDIVA_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdIva",
      "referencedTable": "IVAs",
      "referencedColumn": "IdIVA",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_IDMONEDA_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdMoneda",
      "referencedTable": "Moneda",
      "referencedColumn": "IdMoneda",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_IDPORTES_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdPortes",
      "referencedTable": "Portes",
      "referencedColumn": "IdPortes",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_MESES_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "MesVacaciones",
      "referencedTable": "Meses",
      "referencedColumn": "MesVacaciones",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Eco_NSERIE_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "NSerie",
      "referencedTable": "Series_Facturacion",
      "referencedColumn": "SerieFactura",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Economicos_IdImpuesto_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdImpuestoIndirecto",
      "referencedTable": "Impuestos_Indirectos",
      "referencedColumn": "IdImpuesto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Economicos_TIPOPEDIDO_FK",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdTipoPedido",
      "referencedTable": "Pedidos_Cli_Tipos",
      "referencedColumn": "IdTipoPedido",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_FormaPago",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "FormaPago",
      "referencedTable": "FormasPago",
      "referencedColumn": "IdFormaPago",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdCliente",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdGrupoRet",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdGrupoRet",
      "referencedTable": "Retenciones_Grupos",
      "referencedColumn": "IdGrupoRet",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdLineaDescuento",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdLineaDescuento",
      "referencedTable": "Lineas_Descuento_Cabecera",
      "referencedColumn": "IdLineaDescuento",
      "deleteAction": "SET_NULL",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdLista",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdLista",
      "referencedTable": "Listas_Precios_Cli",
      "referencedColumn": "IdLista",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdListaTra",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdListaTra",
      "referencedTable": "Listas_Precios_Tra",
      "referencedColumn": "IdLista",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdMet",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdMetodoPrecio",
      "referencedTable": "Metodo_Calculo_Precios",
      "referencedColumn": "IdMetodo",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdModoFacturacion",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdModoFacturacion",
      "referencedTable": "Clientes_Modos_Facturacion",
      "referencedColumn": "IdModoFacturacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Datos_Economicos_IdTransportista",
      "parentTable": "Clientes_Datos_Economicos",
      "parentColumn": "IdTransportista",
      "referencedTable": "Prov_Datos",
      "referencedColumn": "IdProveedor",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_IdCliente",
      "parentTable": "Clientes_Domiciliaciones",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_Empresa_Clientes_IdEmpresa",
      "parentTable": "Clientes_Domiciliaciones_Empresa",
      "parentColumn": "IdEmpresa",
      "referencedTable": "Empresa",
      "referencedColumn": "IdEmpresa",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_Empresa_IdCliente",
      "parentTable": "Clientes_Domiciliaciones_Empresa",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_Empresa_IdDomiciliacion",
      "parentTable": "Clientes_Domiciliaciones_Empresa",
      "parentColumn": "IdDomiciliacion",
      "referencedTable": "Empresas_Domiciliaciones",
      "referencedColumn": "IdDomiciliacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_Mandatos_Mandatos",
      "parentTable": "Clientes_Domiciliaciones_Mandatos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Domiciliaciones_Mandatos_Mandatos",
      "parentTable": "Clientes_Domiciliaciones_Mandatos",
      "parentColumn": "IdDomiciliacion",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdDomiciliacion",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdAnticipo",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdAnticipo",
      "referencedTable": "Anticipos_cli",
      "referencedColumn": "IdAnticipo",
      "deleteAction": "SET_NULL",
      "updateAction": "SET_NULL",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdCliente",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "SET_NULL",
      "updateAction": "SET_NULL",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdDomiciliacion",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdDomiciliacion",
      "referencedTable": "Empresas_Domiciliaciones",
      "referencedColumn": "IdDomiciliacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdDomiciliacionCli",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdDomiciliacionCli",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdDomiciliacionCli",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdDomiciliacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdEmpleado",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdEmpleado",
      "referencedTable": "Empleados_Datos",
      "referencedColumn": "IdEmpleado",
      "deleteAction": "SET_NULL",
      "updateAction": "SET_NULL",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdMonedaGastos",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdMonedaGastos",
      "referencedTable": "Moneda",
      "referencedColumn": "IdMoneda",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdMonedaImporte",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdMonedaImporte",
      "referencedTable": "Moneda",
      "referencedColumn": "IdMoneda",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdTipoCuentaGastos",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdTipoCuentaGastos",
      "referencedTable": "Cuentas_TiposCuenta",
      "referencedColumn": "IdTipoCuenta",
      "deleteAction": "SET_NULL",
      "updateAction": "SET_NULL",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_IdTipoOperacionContable",
      "parentTable": "Clientes_Efectos",
      "parentColumn": "IdTipoOperacionContable",
      "referencedTable": "Cuentas_TiposOperacion",
      "referencedColumn": "IdTipoOperacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_Cobros_Facturas_IdFactura_IdEfecto",
      "parentTable": "Clientes_Efectos_Cobros_Facturas",
      "parentColumn": "IdEfecto",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdEfecto",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Efectos_Cobros_Facturas_IdFactura_IdEfecto",
      "parentTable": "Clientes_Efectos_Cobros_Facturas",
      "parentColumn": "IdFactura",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdFactura",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Listas_Precios_Dlg",
      "parentTable": "Clientes_Listas_Precios",
      "parentColumn": "IdDelegacion",
      "referencedTable": "Delegaciones",
      "referencedColumn": "IdDelegacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Listas_Precios_IdCli",
      "parentTable": "Clientes_Listas_Precios",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Listas_Precios_IdLista",
      "parentTable": "Clientes_Listas_Precios",
      "parentColumn": "IdLista",
      "referencedTable": "Listas_Precios_Cli",
      "referencedColumn": "IdLista",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_PreciosGrupos_IdArticulo",
      "parentTable": "Clientes_PreciosGrupos",
      "parentColumn": "IdArticulo",
      "referencedTable": "Articulos",
      "referencedColumn": "IdArticulo",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_PreciosGrupos_IdCliente",
      "parentTable": "Clientes_PreciosGrupos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_PreciosGrupos_IdFamilia",
      "parentTable": "Clientes_PreciosGrupos",
      "parentColumn": "IdFamilia",
      "referencedTable": "Articulos_Familias",
      "referencedColumn": "IdFamilia",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_PreciosGrupos_IdMarca",
      "parentTable": "Clientes_PreciosGrupos",
      "parentColumn": "IdMarca",
      "referencedTable": "PartesMarcasMaquinas",
      "referencedColumn": "IdMarcaMaquina",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "Clientes_Relaciones_TIPO_FK",
      "parentTable": "Clientes_Relaciones",
      "parentColumn": "IdTipo",
      "referencedTable": "Clientes_Relaciones_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Remesas_IdEjercicio",
      "parentTable": "Clientes_Remesas",
      "parentColumn": "IdEjercicio",
      "referencedTable": "Conta_Ejercicios",
      "referencedColumn": "IdEjercicio",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Remesas_Tipo",
      "parentTable": "Clientes_Remesas",
      "parentColumn": "Tipo",
      "referencedTable": "Remesas_Tipos",
      "referencedColumn": "IdTipoRemesa",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Subcuentas_IdCliente",
      "parentTable": "Clientes_Subcuentas",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Clientes_Subcuentas_IdTipoCuentaOperacion",
      "parentTable": "Clientes_Subcuentas",
      "parentColumn": "IdTipoCuentaOperacion",
      "referencedTable": "Cuentas_TiposCuentaOperacion",
      "referencedColumn": "IdTipoCuentaOperacion",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Conf_Clientes_IdCliente",
      "parentTable": "Conf_Clientes",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Conf_Clientes_Efecots_IdFactura_IdEfecto",
      "parentTable": "Conf_Clientes_Efectos",
      "parentColumn": "IdFactura",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdFactura",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Conf_Clientes_Efecots_IdFactura_IdEfecto",
      "parentTable": "Conf_Clientes_Efectos",
      "parentColumn": "IdEfecto",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdEfecto",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Conf_Contactos_IdContacto",
      "parentTable": "Conf_Contactos",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Conta_Apuntes_IdCliente",
      "parentTable": "Conta_Apuntes",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Conta_Apuntes_Temporal_IdCliente",
      "parentTable": "Conta_Apuntes_Temporal",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Contactos_Objetos_IdContacto",
      "parentTable": "Contactos_Objetos",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Contratos_Cuotas_IDCLIENTE",
      "parentTable": "Contratos_Cuotas",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Contratos_Mtos_Copiadoras_IdCliente",
      "parentTable": "Contratos_Mtos_Copiadoras",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Contratos_Mtos_Copiadoras_IdClienteFra",
      "parentTable": "Contratos_Mtos_Copiadoras",
      "parentColumn": "IdCliente_Fra",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Contratos_Mtos_Copiadoras_IdContacto",
      "parentTable": "Contratos_Mtos_Copiadoras",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_crm_Clientes_aSeguir_Cli",
      "parentTable": "crm_Clientes_aSeguir",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_crm_Clientes_aSeguir_Empleados",
      "parentTable": "crm_Clientes_aSeguir",
      "parentColumn": "IdEmpleado",
      "referencedTable": "Empleados_Datos",
      "referencedColumn": "IdEmpleado",
      "deleteAction": "CASCADE",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_crm_Oportunidades_Clientes",
      "parentTable": "crm_Oportunidades",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "ECommerce_Int_Pedidos_Cli_Cabecera_IdCliente_FK",
      "parentTable": "ECommerce_Int_Pedidos_Cli_Cabecera",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "ECommerce_Int_Pedidos_Cli_Cabecera_IdContacto_FK",
      "parentTable": "ECommerce_Int_Pedidos_Cli_Cabecera",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Efectos_Temporal_Operaciones_Cobro_Facturas_IdDocCE",
      "parentTable": "Efectos_Temporal_Operaciones_Cobro_Facturas",
      "parentColumn": "IdDocCE",
      "referencedTable": "Clientes_Efectos",
      "referencedColumn": "IdDoc",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_Embalajes_Retornos_CLI",
      "parentTable": "Embalajes_Retornos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Empresa_IdClienteRelacionado",
      "parentTable": "Empresa",
      "parentColumn": "IdClienteRelacionado",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Envios_Mail_Pendientes_Contactos",
      "parentTable": "Envios_Mail_Pendientes",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Envios_Mails_Historico_Contactos",
      "parentTable": "Envios_Mails_Historico",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Facturas_Cli_Cab_IdCliente_FK",
      "parentTable": "Facturas_Cli_Cab",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Facturas_Cli_Cab_IdCliente_IdDomiciliacion",
      "parentTable": "Facturas_Cli_Cab",
      "parentColumn": "IdDomiciliacion",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdDomiciliacion",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Facturas_Cli_Cab_IdCliente_IdDomiciliacion",
      "parentTable": "Facturas_Cli_Cab",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Domiciliaciones",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Facturas_Cli_Cab_IdTipoCli",
      "parentTable": "Facturas_Cli_Cab",
      "parentColumn": "IdTipoCli",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Historico_Cambios_Cliente_IDCliente",
      "parentTable": "Historico_Cambios_Cliente_Factura",
      "parentColumn": "IdClienteNuevo",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Historico_Cambios_Cliente_IDClienteANT",
      "parentTable": "Historico_Cambios_Cliente_Factura",
      "parentColumn": "IdClienteAnt",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Lanzamientos_Clientes_Datos",
      "parentTable": "Lanzamientos",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Lanzamientos_Contactos",
      "parentTable": "Lanzamientos",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_LibroIva_IdCliente",
      "parentTable": "LibroIva",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "SET_NULL",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_LibroIVA_Manual_IdCliente",
      "parentTable": "LibroIVA_Manual",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_LibroIVA_Manual_IdContacto",
      "parentTable": "LibroIVA_Manual",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_LibroRetenciones_IdCliente",
      "parentTable": "LibroRetenciones",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Ofertas_Cli_Cab_IdTipoCli_FK",
      "parentTable": "Ofertas_Cli_Cabecera",
      "parentColumn": "IdTipoCli",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Ordenes_IdCliente_FK",
      "parentTable": "Ordenes",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "SET_NULL",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "Ped_Cli_Cab_IDCLI_CA",
      "parentTable": "Pedidos_Cli_Cabecera",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Ped_Cli_Cab_IdTipoCli_FK",
      "parentTable": "Pedidos_Cli_Cabecera",
      "parentColumn": "IdTipoCli",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Ped_Cli_Cab_ORI_CA",
      "parentTable": "Pedidos_Cli_Cabecera",
      "parentColumn": "Origen",
      "referencedTable": "Clientes_Origen",
      "referencedColumn": "Origen",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Promociones_Clientes_IdProm",
      "parentTable": "Promociones_Clientes",
      "parentColumn": "IdPromocion",
      "referencedTable": "Promociones",
      "referencedColumn": "IdPromocion",
      "deleteAction": "CASCADE",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "Prov_Datos_Com_ORIGEN_FK",
      "parentTable": "Prov_Datos_Comerciales",
      "parentColumn": "Origen",
      "referencedTable": "Clientes_Origen",
      "referencedColumn": "Origen",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Prov_Datos_Com_SECTOR_FK",
      "parentTable": "Prov_Datos_Comerciales",
      "parentColumn": "Sector",
      "referencedTable": "Clientes_Sectores",
      "referencedColumn": "Sector",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Proyectos_ORIGEN_FK",
      "parentTable": "Proyectos",
      "parentColumn": "Origen",
      "referencedTable": "Clientes_Origen",
      "referencedColumn": "Origen",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Proyectos_Sector_FK",
      "parentTable": "Proyectos",
      "parentColumn": "Sector",
      "referencedTable": "Clientes_Sectores",
      "referencedColumn": "Sector",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "Proyectos_CRM_Clientes_IDESTADO_FK",
      "parentTable": "Proyectos_CRM_Clientes",
      "parentColumn": "IdEstado",
      "referencedTable": "Proyectos_CRM_Clientes_Estados",
      "referencedColumn": "IdEstado",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_ReferenciaCatastral_Proveedor_IdCliente",
      "parentTable": "ReferenciaCatastral_Proveedor",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "CASCADE",
      "isDisabled": false
    },
    {
      "name": "FK_TEmp_Asist_GestionFacturasCli_Fil_IdCliente",
      "parentTable": "Temp_Asist_GestionFacturasCli",
      "parentColumn": "Fil_IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TEmp_Asist_GestionFacturasCli_Fil_IdContacto",
      "parentTable": "Temp_Asist_GestionFacturasCli",
      "parentColumn": "Fil_IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TEmp_Asist_GestionFacturasCli_Fil_IdTipo",
      "parentTable": "Temp_Asist_GestionFacturasCli",
      "parentColumn": "Fil_IdTipo",
      "referencedTable": "Clientes_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TEmp_Asist_GestionFacturasCli_Fil_IdTipoOtro",
      "parentTable": "Temp_Asist_GestionFacturasCli",
      "parentColumn": "Fil_IdTipo",
      "referencedTable": "Clientes_TiposOtros",
      "referencedColumn": "IdTipoOtro",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TEmp_Asist_GestionFacturasCli_Fil_Tipofact",
      "parentTable": "Temp_Asist_GestionFacturasCli",
      "parentColumn": "Fil_TipoFact",
      "referencedTable": "ClientesFact_Tipos",
      "referencedColumn": "IdTipo",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TempAsis_PDA_OrdenesCarga_Cabecera_IdCliente",
      "parentTable": "TempAsis_PDA_OrdenesCarga_Cabecera",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TempAsistente_Cabecera_IdClienteNew",
      "parentTable": "TempAsistente_Cabecera",
      "parentColumn": "IdClienteNew",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TempAsistente_Cabecera_IdContactoCliNew",
      "parentTable": "TempAsistente_Cabecera",
      "parentColumn": "IdContactoCliNew",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TempAsistente_Cabecera_IdContactoProvNew",
      "parentTable": "TempAsistente_Cabecera",
      "parentColumn": "IdContactoProvNew",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Tickets_Clientes_Datos",
      "parentTable": "Tickets",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_Tickets_Contactos",
      "parentTable": "Tickets",
      "parentColumn": "IdContacto",
      "referencedTable": "Contactos",
      "referencedColumn": "IdContacto",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    },
    {
      "name": "FK_TPV_No_Venta_IDCLIENTE",
      "parentTable": "TPV_No_Venta",
      "parentColumn": "IdCliente",
      "referencedTable": "Clientes_Datos",
      "referencedColumn": "IdCliente",
      "deleteAction": "NO_ACTION",
      "updateAction": "NO_ACTION",
      "isDisabled": false
    }
  ],
  "triggers": [
    {
      "name": "Clientes_Articulos_ITrig",
      "tableName": "Clientes_Articulos",
      "type": "SQL_TRIGGER",
      "definition": "/****** Objeto:  desencadenador dbo.Clientes_Articulos_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:47 ******/\r\nCREATE TRIGGER [Clientes_Articulos_ITrig] \r\nON dbo.Clientes_Articulos \r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Articulos\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT IdArticulo)\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tArticulos\r\n\t\tWHERE \tIdArticulo IN \t(SELECT DISTINCT (IdArticulo)\r\n\t\t\t\t\tFROM Inserted))<>@Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13166, 'Articulo No Existente, Soy Clientes_Articulos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n/************************************************************************************************************************* \r\n\tComprobar integridad con tabla Principal 'Articulos' (IdEmbalaje)\r\n*************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT IdEmbalaje)\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tArticulos\r\n\t\tWHERE \tIdArticulo IN \t(SELECT DISTINCT (IdEmbalaje)\r\n\t\t\t\t\tFROM Inserted))<>@Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13490, 'Embalaje No Existente, Soy Clientes_Articulos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Datos\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Datos\r\n\t\tWHERE \tIdCliente In (SELECT DISTINCT (IdCliente) FROM inserted))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13298, 'Cliente No Existente, Soy Clientes_Articulos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n/***************************************************************************************************************************\r\n\tCompruebo integridad con tabla Clientes_Contactos\r\n****************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente+Convert(Varchar,IdContacto)))\r\n\tFROM \tInserted\r\n\tWHERE \tIdContacto IS NOT NULL\r\n\t\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Contactos\r\n\t\tWHERE \tIdCliente+ Convert(Varchar,IdContacto) \r\n\t\t\tIN \t(SELECT DISTINCT (IdCliente+ Convert(Varchar,IdContacto)) \r\n\t\t\t\tFROM inserted\r\n\t\t\t\tWHERE \tIdContacto IS NOT NULL))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13355, 'Contacto de Cliente No Existente, Soy Clientes_Datos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\t-- si cambia el embalaje a un embalaje de PALETIZADO, recalculamos su cantidad bulto\r\n\tIF EXISTS (SELECT * FROM Inserted I\r\n\t\t\t\t\tINNER JOIN Disposicion_Paletizado P ON ISNULL(I.IdEmbalaje,'') = P.IdEmbalaje_Disp\r\n\t\t\t\t\tWHERE I.IdEmbalaje IS NOT NULL\r\n\t) BEGIN\r\n\t\tUPDATE CA SET Cantidad =  ISNULL(dbo.funDisposicion_Paletizado_getCantidadBulto(I.IdEmbalaje),I.Cantidad)\r\n\t\t\tFROM Clientes_Articulos CA INNER JOIN Inserted I ON CA.IdArticulo = I.IdArticulo\r\n\t\t\tINNER JOIN Disposicion_Paletizado P ON ISNULL(I.IdEmbalaje,'') = P.IdEmbalaje_Disp\r\n\tEND\r\n\r\nEND --@@ROWCOUNT",
      "isDisabled": false
    },
    {
      "name": "Clientes_Articulos_UTrig",
      "tableName": "Clientes_Articulos",
      "type": "SQL_TRIGGER",
      "definition": "/****** Objeto:  desencadenador dbo.Clientes_Articulos_UTrig  fecha de la secuencia de comandos: 14/06/01 14:21:48 ******/\r\nCREATE TRIGGER [Clientes_Articulos_UTrig] \r\nON dbo.Clientes_Articulos \r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n/*************************************************************************************************************************** \r\n\tComprobar integridad con tabla Principal Articulos\r\n****************************************************************************************************************************/\r\nIF UPDATE(IdArticulo) \r\nBEGIN\r\n\t\tSELECT \t@Ins=COUNT(DISTINCT IdArticulo)\r\n\t\tFROM \tInserted\r\n\r\n\t\tIF \t(SELECT COUNT(*) \r\n\t\t\tFROM \tArticulos\r\n\t\t\tWHERE \tIdArticulo IN \t(SELECT DISTINCT (IdArticulo)\r\n\t\t\t\t\t\tFROM Inserted))<>@Ins\r\n\r\n\t\t\tBEGIN\t\r\n\t\t\t\tPRINT dbo.Traducir(13166, 'Articulo No Existente, Soy Clientes_Articulos')\r\n\t\t\t\tROLLBACK TRANSACTION\r\n\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\r\nEND\r\n\r\n/************************************************************************************************************************* \r\n\tComprobar integridad con tabla Principal 'Articulos' (IdEmbalaje)\r\n*************************************************************************************************************************/\r\nIF UPDATE(IdEmbalaje)\r\nBEGIN\r\n\tSELECT \t@Ins=COUNT(DISTINCT IdEmbalaje)\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tArticulos\r\n\t\tWHERE \tIdArticulo IN \t(SELECT DISTINCT (IdEmbalaje)\r\n\t\t\t\t\tFROM Inserted))<>@Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13490, 'Embalaje No Existente, Soy Clientes_Articulos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Datos\r\n***************************************************************************************************************************/\r\nIF UPDATE(IdCliente)\r\nBEGIN \r\n\t/* Cuento el Nº de Clientes distintos insertado */\r\n\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente))\r\n\tFROM \tInserted\r\n\r\n\t/* Compruebo que todos los Clientes existen en la tabla principal */\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Datos\r\n\t\tWHERE \tIdCliente In (SELECT DISTINCT (IdCliente) FROM inserted))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13298, 'Cliente No Existente, Soy Clientes_Articulos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND\r\n\r\n/***************************************************************************************************************************\r\n\tCompruebo integridad con tabla Clientes_Contactos\r\n****************************************************************************************************************************/\r\nIF UPDATE(IdCliente) Or UPDATE(IdContacto)\r\nBEGIN\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente+Convert(Varchar,IdContacto)))\r\n\tFROM \tInserted\r\n\tWHERE \tIdContacto IS NOT NULL\r\n\t\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Contactos\r\n\t\tWHERE \tIdCliente+ Convert(Varchar,IdContacto) \r\n\t\t\tIN \t(SELECT DISTINCT (IdCliente+ Convert(Varchar,IdContacto)) \r\n\t\t\t\tFROM inserted\r\n\t\t\t\tWHERE \tIdContacto IS NOT NULL))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13355, 'Contacto de Cliente No Existente, Soy Clientes_Datos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND\r\n\t-- si cambia el embalaje a un embalaje de PALETIZADO, recalculamos su cantidad bulto\r\n\tIF EXISTS (SELECT * FROM Inserted I INNER JOIN Deleted D ON I.IdDoc = D.IdDoc\r\n\t\t\t\t\tINNER JOIN Disposicion_Paletizado P ON ISNULL(I.IdEmbalaje,'') = P.IdEmbalaje_Disp\r\n\t\t\t\t\tWHERE ISNULL(I.IdEmbalaje,'') <> ISNULL(D.IdEmbalaje,'') AND I.IdEmbalaje IS NOT NULL\r\n\t) BEGIN\r\n\t\tUPDATE CA SET Cantidad =  ISNULL(dbo.funDisposicion_Paletizado_getCantidadBulto(I.IdEmbalaje),I.Cantidad)\r\n\t\t\tFROM Clientes_Articulos CA INNER JOIN Inserted I ON CA.IdArticulo = I.IdArticulo\r\n\t\t\tINNER JOIN Disposicion_Paletizado P ON ISNULL(I.IdEmbalaje,'') = P.IdEmbalaje_Disp\r\n\tEND\r\n\r\nEND --@@ROWCOUNT",
      "isDisabled": false
    },

    {
      "name": "Clientes_CRM_ITrig",
      "tableName": "Clientes_CRM",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\nCREATE TRIGGER [Clientes_CRM_ITrig] \r\nON [Clientes_CRM]\r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE ( Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13301, 'CLIENTE No Existente, Soy Clientes_CRM')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_CRM_UTrig",
      "tableName": "Clientes_CRM",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\nCREATE TRIGGER [Clientes_CRM_UTrig] \r\nON [Clientes_CRM]\r\nFOR UPDATE\r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE ( Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13301, 'CLIENTE No Existente, Soy Clientes_CRM')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_CRM_Estados_UTrig",
      "tableName": "Clientes_CRM_Estados",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_CRM_Estados_UTrig]\r\nON [Clientes_CRM_Estados] \r\nFOR UPDATE \r\nAS\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t ------------------------------------------------------------------------------------\r\n\t -- NUNCA DEJAR MODIFICAR ESTADO 0\r\n\t ------------------------------------------------------------------------------------\r\n\tIF UPDATE(IdEstado) BEGIN\r\n\r\n\t\tIF EXISTS\r\n\t\t\t(SELECT * FROM Deleted WHERE IdEstado=0)\r\n\t\tBEGIN\r\n\t\t\tPRINT dbo.Traducir(13694, 'ES IMPOSIBLE MODIFICAR ESTADO 0')\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\t\r\n\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Conf_ITrig",
      "tableName": "Clientes_Datos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Clientes_Datos_Conf_ITrig] \r\nON Clientes_Datos\r\nFOR INSERT \r\nAS\r\n \r\nIF @@ROWCOUNT<>0 BEGIN\r\n\t-- insertar en configurables\r\n\tINSERT INTO Conf_Clientes (IdCliente) \r\n\tSELECT I.IdCliente \r\n\tFROM \r\n\t\tInserted I\r\n\t\tLEFT JOIN Conf_Clientes CC ON I.IdCliente = CC.IdCliente\r\n\tWHERE\r\n\t\tCC.IdCliente IS NULL\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Datos_ITrig",
      "tableName": "Clientes_Datos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Datos_ITrig] \r\nON [dbo].[Clientes_Datos] \r\nFOR INSERT \r\n\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n\r\n-- #NAME:\r\n---\t\t\t\tClientes_Datos_Utrig\r\n-- #CREATION: \r\n--\t\t\t\t(Sin Definir)\r\n-- #CLASIFICATION:\r\n\r\n\t\t--002-GESTION COMPRAS y VENTAS\r\n-- #DESCRIPTION:\r\n--\t\t\tAcciones en la actualización de Clientes_datos\r\n-- #PARAMETERS: \r\n\r\n\r\n-- #OBSERVATIONS:\r\n--\t\t\tNOTA CARMEN: AQUÍ HABRÍA QUE CREAR FK Y QUITAR TODAS LAS COMPROBACIONES DE LOS TRIGGERS.\r\n-- #CHANGES: \r\n\r\n--\t\t\t12/09/2016 T-48859 carmen -Quito la comprobación del NIF para el cleinte contado.\r\n--\t\t\t20201014-#15435-rromero: se evita generar cuentas contables a plantas\r\n--\t\t\t17/11/2020 #15535-avarela: Omitir la comprobación del cif en clientes nacionales no Españoles\r\n--\t\t\t21/02/2022 #17340 Crear un IdContactoG en las plantas igual que en los clientes\r\n--\t\t\t17/05/2022 #17746 Llevar NumTelefono solo al TelefonoMovil del Contacto \r\n-- #EXAMPLE: \r\n--\t\t\r\n-- =============================================\r\nAS\r\n\r\nDeclare @Ins Int\r\nDECLARE @XML XML\r\nDECLARE @STR VARCHAR(MAX)\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir insertar un cliente sin NIF si el parámetro CLIENTE_CIF_OBLIGATORIO es ON y su país\r\n-- tiene NIF obligatorio\r\n------------------------------------------------------------------------------------------------------\r\nIF dbo.Valor_Parametro('CLIENTES_CIF_OBLIGATORIO', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n  IF (SELECT COUNT(*) FROM Inserted I LEFT JOIN Geo_Paises GP ON I.IdPais = GP.IdPais WHERE I.Nivel=0 AND I.IdTipo<>-1 AND I.Cliente_Contado=0 AND ((I.IdPais IS NOT NULL AND GP.NIFNoObligatorio = 0 AND I.NIF IS NULL) OR (I.IdPais IS NULL AND I.NIF IS NULL)))>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13790, 'Falta el NIFCIF del cliente')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n  else\r\n\tIF (SELECT COUNT(*) FROM Inserted I inner join Clientes_Contactos CC on CC.idcontacto=I.idcontactoF LEFT JOIN Geo_Paises GP ON I.IdPais = GP.IdPais WHERE I.Nivel=0 AND I.IdTipo<>-1 AND I.Cliente_Contado=1 AND ((I.IdPais IS NOT NULL AND GP.NIFNoObligatorio = 0 AND CC.NIF IS NULL) OR (I.IdPais IS NULL AND CC.NIF IS NULL)))>0\r\n\t\tBEGIN\r\n\t\t\tPRINT dbo.Traducir(32523, 'Falta el NIFCIF del contacto del cliente')  \r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir insertar un cliente con un NIF existente\r\n------------------------------------------------------------------------------------------------------\r\nIF dbo.Valor_Parametro('CLIENTES_CIF_OBLIGATORIO', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n\tIF EXISTS(SELECT Ins.IdCliente FROM inserted Ins INNER JOIN Clientes_Datos cd ON cd.Nif =Ins.Nif\r\n\t WHERE Ins.idDoc <> cd.IdDoc AND Ins.Nivel=0 AND cd.Nivel=0\r\n\t ) BEGIN\r\n\t \r\n\t\tSELECT @XML = (SELECT DISTINCT Cd.IdCliente C FROM inserted Ins INNER JOIN Clientes_Datos cd ON cd.Nif =Ins.Nif\r\n\t\t\tWHERE Ins.idDoc <> cd.IdDoc AND Ins.Nivel=0 AND cd.Nivel=0 FOR XML PATH(''))\r\n\t\tSELECT @STR = CONVERT(VARCHAR(MAX),@XML)\r\n\t\tSELECT @STR= REPLACE(REPLACE(@STR,'<C>',''),'</C>',',')\r\n\t\tSELECT @STR = LEFT(@STR,LEN(@STR)-1)\r\n\t\tIF CHARINDEX(',',@STR)>0\r\n\t\t\tPRINT  dbo.sprintf5(dbo.Traducir(28677, 'Los NIFCIFs estan asignados a otros Clientes: %v'),@STR ,default,default,default,default)\r\n\t\tELSE\r\n\t\t\tPRINT  dbo.sprintf5(dbo.Traducir(28675, 'El NIFCIF esta asignado a otro Cliente: %v'),@STR ,default,default,default,default)\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\t \t \r\n\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir insertar un cliente con un NIF incorrecto si el parámetro NIF_NACIONAL_COMPROBAR es ON\r\n------------------------------------------------------------------------------------------------------\r\n  IF dbo.Valor_Parametro('NIF_NACIONAL_COMPROBAR', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n  IF EXISTS (SELECT 1 FROM Inserted WHERE Nivel=0  AND Cliente_Contado =0  AND\r\n\t\t\t\t   (\t-- si el Idtipo<>0\r\n\t\t\t\t\t\t(((NIF IS NOT NULL AND dbo.funNifCifCorrecto(NIF, IdTipo) = 0) OR (NIF2 IS NOT NULL AND dbo.funNifCifCorrecto(NIF2, IdTipo) = 0)) AND IdTipo<>0)\r\n\t\t\t\t\t\tOR \r\n\t\t\t\t\t\t-- si el Idtipo=0\r\n\t\t\t\t\t\t(( (NIF IS NOT NULL AND dbo.funNifCifCorrecto(NIF, IdTipo) = 0) OR (NIF2 IS NOT NULL AND dbo.funNifCifCorrecto(NIF2, IdTipo) = 0)) AND IdTipo=0 AND IdPais='ES') --17/11/2020 #15535-avarela\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13467, 'El NIFCIF del cliente no es válido')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir insertar un cliente con padre (debe ser NULL)\r\n-- No permitir insertar una planta SIN padre (nunca debe ser NULL)\r\n------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Inserted WHERE Nivel=0 And Padre IS NOT NULL)>0\tBEGIN\r\n\t\tPRINT dbo.Traducir(15363, 'UN CLIENTE PRINCIPAL NO PUEDE TENER PADRE')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Inserted WHERE Nivel=1 And Padre IS NULL)>0 \tBEGIN\r\n\t\tPRINT dbo.Traducir(15374, 'UNA PLANTA SIEMPRE DEBE TENER PADRE')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\t\r\n------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad \r\n--\tPrincipal Clientes_Datos (Padre)\r\n--\tGEO_Provincias\r\n------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.Padre)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.Padre= Clientes_Datos.IdCliente\r\n\tWHERE (Inserted.Padre IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(14985, 'Padre No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdProvincia)\r\n\tFROM Inserted LEFT JOIN GEO_Provincias ON Inserted.IdProvincia= GEO_Provincias.IdProvincia AND Inserted.IdPais=GEO_Provincias.IdPais\r\n\tWHERE ( Inserted.IdProvincia IS NOT NULL)  AND (GEO_Provincias.IdProvincia IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15116, 'PROVINCIA  No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- Al insertar un cliente insertar\r\n--\tClientes_Datos_Comerciales\r\n--\tClientes_Datos_Economicos\r\n--\tConf_Clientes\r\n------------------------------------------------------------------------------------------------------\r\n\tINSERT INTO Clientes_Datos_Comerciales (IdCliente) SELECT IdCliente  FROM Inserted\r\n\tIF @@ROWCOUNT=0 BEGIN\r\n\t\tPRINT dbo.Traducir(13585, 'ERROR AL CREAR CLIENTE, EL CLIENTE NO HA SIDO CREADO')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n\tINSERT INTO Clientes_Datos_Economicos (IdCliente) SELECT IdCliente FROM Inserted\r\n\tIF @@ROWCOUNT=0 BEGIN\r\n\t\tPRINT dbo.Traducir(13585, 'ERROR AL CREAR CLIENTE, EL CLIENTE NO HA SIDO CREADO')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n\t--Pasado a trigger aparte\r\n\t--INSERT INTO Conf_Clientes (IdCliente) SELECT IdCliente FROM Inserted\r\n------------------------------------------------------------------------------------------------------\r\n\tINSERT INTO  Clientes_Listas_Precios (IdDelegacion,idcliente,idlista)\r\n\tSELECT cl.IdDelegacion,i.idcliente,cl.IdLista\r\n\tFROM Clientes_Listas_Precios cl INNER JOIN inserted i ON cl.Idcliente=i.Padre\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- insertar los Km del codigo Postal del cliente\r\n------------------------------------------------------------------------------------------------------\r\n\tUPDATE CD SET Kmts=G.Kmts\r\n\tFROM Clientes_Datos CD INNER JOIN Inserted I ON CD.IdCliente=I.IdCliente INNER JOIN Geo_CodigosPostales G ON CD.CodPostal=G.CP AND G.IdPoblacion=CD.IdPoblacion\r\n\t\tWHERE G.Kmts<>0\r\n\t\r\n\r\n\r\n\t-- BLOQUEO AUTOMÁTICO --\r\n\tDECLARE @Abloquear VARCHAR(3)\r\n\tDECLARE @Bloqueado T_Booleano\r\n\tDECLARE @IdMotivoBloqueo INT\r\n\tDECLARE @IdEmpleadoBloqueo INT\r\n\tDECLARE @Delegacion INT\r\n\tDECLARE @Empleado VARCHAR(25)\r\n\tDECLARE @IdCliente T_id_cliente\r\n\r\n\tSELECT @ABloquear=dbo.Valor_Parametro('ACTIVAR_BLOQUEOS_AUTOMATICOS',USER) -- NO_TRADUCIR_TAG\r\n\tSELECT @Bloqueado=Bloqueado, @IdCliente=IdCliente, @Delegacion=IdDelegacion, @Empleado=Usuario FROM Inserted\r\n\r\n\tIF @ABloquear = 'ON' AND @Bloqueado=0\r\n\tBEGIN \r\n\t\tSELECT @IdMotivoBloqueo=IdMotivo_Clientes FROM Bloqueos_Documentos_Aut_Cli     WHERE Clientes <> 0 AND (IdDelegacion=@Delegacion OR IdDelegacion = -1)\r\n\t\tIF @IdMotivoBloqueo>0 BEGIN\t\r\n\t\t\tSELECT @IdEmpleadoBloqueo=IdEmpleado FROM Empleados_Datos WHERE Login=@Empleado\r\n\t\t\tUPDATE Clientes_Datos SET Bloqueado = -1, IdMotivoBloqueo=@IdMotivoBloqueo, IdEmpleadoBloqueo=@IdEmpleadoBloqueo WHERE IdCliente = @IdCliente\r\n\t\tEND\t\r\n\tEND\r\n\t-- FIN BLOQUEO --\r\n\r\n\t-- al crear un nuevo cliente se añade un contacto de tipo -1. el nombre del contacto es la razon social del cliente\r\n\t-- se actualiza la tabla Contactos_Objetos\r\n\t-- se actualiza el IdContactoG en el cliente \r\n\r\n\tDeclare @IdContacto T_Id_Contacto\r\n\tDeclare @IdContactoG T_Id_Contacto\r\n\tDeclare @IdContactoCliente T_Id_Contacto\r\n\tDeclare @IdDoc T_Id_Doc \r\n\tDeclare @Nivel as int\r\n\tDeclare @IdDelegacionCli T_Id_Delegacion\r\n\tDeclare @Padre T_Id_Cliente\r\n\r\n\tDECLARE  CurContacto CURSOR LOCAL FOR\r\n\t\tSELECT IdDoc FROM Inserted\r\n\tOPEN CurContacto\r\n\tFETCH NEXT FROM CurContacto INTO @IdDoc\r\n\tWHILE @@FETCH_STATUS<>-1 BEGIN\r\n\r\n\t\t\r\n\r\n\t\t-- se crea la delegación 0 del cliente\r\n\t\tSELECT @IdCliente=IdCliente, @Nivel=Nivel,@Padre=Padre FROM Inserted WHERE IdDoc=@IdDoc\r\n\r\n\t\tIF @Nivel = 0 BEGIN\r\n\t\t\tSELECT @IdContactoG=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\r\n\t\t\tINSERT INTO Contactos (IdContacto,Nombre,\tDireccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,\tExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,\tIdRuta)\r\n\t\t\tSELECT @IdContactoG,RazonSocial,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,NULL,NumTelefono,Extension,NumTelefono,NumTelefono,NumFax,E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\tFROM Inserted WHERE IdDoc=@IdDoc\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tIF @@ROWCOUNT=0 BEGIN\r\n\t\t\t\tPRINT dbo.Traducir(25872, 'Error al insertar Cliente, no se pudo generar el Contacto de tipo: Razón Social.')\r\n\t\t\t\tROLLBACK TRAN\r\n\t\t\t\tCLOSE CurContacto\r\n\t\t\t\tDEALLOCATE CurContacto\r\n\t\t\t\tRETURN\r\n\t\t\tEND\t\t\r\n\t\t\r\n\t\t\tEXEC Contactos_Asociar_General @IdContactoG, 'Cliente', @IdDoc, -1 -- NO_TRADUCIR_TAG\r\n\r\n\t\t\tIF (SELECT COUNT(*) FROM Clientes_Delegaciones WHERE IdDelegacion=0 and IdCliente=@IdCliente)=0 BEGIN\r\n\t\t\t\tINSERT INTO Clientes_Delegaciones (IdDelegacion,IdCliente,Nombre,Direccion,IdPais,Pais,IdProvincia,Provincia,IdCiudad,Ciudad,CodPostal)\r\n\t\t\t\tVALUES(0,@IdCliente,dbo.Traducir(25870, 'Delegación Defecto'),null,null,null,null,null,null,null,null)\r\n\t\t\tEND\r\n\r\n\t\t\tSELECT @IdContacto=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\t\r\n\t\t\tINSERT INTO Contactos (IdContacto,Nombre,\tDireccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,\tExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,\tIdRuta)\r\n\t\t\tSELECT @IdContacto,RazonSocial,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,NULL,NULL,Extension,NULL,NumTelefono,NumFax,E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\tFROM Inserted WHERE IdDoc=@IdDoc\r\n\r\n\t\t\tEXEC Contactos_Asociar_General @IdContacto, 'Cliente', @IdDoc, 0 -- NO_TRADUCIR_TAG\r\n\t\t\tUPDATE Clientes_Datos SET IdContacto=@IdContacto,IdContactoA=@IdContacto,IdContactoF=@IdContacto,IdContactoG=@IdContactoG WHERE IdDoc=@IdDoc\r\n\r\n\t\tEND \tELSE BEGIN\t\r\n\t\t\t--#17340\r\n\r\n\t\t\tSELECT @IdContactoG=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\r\n\t\t\tINSERT INTO Contactos (IdContacto,Nombre,\tDireccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,\tExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,\tIdRuta)\r\n\t\t\tSELECT @IdContactoG,RazonSocial,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,NULL,NumTelefono,Extension,NumTelefono,NumTelefono,NumFax,E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\tFROM Inserted WHERE IdDoc=@IdDoc\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tIF @@ROWCOUNT=0 BEGIN\r\n\t\t\t\tPRINT dbo.Traducir(25872, 'Error al insertar Planta, no se pudo generar el Contacto de tipo: Razón Social.')\r\n\t\t\t\tROLLBACK TRAN\r\n\t\t\t\tCLOSE CurContacto\r\n\t\t\t\tDEALLOCATE CurContacto\r\n\t\t\t\tRETURN\r\n\t\t\tEND\t\t\r\n\t\t\r\n\t\t\tEXEC Contactos_Asociar_General @IdContactoG, 'Planta', @IdDoc, -1 -- NO_TRADUCIR_TAG\r\n\r\n\t\t\t--Fin #17430\r\n\t\t\tSELECT @IdContacto=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\t\r\n\t\t\tINSERT INTO Contactos (IdContacto,Nombre,\tDireccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,\tExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,\tIdRuta)\r\n\t\t\tSELECT @IdContacto,RazonSocial,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,NULL,NULL,Extension,NULL,NumTelefono,NumFax,E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\tFROM Inserted WHERE IdDoc=@IdDoc\r\n\r\n\t\t\t\r\n\t\t\tEXEC Contactos_Asociar_General @IdContacto, 'Planta', @IdDoc, 0 -- NO_TRADUCIR_TAG\r\n\t\t\tSELECT @IdContactoCliente=IdContacto FROM Clientes_Datos WHERE IdCliente=@Padre\r\n\r\n\t\t\tUPDATE Clientes_Datos SET IdContacto=@IdContacto,IdContactoA=@IdContacto,IdContactoF=@IdContacto,IdContactoG =@IdContactoG WHERE IdDoc=@IdDoc\r\n\r\n\t\t\tIF (SELECT COUNT(*) FROM Contactos_Objetos WHERE Objeto='Planta' AND IdDocObjeto=@IdDoc AND IdEstado=0 AND IdContacto=@IdContactoCliente)=0 BEGIN\t\t\t -- NO_TRADUCIR_TAG\r\n\t\t\t\tEXEC Contactos_Asociar_General @IdContactoCliente, 'Planta', @IdDoc, 0 -- NO_TRADUCIR_TAG\r\n\t\t\t\tUPDATE Clientes_Datos SET IdContactoCliente=@IdContactoCliente WHERE IdDoc=@IdDoc\r\n\t\t\tEND\r\n\r\n\t\tEND\r\n\r\n\r\n\t\tFETCH NEXT FROM CurContacto INTO @IdDoc\r\n \tEND\r\n\tCLOSE CurContacto\r\n\tDEALLOCATE CurContacto\r\n\r\n\r\n\tIF EXISTS(\r\n\t\tSELECT * FROM Inserted WHERE IdTipo <> -1 AND Nivel = 0 -- #15435 solo creamos cuentas contables a clientes, NO a plantas\r\n\t) BEGIN\r\n\r\n\t\tDECLARE @Dat Dat_Objeto_IdDocObjeto\r\n\t\tINSERT INTO @Dat(Objeto,IdDocObjeto)\r\n\t\tSELECT 'Clientes',IdDoc\r\n\t\tFROM Inserted\r\n\t\tWHERE\r\n\t\t\tIdTipo <> -1 AND Nivel = 0 -- #15435 solo creamos cuentas contables a clientes, NO a plantas\r\n\r\n\t\tEXEC pGeneraCuentasContabilidad @Dat \r\n\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_UTrig",
      "tableName": "Clientes_Datos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Datos_UTrig] \r\nON [dbo].[Clientes_Datos] \r\nFOR UPDATE \r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n\r\n-- #NAME:\r\n---\t\t\t\tClientes_Datos_Utrig\r\n-- #CREATION: \r\n--\t\t\t\t(Sin Definir)\r\n-- #CLASIFICATION:\r\n\r\n\t\t--002-GESTION COMPRAS y VENTAS\r\n-- #DESCRIPTION:\r\n--\t\t\tAcciones en la actualización de Clientes_datos\r\n-- #PARAMETERS: \r\n\r\n\r\n-- #OBSERVATIONS:\r\n--\t\t\tNOTA CARMEN: AQUÍ HABRÍA QUE CREAR FK Y QUITAR TODAS LAS COMPROBACIONES DE LOS TRIGGERS.\r\n-- #CHANGES: \r\n--\t\t\t12/09/2016 t.48859 carmen- ELIMINO EL RECALCULO DE RIESGOS, AHORA SE CALCULA CON LOS TOTALES.\r\n--\t\t\t12/09/2016 T-48859 carmen -Quito la comprobación del NIF para el cleinte contado.\r\n--\t\t\t26/09/2016- T48859 carmen- Agrego el recalculo de documentos ya que al cambiar el tipo de cliente afecta al calculo de totales de la cabecera de los documentos.\r\n--\t\t\t20200513-#14982-rromero: se quita lo referente a Clientes_Domiciliaciones puesto que se pone FK de UPDATE CASCADE\r\n--\t\t\t20201014-#15435-rromero: se evita generar cuentas contables a plantas\r\n--          17/11/2020 #15535-avarela: Omitir la comprobación del cif en clientes nacionales no Españoles\r\n--\t\t\t20201120 #15485 -carmen se elimina que cuando se cambie el tipo de cliente se recalculen los documentos ya que ahora los documentos tienen informado el tipo de cliente en la cabecera.\r\n-- \t\t\t20211008 #16776. Al convertir cliente potencial revisar sus ofertas\r\n-- #EXAMPLE: \r\n--\t\t\t<Example, varchar(5000),>\r\n\r\n-- =============================================\r\nAS\r\n\r\n Declare @Ins Int\r\nDECLARE @XML XML\r\nDECLARE @STR VARCHAR(MAX)\r\nDECLARE @Tab_Ids Dat_Objeto_IdDocObjeto\r\nDECLARE @VretDocu int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir actualizar un cliente sin NIF si el parámetro CLIENTE_CIF_OBLIGATORIO es ON y su país\r\n-- tiene NIF obligatorio\r\n---------------------------------------------------------------------------------------------------f---\r\nIF dbo.Valor_Parametro('CLIENTES_CIF_OBLIGATORIO', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n  IF (SELECT COUNT(*) FROM Inserted I LEFT JOIN Geo_Paises GP ON I.IdPais = GP.IdPais WHERE I.Nivel=0 AND I.IdTipo<>-1 AND I.Cliente_Contado=0 AND ((I.IdPais IS NOT NULL AND GP.NIFNoObligatorio = 0 AND I.NIF IS NULL) OR (I.IdPais IS NULL AND I.NIF IS NULL)))>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13790, 'Falta el NIFCIF del cliente')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n  else\r\n\tIF (SELECT COUNT(*) FROM Inserted I inner join Clientes_Contactos CC on CC.idcontacto=I.idcontactoF LEFT JOIN Geo_Paises GP ON I.IdPais = GP.IdPais WHERE I.Nivel=0 AND I.IdTipo<>-1 AND I.Cliente_Contado=1 AND ((I.IdPais IS NOT NULL AND GP.NIFNoObligatorio = 0 AND CC.NIF IS NULL) OR (I.IdPais IS NULL AND CC.NIF IS NULL)))>0\r\n\t\tBEGIN\r\n\t\t\tPRINT dbo.Traducir(32523, 'Falta el NIFCIF del contacto del cliente')  \r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\t\t\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir actualizar un cliente con un NIF existente\r\n------------------------------------------------------------------------------------------------------\r\nIF dbo.Valor_Parametro('CLIENTES_CIF_OBLIGATORIO', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n\tIF EXISTS(SELECT Ins.IdCliente FROM inserted Ins INNER JOIN Clientes_Datos cd ON cd.Nif =Ins.Nif WHERE Ins.idDoc <> cd.IdDoc AND Ins.Nivel=0 AND cd.Nivel=0) \r\n\tBEGIN\r\n\t\r\n\t\tSELECT @XML = (SELECT DISTINCT Cd.IdCliente C FROM inserted Ins INNER JOIN Clientes_Datos cd ON cd.Nif =Ins.Nif\r\n\t\t\tWHERE Ins.idDoc <> cd.IdDoc AND Ins.Nivel=0 AND cd.Nivel=0 FOR XML PATH(''))\r\n\t\tSELECT @STR = CONVERT(VARCHAR(MAX),@XML)\r\n\t\tSELECT @STR= REPLACE(REPLACE(@STR,'<C>',''),'</C>',',')\r\n\t\tSELECT @STR = LEFT(@STR,LEN(@STR)-1)\r\n\t\tIF CHARINDEX(',',@STR)>0\r\n\t\t\tPRINT  dbo.sprintf5(dbo.Traducir(28677, 'Los NIFCIFs estan asignados a otros Clientes: %v'),@STR ,default,default,default,default)\r\n\t\tELSE\r\n\t\t\tPRINT  dbo.sprintf5(dbo.Traducir(28675, 'El NIFCIF esta asignado a otro Cliente: %v'),@STR ,default,default,default,default)\r\n\t\r\n\t\t--PRINT 'El NIFCIF está asignado a otro cliente'\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\n\t\t\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir actualizar un cliente con un NIF incorrecto si el parámetro NIF_NACIONAL_COMPROBAR es ON\r\n------------------------------------------------------------------------------------------------------\r\n\r\n   IF dbo.Valor_Parametro('NIF_NACIONAL_COMPROBAR', USER) = 'ON' -- NO_TRADUCIR_TAG\r\n   IF EXISTS (SELECT 1 FROM Inserted WHERE Nivel=0  AND Cliente_Contado =0  AND\r\n\t\t\t\t   (\t-- si el Idtipo<>0\r\n\t\t\t\t\t\t(((NIF IS NOT NULL AND dbo.funNifCifCorrecto(NIF, IdTipo) = 0) OR (NIF2 IS NOT NULL AND dbo.funNifCifCorrecto(NIF2, IdTipo) = 0)) AND IdTipo<>0)\r\n\t\t\t\t\t\tOR \r\n\t\t\t\t\t\t-- si el Idtipo=0\r\n\t\t\t\t\t\t(( (NIF IS NOT NULL AND dbo.funNifCifCorrecto(NIF, IdTipo) = 0) OR (NIF2 IS NOT NULL AND dbo.funNifCifCorrecto(NIF2, IdTipo) = 0)) AND IdTipo=0 AND IdPais='ES')  -- 17/11/2020 #15535-avarela\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13467, 'El NIFCIF del cliente no es válido')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- No permitir insertar un cliente con padre (debe ser NULL)\r\n-- No permitir insertar una planta SIN padre (nunca debe ser NULL)\r\n------------------------------------------------------------------------------------------------------\r\nIF UPDATE(Nivel) Or UPDATE(Padre) BEGIN\r\n\tIF \t(SELECT COUNT(*) FROM Inserted WHERE Nivel=0 And Padre IS NOT NULL)>0\tBEGIN\r\n\t\tPRINT dbo.Traducir(15363, 'UN CLIENTE PRINCIPAL NO PUEDE TENER PADRE')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Inserted WHERE Nivel=1 And Padre IS NULL)>0\tBEGIN\r\n\t\tPRINT dbo.Traducir(15374, 'UNA PLANTA SIEMPRE DEBE TENER PADRE')  \r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n\r\n----------------------------------------------------------------------------\r\n-- Compruebo integridad \r\n--\tPrincipal Clientes_Datos (Padre)\r\n--\tGEO_Provincias\r\n----------------------------------------------------------------------------\r\nIF UPDATE(Padre) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.Padre) \r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.Padre= Clientes_Datos.IdCliente \r\n\tWHERE Clientes_Datos.IdCliente IS NULL AND Inserted.Padre IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13328, 'CLIENTE PADRE No Existente, Soy Clientes Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n--------------------------------------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE (IdProvincia) OR UPDATE(IdPais) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdProvincia)\r\n\tFROM Inserted LEFT JOIN GEO_Provincias ON Inserted.IdProvincia= GEO_Provincias.IdProvincia AND Inserted.IdPais=GEO_Provincias.IdPais\r\n\tWHERE ( Inserted.IdProvincia IS NOT NULL)  AND (GEO_Provincias.IdProvincia IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15116, 'PROVINCIA  No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n\r\n----------------------------------------------------------------------------\r\n--EVITAR ACTUALIZAR si hay regs rels en tablas:\r\n--\tClientes_Datos (si esta en algun sitio como padre, si tiene plantas)\r\n--\tClientes_Articulos\r\n--\tArticulos_Acumulados_Cliente\r\n--\tProgramas_Cabecera \r\n--\tOrdenes\r\n--\tAverias_Partes\r\n--\tRechazos\r\n--\tClientes_Efectos\r\n--\tAgenda\r\n--\tAlmacen_Hist_Mov\r\n--\tAnticipos_Cli\r\n--\tArticulos_Maquinas\r\n--\tClientes_Articulos_Hist\r\n--\tComisiones_Empleados\r\n--\tEmbalajes\r\n--\tFianzas_Cli\r\n--\tTareas\r\n--\tLanzamientos\r\n--\tEnvios_Correo\r\n--\tClientes_Rappels\r\n----------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n\tIF \t(SELECT COUNT(*) FROM Clientes_Articulos INNER JOIN Deleted ON Clientes_Articulos.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14320, 'Imposible modificar CÓDIGO DE CLIENTE, Existen CODIGOS AJENOS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Articulos_Acumulados_Cliente INNER JOIN Deleted ON Articulos_Acumulados_Cliente.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14319, 'Imposible modificar CÓDIGO DE CLIENTE, Existen ACUMULADOS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Ordenes INNER JOIN Deleted ON Ordenes.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14321, 'Imposible modificar CÓDIGO DE CLIENTE, Existen ORDENES DE TRABAJO asociadas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Averias_Partes INNER JOIN Deleted ON Averias_Partes.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14322, 'Imposible modificar CÓDIGO DE CLIENTE, Existen PARTES DE AVERIAS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Rechazos INNER JOIN Deleted ON Rechazos.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14323, 'Imposible modificar CÓDIGO DE CLIENTE, Existen RECHAZOS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Contratos INNER JOIN Deleted ON Contratos.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14298, 'Imposible Modificar CLIENTE, Existen CONTRATOS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Clientes_Efectos INNER JOIN Deleted ON Clientes_Efectos.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo<>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14299, 'Imposible Modificar CLIENTE, Existen EFECTOS asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Agenda INNER JOIN Deleted ON Agenda.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14292, 'Imposible Modificar CLIENTE, Existen Agendas asociadas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Almacen_Hist_Mov INNER JOIN Deleted ON Almacen_Hist_Mov.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14293, 'Imposible Modificar CLIENTE, Existen Almacen_Hist_Mov asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Anticipos_Cli INNER JOIN Deleted ON Anticipos_Cli.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14294, 'Imposible Modificar CLIENTE, Existen Anticipos_Cli asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Articulos_Maquinas INNER JOIN Deleted ON Articulos_Maquinas.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14295, 'Imposible Modificar CLIENTE, Existen Articulos_Maquinas asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Clientes_Articulos_Hist INNER JOIN Deleted ON Clientes_Articulos_Hist.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14296, 'Imposible Modificar CLIENTE, Existen Clientes_Articulos_Hist asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Comisiones_Empleados INNER JOIN Deleted ON Comisiones_Empleados.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14297, 'Imposible Modificar CLIENTE, Existen Comisiones_Empleados asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Embalajes INNER JOIN Deleted ON Embalajes.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14300, 'Imposible Modificar CLIENTE, Existen Embalajes asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Fianzas_Cli INNER JOIN Deleted ON Fianzas_Cli.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14302, 'Imposible Modificar CLIENTE, Existen Fianzas_Cli asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF (SELECT COUNT(*) FROM Tareas INNER JOIN Deleted ON Tareas.IdCliente = Deleted.IdCliente)>0 AND \r\n\t\t(SELECT COUNT(*) FROM Deleted D INNER JOIN Inserted I ON D.IdDoc = I.IdDoc WHERE D.IdTipo = -1 AND D.IdTipo <> I.IdTipo)>0 \r\n\tBEGIN\r\n      UPDATE Tareas\r\n      SET IdCliente = I.IdCliente\r\n      FROM Inserted I INNER JOIN Deleted D ON I.IdDoc = D.IdDoc INNER JOIN Tareas ON D.IdCliente = Tareas.IdCliente\r\n    END \r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Lanzamientos INNER JOIN Deleted ON Lanzamientos.IdCliente=Deleted.IdCliente WHERE Lanzamientos.IdContacto IS NULL and Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14303, 'Imposible Modificar CLIENTE, Existen Lanzamientos asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Envios_Correo INNER JOIN Deleted ON Envios_Correo.IdCliente=Deleted.IdCliente WHERE Envios_Correo.IdContacto IS NULL and Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14301, 'Imposible Modificar CLIENTE, Existen Envios de Correo asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT COUNT(*) FROM Clientes_Rappels INNER JOIN Deleted ON Clientes_Rappels.IdCliente=Deleted.IdCliente WHERE Deleted.IdTipo>-1)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14304, 'Imposible Modificar CLIENTE, Existen Rappels asociados')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\t\r\n\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n--ACTUALIZACION EN CASCADA:\r\n--\tClientes_Datos (el campo padre si tiene planta) \r\n--\tClientes_Datos_Comerciales\r\n--\tClientes_Datos_Economicos\r\n--\tClientes_Contactos\r\n--\tClientes_Notas\r\n-- Clientes_Datos  (Plantas)\r\n--\tClientes_FormasPago\r\n--\tClientes_Grupos_Desc\r\n--\tConf_Clientes\r\n--\tClientes_CRM\r\n--\tClientes_EmpresasRiesgo\r\n--\tClientes_EmpresasRiesgo_Historico\r\n--\tClientes_Referencias\r\n--\tClientes_Riesgo_Temp\r\n--\tClientes_Riesgos\r\n--\tPartesClientesNoFacturables\r\n--\tClientes_Relaciones\r\n--\tProyectos\r\n--\tClientes_Notas_Hist\r\n--\tClientes_Licencias\r\n-- Clientes_Delegaciones\r\n-- Promociones_Clientes\r\n-- Articulos_Maquinas\r\n-- Articulos_NSeries\r\n-- Clientes_Articulos_Propiedades\r\n-- Clientes_Domiciliaciones_Mandatos\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Datos_Comerciales C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n---------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Datos_Economicos C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n      WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Notas C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n ---Padre de las plantas\r\n\t   UPDATE C SET C.Padre = I.IdCliente\r\n       FROM Clientes_Datos C INNER JOIN Deleted D ON D.IdCliente=C.Padre INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_FormasPago C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Grupos_Desc C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-------------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Ofertas_Cli_Cabecera C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n---------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Seguimiento C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\t\t--Implementada FK\r\n       --UPDATE C SET C.IdCliente = I.IdCliente\r\n       --FROM Conf_Clientes C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       --WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_EmpresasRiesgo_Historico C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_EmpresasRiesgo C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Referencias C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Riesgo_Temp C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Riesgos C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM PartesClientesNoFacturables C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Relaciones C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n       \r\n       UPDATE C SET C.IdClienteRel = I.IdCliente\r\n       FROM Clientes_Relaciones C INNER JOIN Deleted D ON D.IdCliente=C.IdClienteRel INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente       \r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Proyectos C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Notas_Hist C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Delegaciones C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\r\n-----------------------------------------------------------------------------------------------------------------------       \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Articulos C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente      \r\n-----------------------------------------------------------------------------------------------------------------------              \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Promociones_Clientes C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente              \r\n-----------------------------------------------------------------------------------------------------------------------              \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Articulos_Maquinas C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente       \r\n-----------------------------------------------------------------------------------------------------------------------              \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Articulos_NSeries  C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente       \r\n-----------------------------------------------------------------------------------------------------------------------              \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Articulos_Propiedades  C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\t   \r\n\t   -----------------------------------------------------------------------------------------------------------------------              \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Clientes_Domiciliaciones_Mandatos  C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\t   \r\n\t   \r\n       UPDATE C SET C.IdCliente = I.IdCliente\r\n       FROM Partes  C INNER JOIN Deleted D ON D.IdCliente=C.IdCliente INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n       WHERE D.IdCliente<>I.IdCliente\t   \t   \r\n\t   \r\nEND\r\n\r\n\r\n\r\n-- actualizacion en cascada del padre en clientes_riesgos\r\nIF UPDATE (Padre) BEGIN\r\n\r\n\tUPDATE CR SET IdPadre=ISNULL(I.Padre,I.IdCliente)\r\n\tFROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc\r\n\t\tINNER JOIN Clientes_Riesgos CR ON I.IdCliente=CR.IdCliente\r\n\tWHERE ISNULL(I.Padre,'')<>ISNULL(D.Padre,'')\r\nEND \r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal Contactos\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF (SELECT COUNT(*) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc LEFT JOIN Contactos C ON C.IdContacto=I.IdContacto WHERE D.IdContacto<>I.IdContacto AND C.IdContacto Is NULL)>0 \r\nBEGIN\r\n\t\tPRINT dbo.Traducir(13355, 'Contacto de Cliente No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\nEND\r\nIF (SELECT COUNT(*) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc LEFT JOIN Contactos C ON C.IdContacto=I.IdContactoA WHERE D.IdContactoA<>I.IdContactoA AND C.IdContacto Is NULL)>0 \r\nBEGIN\r\n\t\tPRINT dbo.Traducir(25868, 'ContactoA de Cliente No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\nEND\r\nIF (SELECT COUNT(*) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc LEFT JOIN Contactos C ON C.IdContacto=I.IdContactoF WHERE D.IdContactoF<>I.IdContactoF AND C.IdContacto Is NULL)>0 \r\nBEGIN\r\n\t\tPRINT dbo.Traducir(25869, 'ContactoF de Cliente No Existente, Soy Clientes_Datos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\nEND\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- modificar los Km si modifican el codigo Postal del cliente\r\n------------------------------------------------------------------------------------------------------\r\nIF (SELECT COUNT(*) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc INNER JOIN Geo_CodigosPostales G ON I.CodPostal=G.CP AND I.IdPoblacion=G.IdPoblacion\r\n\tWHERE (D.CodPostal<>I.CodPostal OR D.IdPoblacion<>I.IdPoblacion) AND G.Kmts<>I.Kmts)>0 BEGIN\r\n\t\r\n\tUPDATE CD SET Kmts=G.Kmts\r\n\tFROM Clientes_Datos CD INNER JOIN Inserted I ON I.IdDoc=CD.IdDoc INNER JOIN Deleted D ON I.IdDoc=D.IdDoc INNER JOIN Geo_CodigosPostales G ON I.CodPostal=G.CP AND I.IdPoblacion=G.IdPoblacion\r\n\tWHERE (D.CodPostal<>I.CodPostal OR D.IdPoblacion<>I.IdPoblacion) AND G.Kmts<>I.Kmts\r\n\t\r\nEND\r\n\r\n-- BLOQUEO AUTOMÁTICO --\r\nDECLARE @Abloquear VARCHAR(3)\r\nDECLARE @Bloqueado T_Booleano\r\nDECLARE @IdMotivoBloqueo INT\r\nDECLARE @IdEmpleadoBloqueo INT\r\nDECLARE @Delegacion INT\r\nDECLARE @Empleado VARCHAR(25)\r\nDECLARE @IdCliente T_Id_Cliente\r\n\r\nSELECT @ABloquear=dbo.Valor_Parametro('ACTIVAR_BLOQUEOS_AUTOMATICOS',USER) -- NO_TRADUCIR_TAG\r\nSELECT @Bloqueado=Bloqueado, @IdCliente=IdCliente, @Delegacion=IdDelegacion, @Empleado=Usuario FROM Inserted\r\n\r\nIF @ABloquear = 'ON' AND @Bloqueado=0 BEGIN \r\n\tSELECT TOP 1 @IdMotivoBloqueo=IdMotivo_Clientes FROM Bloqueos_Documentos_Aut_Cli  WHERE Clientes <> 0 AND (IdDelegacion=@Delegacion OR IdDelegacion = -1)\r\n\tIF @IdMotivoBloqueo>0 BEGIN\t\r\n\t\tSELECT @IdEmpleadoBloqueo=IdEmpleado FROM Empleados_Datos WHERE Login=@Empleado\r\n\t\tUPDATE Clientes_Datos SET Bloqueado = -1, IdMotivoBloqueo=@IdMotivoBloqueo, IdEmpleadoBloqueo=@IdEmpleadoBloqueo WHERE IdCliente = @IdCliente\r\n\tEND\t\r\nEND\r\n-- FIN BLOQUEO --\r\n\r\n\t--BLOQUEO DE PLANTAS\r\n\tSELECT @ABloquear=dbo.Valor_Parametro('BLOQUEO_PLANTAS_PADRE',USER) -- NO_TRADUCIR_TAG\r\n\tif @ABloquear = 'ON' BEGIN\r\n\t\tUpdate PLANTAS Set Bloqueado=I.Bloqueado,IdMotivoBloqueo=I.IdMotivoBloqueo\r\n\t\tfrom Clientes_Datos PLANTAS \r\n\t\tinner join Inserted I on I.IdCliente=PLANTAS.Padre\r\n\t\tinner join Deleted D on I.IdDoc=D.IdDoc\r\n\t\twhere isnull(I.Bloqueado,0)<>isnull(D.Bloqueado,0)-- or I.IdMotivoBloqueo<>D.IdMotivoBloqueo\r\n\tEND\r\n\t--FIN BLOQUEO DE PLANTAS\r\n\t\r\n-- al modificar datos del cliente se modificaran los datos del contacto: IdContactoG\r\n\tUPDATE C \r\n\t\tSET Nombre=I.RazonSocial,\r\n\t\tDireccion=I.Direccion,\r\n\t\tIdPoblacion=I.IdPoblacion,\r\n\t\tCiudad=I.Ciudad,\r\n\t\tIdProvincia=I.IdProvincia,\r\n\t\tProvincia=I.Provincia,\r\n\t\tCodPostal=I.CodPostal,\r\n\t\tIdPais=I.IdPais,\r\n\t\tPais=I.Pais,\r\n\t\tTelefonoTrabajo=I.NumTelefono,\t\r\n\t\tExtensionTrabajo=I.Extension,\r\n\t\tTelefonoCasa=I.NumTelefono,\r\n\t\tNumFax=I.NumFax,\r\n\t\tE_Mail=I.E_Mail,\r\n\t\tNIF=\tI.NIF\t\r\n\tFROM Contactos C INNER JOIN Inserted I ON C.IdContacto=I.IdContactoG \r\n\r\n\r\n\tDeclare @Padre T_Id_Cliente\r\n\tDeclare @IdContactoCliente int\r\n\tDeclare @IdDoc int\r\n\tDeclare @Nivel int\r\n\r\n\tDECLARE  CurContacto CURSOR LOCAL FOR\r\n\t\tSELECT IdDoc,IdContactoCliente,Nivel FROM Inserted WHERE Nivel=1\r\n\tOPEN CurContacto\r\n\tFETCH NEXT FROM CurContacto INTO @IdDoc,@IdContactoCliente,@Nivel\r\n\tWHILE @@FETCH_STATUS<>-1 BEGIN\r\n\t\tIF @IdContactoCliente is not null BEGIN\r\n\t\t\t\tIF (SELECT COUNT(*) FROM Contactos_Objetos WHERE Objeto='Planta' AND IdDocObjeto=@IdDoc AND IdEstado=0 AND IdContacto=@IdContactoCliente)=0 -- NO_TRADUCIR_TAG\r\n\t\t\t\tEXEC Contactos_Asociar_General @IdContactoCliente, 'Planta', @IdDoc, 0 -- NO_TRADUCIR_TAG\r\n\t\tEND\r\n\t\tFETCH NEXT FROM CurContacto INTO @IdDoc,@IdContactoCliente,@Nivel\r\n \tEND\r\n\tCLOSE CurContacto\r\n\tDEALLOCATE CurContacto\r\n\r\n\r\n\r\n\tIF EXISTS(\r\n\t\tSELECT * \r\n\t\tFROM \r\n\t\t\tInserted I\r\n\t\t\tINNER JOIN Deleted D ON I.IdDoc = D.IdDoc\r\n\t\tWHERE \r\n\t\t\tD.IdTipo = -1 AND I.IdTipo <> -1  AND I.Nivel = 0 -- #15435 solo creamos cuentas contables a clientes, NO a plantas\r\n\t) BEGIN\r\n\r\n\t\tDECLARE @Dat Dat_Objeto_IdDocObjeto\r\n\t\tINSERT INTO @Dat(Objeto,IdDocObjeto)\r\n\t\tSELECT 'Clientes',I.IdDoc\r\n\t\tFROM \r\n\t\t\tInserted I\r\n\t\t\tINNER JOIN Deleted D ON I.IdDoc = D.IdDoc\r\n\t\tWHERE \r\n\t\t\tD.IdTipo = -1 AND I.IdTipo <> -1 AND I.Nivel = 0 -- #15435 solo creamos cuentas contables a clientes, NO a plantas\r\n\r\n\t\tEXEC pGeneraCuentasContabilidad @Dat \r\n\r\n\tEND\r\n\t\r\n\t\r\n\t\r\n\t---T: 38287 Al cambiar el nif del cliente cambiarlo en las plantas\r\n\tIF EXISTS (SELECT top 1 I.IdDoc FROM Inserted I INNER JOIN Deleted D ON I.Iddoc=D.Iddoc \r\n\tWHERE ISNULL(I.Nif,'')<>ISNULL(D.Nif,'')  AND ISNULL(I.Nif,'')<>'' AND I.IdTipo <>-1 AND I.Nivel=0) BEGIN\r\n\t\t--- Si tiene plantas le cambio el nif a las plantas si coinciden \r\n\t\t  UPDATE H SET Nif=I.Nif \r\n\t\t  FROM Inserted I \r\n\t\t  INNER JOIN Deleted D ON I.Iddoc=D.Iddoc \r\n\t\t  INNER JOIN clientes_Datos H ON H.Padre =I.Idcliente\r\n\t\t  WHERE ISNULL(I.Nif,'')<>ISNULL(D.Nif,'')  AND ISNULL(I.Nif,'')<>'' AND \r\n\t\t  I.IdTipo <>-1 AND I.Nivel=0 AND ISNULL(H.Nif ,'')=ISNULL(D.Nif,'')\r\n\tEND\r\n\t-- fin T: 38287\r\n\t\r\n\t-- 20211008. #16776. Al convertir cliente potencial\r\n\tIF EXISTS (SELECT 1 FROM Inserted I INNER JOIN Deleted D ON D.IdDoc=I.IdDoc WHERE D.IdTipo=-1 AND D.IdTipo <>ISNULL(I.IdTipo,''))\r\n\tBEGIN\t\r\n\t\t\t\r\n\t   UPDATE C SET IdTipoCli=T.IdTipo \r\n       FROM Ofertas_Cli_Cabecera C INNER JOIN Inserted I ON I.IdCliente=C.IdCliente INNER JOIN Deleted D ON D.IdDoc=I.IdDoc\r\n\t\t\tCROSS APPLY dbo.funDameTipoCli(I.IdCliente) T\r\n       WHERE C.IdEstado=0 AND ISNULL(C.IdTipoCli,-1)=-1\t\t\t-- ofertas generadas y con IdTipoCli NULL ó -1\r\n\t\t\tAND D.IdTipo=-1 AND D.IdTipo<>ISNULL(I.IdTipo,'')\t-- conversion potencial\t\t\t\r\n\t\t\t\r\n\tEND\t\r\n\t\r\n\t\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Pers_Clientes_Datos_ITrig",
      "tableName": "Clientes_Datos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n--drop trigger [[Pers_Clientes_Datos_ITrig]]\r\n\r\nCREATE TRIGGER [dbo].[Pers_Clientes_Datos_ITrig] \r\nON [dbo].[Clientes_Datos] \r\nFOR INSERT \r\n\r\nAS\r\n\r\nIF @@ROWCOUNT <>0 BEGIN\t\t\r\n\t\t/* DAE 08/03/2023:\tcambiamos la forma de hacer esto. Si entra con el ECommerce_Activo quiere decir que entra por Label por lo que ponemos siempre el B00000000 y Cliente_Contado = 1\r\n\t\t\t\t\t\t\tSi no tiene el ECommerce_Activo (=0), nos fijamos en el NIF:\r\n\t\t\t\t\t\t\t\t- Si viene rellenado, dejamos como esta\r\n\t\t\t\t\t\t\t\t- Si no viene rellenado, ponemos el NIF B00000000 y el Cliente_Contado = 1\r\n\t\tif exists (select * FROM inserted WHERE ECommerce_Activo = 1)begin\r\n\t\t\t--select * from Clientes_Datos\r\n\t\t\tupdate cd set NIF= 'B00000000', Cliente_Contado = 1\r\n\t\t\tfrom inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\twhere i.ECommerce_Activo = 1\r\n\r\n\t\tend\r\n\t\t*/\r\n\t\t/* DAE 09/03/2023: cambiamos de nuevo la forma de hacer esto y no tenemos en cuenta el check de ecommerce. Si viene sin nif o con NIF = '', completamos con B00000000\r\n\t\tif exists (select 1 FROM inserted WHERE ECommerce_Activo = 1 or (ECommerce_Activo = 0 and NIF is null))begin\r\n\t\t\tupdate cd set NIF= 'B00000000', Cliente_Contado = 1\r\n\t\t\tfrom inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\twhere i.ECommerce_Activo = 1 or (i.ECommerce_Activo = 0 and i.NIF is null)\r\n\t\tend\r\n\t\t*/\r\n\t\tif exists (select 1 FROM inserted WHERE ltrim(rtrim(isnull(NIF,''))) = '' or NIF= 'B00000000')begin\r\n\t\t\tupdate cd set NIF= 'B00000000', Cliente_Contado = 1\r\n\t\t\tfrom inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\twhere ltrim(rtrim(isnull(i.NIF,''))) = '' or i.NIF= 'B00000000'\r\n\r\n\t\t\tupdate cdE set Categoria = 1\r\n\t\t\tfrom inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\tinner join Clientes_Datos_Economicos cdE on cdE.IdCliente = i.IdCliente\t\t\t\r\n\t\t\twhere ltrim(rtrim(isnull(i.NIF,''))) = '' or i.NIF= 'B00000000'\r\n\r\n\t\t\t--DAE 09/03/2023: actualizamos tambien los nif de los contactos de los cleintes que modificamos\r\n\t\t\t--update c\r\n\t\t\t--set c.nif = 'B00000000'\r\n\t\t\t--from inserted i\r\n\t\t\t--inner join Clientes_Contactos cc on cc.idcliente = i.IdCliente\r\n\t\t\t--inner join Contactos c on c.idcontacto = cc.idcontacto\r\n\t\t\t--where ltrim(rtrim(isnull(i.NIF,''))) = ''\r\n\t\tend\r\n\t\t--dios sabrá porque se inserta antes la tabla de economicos que la de datos.\r\n\t\tif exists (select * FROM inserted i inner join Clientes_Datos_Economicos cdE on cdE.IdCliente = i.IdCliente\t WHERE i.ECommerce_Activo = 1)begin\r\n\t\t\t--insert into _a select 'siii'\r\n\t\t\t/*\r\n\t\t\tinsert into _a \r\n\t\t\tselect top 1 FormaPago  from inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\tinner join Clientes_Datos_Economicos cdE on cdE.IdCliente = i.IdCliente\t\t\t\r\n\t\t\twhere cd.ECommerce_Activo = 1\r\n\t\t\t*/\r\n\t\t\t--select * from Clientes_Datos\r\n\t\t\tupdate cdE set FormaPago = 27, IdLista = 3\r\n\t\t\tfrom inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\tinner join Clientes_Datos_Economicos cdE on cdE.IdCliente = i.IdCliente\t\t\t\r\n\t\t\twhere cd.ECommerce_Activo = 1\r\n\t\t\t/*\r\n\t\t\tinsert into _a \r\n\t\t\tselect top 1 FormaPago  from inserted i \r\n\t\t\tinner join Clientes_Datos cd on cd.IdCliente = i.IdCliente\r\n\t\t\tinner join Clientes_Datos_Economicos cdE on cdE.IdCliente = i.IdCliente\t\t\t\r\n\t\t\twhere cd.ECommerce_Activo = 1\r\n\t\t\t*/\r\n\t\tend\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Com_ITrig",
      "tableName": "Clientes_Datos_Comerciales",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [Clientes_Datos_Com_ITrig] \r\nON dbo.Clientes_datos_comerciales\r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n--\tEmpleados_Datos\r\n--  Clientes_Agentes\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE (Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13302, 'CLIENTE No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdEmpleado)\r\n\tFROM Inserted LEFT JOIN Empleados_Datos ON Inserted.IdEmpleado= Empleados_Datos.IdEmpleado\r\n\tWHERE (Inserted.IdEmpleado IS NOT NULL)  AND (Empleados_Datos.IdEmpleado IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13501, 'EMPLEADO No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdAgente)\r\n\tFROM Inserted LEFT JOIN Clientes_Agentes ON Inserted.IdAgente = Clientes_Agentes.IdAgente\r\n\tWHERE (Inserted.IdAgente IS NOT NULL)  AND (Clientes_Agentes.IdAgente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13080, 'AGENTE No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Datos_Com_UTrig",
      "tableName": "Clientes_Datos_Comerciales",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [dbo].[Clientes_Datos_Com_UTrig] \r\nON [dbo].[Clientes_Datos_Comerciales]\r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n--\tEmpleados_Datos\r\n--  Clientes_Agentes\r\n------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN    \r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE (Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13302, 'CLIENTE No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdEmpleado) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdEmpleado)\r\n\tFROM Inserted LEFT JOIN Empleados_Datos ON Inserted.IdEmpleado= Empleados_Datos.IdEmpleado\r\n\tWHERE (Inserted.IdEmpleado IS NOT NULL)  AND (Empleados_Datos.IdEmpleado IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13501, 'EMPLEADO No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdAgente)\r\n\tFROM Inserted LEFT JOIN Clientes_Agentes ON Inserted.IdAgente = Clientes_Agentes.IdAgente\r\n\tWHERE (Inserted.IdAgente IS NOT NULL)  AND (Clientes_Agentes.IdAgente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13080, 'AGENTE No Existente, Soy Clientes_Datos_Comerciales')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\r\n/*\r\nIF UPDATE(Zona) BEGIN\r\n\tUPDATE Cco\r\n\tSet Zona=Ins.Zona\r\n\tFrom Inserted Ins\r\n\tInner Join Deleted Del On Ins.IdDoc=Del.IdDoc\r\n\tInner Join Clientes_Contactos Cco On Ins.IdCliente=Cco.IdCliente\r\n\tWhere IsNull(Ins.Zona,0)<>IsNull(Del.Zona,0) And Not Ins.Zona Is Null\r\nEND\r\n\r\n\r\n\r\nIF UPDATE(IdRuta) BEGIN\r\n\tUPDATE Cco\r\n\tSet IdRuta=Ins.IdRuta\r\n\tFrom Inserted Ins\r\n\tInner Join Deleted Del On Ins.IdDoc=Del.IdDoc\r\n\tInner Join Clientes_Contactos Cco On Ins.IdCliente=Cco.IdCliente \r\n\tWhere IsNull(Ins.IdRuta,0)<>IsNull(Del.IdRuta,0) And Not Ins.IdRuta Is Null\r\nEND\r\n\r\n*/\r\n\r\n\t-- si se inserta el nombre del contacto y el cliente en el que estamos tiene asociado un contacto de tipo 0, creo uno nuevo y se liga\r\n\tDeclare @IdContacto T_Id_Contacto\r\n\tDeclare @IdContactoG T_Id_Contacto\r\n\tDeclare @IdContactoCliente T_Id_Contacto\r\n\tDeclare @IdDoc T_Id_Doc \r\n\tDeclare @Nivel as int\r\n\tDeclare @Padre T_Id_Cliente\r\n\tDeclare @IdCliente T_Id_Cliente\r\n\r\n\tDeclare @NombreContacto nvarchar(500)\r\n\tDeclare @CargoContacto nvarchar(100)\r\n\tDeclare @TelMovilContacto nvarchar(50)\r\n\tDeclare @IdTipoRelacionContacto int\r\n\tDeclare @E_Mail nvarchar(200)\r\n\r\n\r\n\tDECLARE CurContacto CURSOR LOCAL FOR\r\n\t\tSELECT CD.IdCliente,CD.Nivel,CD.Padre,CD.IdDoc,I.NombreContacto,I.CargoContacto,I.TelMovilContacto,I.IdTipoRelacionContacto \r\n\t\t\t   ,I.EmailContacto --,cd.E_Mail 14441\r\n\t\tFROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc INNER JOIN Clientes_Datos CD ON I.IdCliente=CD.IdCliente --AND CD.Cliente_Contado =0\r\n\t\t\tINNER JOIN Contactos_Objetos CO ON CD.IdContacto=CO.IdContacto AND CO.Objeto='Cliente' \r\n\t\tWHERE I.NombreContacto IS NOT NULL AND D.NombreContacto IS NULL AND CO.IdContactoObj=0 \r\n\t\t\t-- UT2138 todo comentado se deja lo que habia al ppio\r\n\t\t\t---- T48110. majo (hablado con carmen y david). esto desde el erp duplica contactos, ojo que ahora puede que falle el crmexpress  \r\n\t\t\t---- AND D.NombreContacto IS NULL\r\n\t\t\t--AND D.NombreContacto IS NOT NULL\r\n\t\t\t---- T57005. restriccion para que no se creen contactos duplicados \r\n\t\t\t--AND I.NombreContacto<>D.NombreContacto\r\n\tOPEN CurContacto\r\n\tFETCH NEXT FROM CurContacto INTO @IdCliente,@Nivel,@Padre,@IdDoc,@NombreContacto,@CargoContacto,@TelMovilContacto,@IdTipoRelacionContacto,@E_Mail\r\n\tWHILE @@FETCH_STATUS<>-1 BEGIN\r\n\r\n\t\tIF @Nivel = 0 BEGIN -- ES Cliente PADRE\r\n\t\t\t-- no está dado de alta en el CRM y tampoco en la relacion clientes_contactos\r\n\t\t\tIF NOT EXISTS (SELECT * FROM Clientes_Contactos_CRM WHERE IdCliente = @IdCliente) \r\n\t\t\t\tAND NOT EXISTS (SELECT * FROM Contactos_Objetos \r\n\t\t\t\t\t\t\t\tWHERE Objeto='Cliente' AND iddocobjeto=@IdDoc AND IdContactoObj=@IdTipoRelacionContacto) BEGIN \r\n\t\t\t\r\n\t\t\t\tSELECT @IdContacto=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\t\r\n\t\t\t\tINSERT INTO Contactos (IdContacto,Nombre,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,ExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,IdRuta)\r\n\t\t\t\tSELECT @IdContacto,@NombreContacto,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,@CargoContacto,NumTelefono,Extension,NumTelefono,@TelMovilContacto,NumFax,@E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\t\t\tFROM Clientes_Datos WHERE IdDoc=@IdDoc\r\n\r\n\t\t\t\tEXEC Contactos_Asociar_General @IdContacto,'Cliente',@IdDoc, @IdTipoRelacionContacto \r\n\r\n\t\t\t\t-- insertarmos la relacion entre el CRM y la tabla del ERP Clientes_Contactos_CRM\r\n\t\t\t\tINSERT INTO Clientes_Contactos_CRM (Idcliente,IdContacto)\r\n\t\t\t\t\tSELECT @IdCliente,@IdContacto\r\n\t\t\tEND -- if not exist\r\n\r\n\t\tEND ELSE BEGIN\t-- ES HIJA\r\n\t\t\t-- no está dado de alta en el CRM y tampoco en la relacion clientes_contactos\r\n\t\t\tIF NOT EXISTS (SELECT * FROM Clientes_Contactos_CRM WHERE IdCliente = @IdCliente) \r\n\t\t\t\tAND NOT EXISTS (SELECT * FROM Contactos_Objetos \r\n\t\t\t\t\t\t\t\tWHERE Objeto='Planta' AND iddocobjeto=@IdDoc AND IdContactoObj=@IdTipoRelacionContacto) BEGIN \r\n\t\t\t\tSELECT @IdContacto=ISNULL(MAX(IdContacto),0) + 1 FROM Contactos\t\t\r\n\t\t\t\tINSERT INTO Contactos (IdContacto,Nombre,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,Cargo,TelefonoTrabajo,ExtensionTrabajo,TelefonoCasa,TelefonoMovil,NumFax,E_Mail,NIF,EnvioInformacion,Departamento,CodigoEAN,Observaciones,Zona,\tIdRuta)\r\n\t\t\t\tSELECT @IdContacto,@NombreContacto,Direccion,IdPoblacion,Ciudad,IdProvincia,Provincia,CodPostal,IdPais,Pais,@CargoContacto,NumTelefono,Extension,NumTelefono,@TelMovilContacto,NumFax,@E_Mail,NIF,0,NULL,NULL,NULL,NULL,NULL\r\n\t\t\t\t\tFROM Clientes_Datos WHERE IdDoc=@IdDoc\r\n\r\n\t\t\t\tEXEC Contactos_Asociar_General @IdContacto,'Planta', @IdDoc, @IdTipoRelacionContacto \r\n\r\n\t\t\t\t-- insertarmos la relacion entre el CRM y la tabla del ERP Clientes_Contactos_CRM\r\n\t\t\t\tINSERT INTO Clientes_Contactos_CRM (Idcliente,IdContacto)\r\n\t\t\t\t\tSELECT @IdCliente,@IdContacto\r\n\t\t\tEND -- if not exist\r\n\r\n\t\t\tSELECT @IdContactoCliente=IdContacto FROM Clientes_Datos WHERE IdCliente=@Padre\r\n\r\n\t\t\tIF (SELECT COUNT(*) FROM Contactos_Objetos WHERE Objeto='Planta' AND IdDocObjeto=@IdDoc AND IdEstado=0 AND IdContacto=@IdContactoCliente)=0 BEGIN\t\t\t \r\n\t\t\t\tEXEC Contactos_Asociar_General @IdContactoCliente, 'Planta', @IdDoc, @IdTipoRelacionContacto \r\n\t\t\t\tUPDATE Clientes_Datos SET IdContactoCliente=@IdContactoCliente WHERE IdDoc=@IdDoc\r\n\t\t\tEND\r\n\r\n\r\n\t\tEND\r\n\r\n\t\tFETCH NEXT FROM CurContacto INTO @IdCliente,@Nivel,@Padre,@IdDoc,@NombreContacto,@CargoContacto,@TelMovilContacto,@IdTipoRelacionContacto,@E_Mail\r\n \tEND\r\n\tCLOSE CurContacto\r\n\tDEALLOCATE CurContacto\r\n\r\n\r\n\t-- si se modifican los campos: NombreContacto, CargoContacto, TelMovilContacto, Departamento, actualizar el contacto correspondiente\r\n\tUPDATE C SET C.Nombre=LEFT(I.NombreContacto,255),\r\n\t\t\tC.Cargo = LEFT(I.CargoContacto,50),\r\n\t\t\tC.TelefonoMovil = I.TelMovilContacto,\r\n\t\t\tC.Departamento = I.Departamento\r\n\t\tFROM Contactos C\r\n\t\tINNER JOIN Clientes_Contactos_CRM CCC ON C.IdContacto = CCC.IdContacto\r\n\t\tINNER JOIN Inserted I ON I.IdCliente = CCC.IdCliente\r\n\t\tINNER JOIN Deleted D ON D.IdDoc = I.IdDoc\r\n\t\tWHERE ISNULL(I.NombreContacto,'')<>ISNULL(D.NombreContacto,'') \r\n\t\t\tOR ISNULL(I.CargoContacto,'')<>ISNULL(D.CargoContacto,'')\r\n\t\t\tOR ISNULL(I.TelMovilContacto,'')<>ISNULL(D.TelMovilContacto,'')\r\n\t\t\tOR ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'')\r\n\r\n\t-- si se modifican los campos: IdTipoRelacionContacto\r\n\tUPDATE OC SET IdTipo=I.IdTipoRelacionContacto,\r\n\t\tDepartamento=I.Departamento,\r\n\t\tCargoContacto=I.CargoContacto\t\t\t\r\n\t\tFROM Deleted D INNER JOIN Inserted I ON D.IdDoc=I.IdDoc \r\n\t\tINNER JOIN Clientes_Contactos_CRM CCC ON CCC.IdCliente = I.IdCliente\t\t\r\n\t\tINNER JOIN Clientes_Datos CD ON I.IdCliente=CD.IdCliente \r\n\t\tINNER JOIN Contactos_Objetos OC ON CCC.IdContacto=OC.IdContacto AND OC.Objeto='Cliente' AND OC.IdDocObjeto=CD.IdDoc\r\n\t\tWHERE ISNULL(I.IdTipoRelacionContacto,'')<>ISNULL(D.IdTipoRelacionContacto,'') OR ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'') OR ISNULL(I.CargoContacto,'')<>ISNULL(D.CargoContacto,'')\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Cli_Dat_Econ_ITrig",
      "tableName": "Clientes_Datos_Economicos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Cli_Dat_Econ_ITrig] \r\nON dbo.Clientes_Datos_Economicos\r\nFOR INSERT\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n\r\n-- #NAME:\r\n---\t\t\t\tCli_Dat_Econ_ITrig\r\n-- #CREATION: \r\n--\t\t\t\t-----\r\n-- #CLASIFICATION:\r\n\t\t--010-GENERAL\r\n-- #DESCRIPTION:\r\n--\t\t\t<Description,varchar(5000),>\r\n-- #CHANGES: \r\n--\t\t\t20211015-#16440-rromero: validacion para que no puedan poner parejas Iva-Imp.Indirecto incoherente\r\n-- \t\t\t20220323-#17488 eliminar comprobacion idimpuesto, ya actua la comprobacion del update\r\n-- =============================================\r\nAS\r\n\r\nDeclare @Ins int\r\nDeclare @IdCliente T_Id_Cliente\r\nDeclare @CopiasOferta smallint\r\nDeclare @CopiasPedido smallint \r\nDeclare @CopiasAlbaran smallint\r\nDeclare @CopiasFactura smallint\r\nDeclare @vret int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n--\tListas_Precios_Cli\r\n--\tProv_Datos (IdTransportista)\r\n--\tClientes_Domiciliaciones (IdDomiciliacion) (si no es planta)\r\n--\tListas_Precios_Tra\r\n------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE ( Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13303, 'CLIENTE No Existente, Soy Clientes_Datos_Economicos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdLista)\r\n\tFROM Inserted LEFT JOIN Listas_Precios_Cli ON Inserted.IdLista= Listas_Precios_Cli.IdLista\r\n\tWHERE ( Inserted.IdLista IS NOT NULL)  AND (Listas_Precios_Cli.IdLista IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(14575, 'LISTA DE PRECIOS No Existente, Soy Clientes_Datos_Economicos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdTransportista)\r\n\tFROM Inserted LEFT JOIN Prov_Datos ON Inserted.IdTransportista= Prov_Datos.IdProveedor\r\n\tWHERE ( Inserted.IdTransportista IS NOT NULL)  AND (Prov_Datos.IdProveedor IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15346, 'TRANSPORTISTA No Existente, Soy Clientes_Datos_Economicos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------------------------------------------------\r\n\t--// si es un cliente (padre null) se comprueba con las domiciliaciones del cliente\r\n\tSELECT @Ins = COUNT(*) \r\n\tFROM (Inserted  LEFT JOIN Clientes_Datos ON Clientes_Datos.Idcliente=Inserted.Idcliente)\r\n\t\tLEFT JOIN  Clientes_Domiciliaciones ON (Clientes_Domiciliaciones.IdCliente = Inserted.IdCliente) AND (Clientes_Domiciliaciones.IdDomiciliacion = Inserted.IdDomiciliacion)\r\n\tWHERE Padre IS NULL AND Inserted.IdCliente IS NOT NULL AND Inserted.IdDomiciliacion IS NOT NULL AND (Clientes_Domiciliaciones.IdDomiciliacion IS  NULL AND Clientes_Domiciliaciones.IdCliente IS  NULL)\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13416, 'DOMICILIACION de Cliente No Existente, Soy Clientes_Datos_Economicos ')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdListaTra)\r\n\tFROM Inserted LEFT JOIN Listas_Precios_Tra ON Inserted.IdListaTra= Listas_Precios_Tra.IdLista\r\n\tWHERE ( Inserted.IdListaTra IS NOT NULL)  AND (Listas_Precios_Tra.IdLista IS NULL)\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(14566, 'LISTA  TRANSPORTE  No Existente, Soy Clientes_Datos_Economicos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\t\r\n\tIF UPDATE (DiaPago2) BEGIN\r\n\t\t-- no permitir insertar DiaPago2 o DiaPago3 si DiaPago1\tes 0 \r\n\t\tIF EXISTS (SELECT IdDoc FROM Inserted WHERE DiaPago1=0 AND DiaPago2<>0)\r\n\t\tBEGIN\r\n\t\t\tPRINT 'No se puede definir el segundo día de Pago sin definir el primero.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\t\t\r\n\t\tEND\r\n\tEND\r\n\t\r\n\tIF UPDATE (DiaPago3) BEGIN\t\r\n\t\tIF EXISTS (SELECT IdDoc FROM Inserted WHERE DiaPago2=0 AND DiaPago3<>0)\r\n\t\tBEGIN\r\n\t\t\tPRINT 'No se puede definir el tercer día de Pago sin definir el segundo.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\t\t\r\n\t\tEND\r\n\tEND\r\n\r\n------------------------------------------------------------------------------------------------------\r\n-- Al insertar un cliente insertar en las tablas \r\n--\tClientes_Datos_Economicos_Deleg (si es planta hereda las del padre)\r\n--\tClientes_CopiasOfertas\r\n--\tClientes_CopiasPedidos\r\n--\tClientes_CopiasAlbaranes\r\n--\tClientes_CopiasFacturas\r\n------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Ins.IdCliente)\r\n\t\tFROM Inserted Ins\r\n\t\tINNER JOIN Clientes_Datos Dat ON Ins.IdCliente=Dat.IdCliente\r\n\t\tWHERE Not Dat.Padre Is Null\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tINSERT INTO Clientes_Datos_Economicos_Deleg(IdCliente,IdDelegacion,IdLista,FormaPago,Descuento,ProntoPago,IdListaTra)\r\n\t\tSELECT Ins.IdCliente,Cli.IdDelegacion,Cli.IdLista,Cli.FormaPago,Cli.Descuento,Cli.ProntoPago,Cli.IdListaTra\r\n\t\tFROM Inserted Ins\r\n\t\tINNER JOIN Clientes_Datos Dat ON Ins.IdCliente=Dat.IdCliente\r\n\t\tINNER JOIN Clientes_Datos_Economicos_Deleg Cli ON Cli.IdCliente=Dat.Padre\r\n\tEND \r\n\r\n\tDECLARE  Copias CURSOR FOR\r\n\t\tSELECT IdCliente,CopiasOferta,CopiasPedido,CopiasAlbaran,CopiasFactura FROM Inserted\r\n\tOPEN Copias\r\n\r\n\tFETCH NEXT FROM Copias INTO @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n\tWHILE @@FETCH_STATUS<>-1 BEGIN\r\n\t\tEXEC @Vret=PClientes_InsertaCopias_Impresos @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n\t\tIF @Vret=0 BEGIN\r\n\t\t\tPRINT 'SE HA PRODUCIDO UN ERROR AL INSERTAR COPIAS'\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tCLOSE Copias\r\n\t\t\tDEALLOCATE Copias\r\n\t\t\tRETURN \r\n\t\tEND \r\n\t\tFETCH NEXT FROM Copias INTO  @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n \tEND\r\n\tCLOSE Copias\r\n\tDEALLOCATE Copias\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Cli_Dat_Econ_UTrig",
      "tableName": "Clientes_Datos_Economicos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Cli_Dat_Econ_UTrig] \r\nON [dbo].[Clientes_Datos_Economicos]\r\nFOR UPDATE \r\nAS\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tCli_Dat_Econ_UTrig\r\n-- #CREATION: \r\n--\t\t\t\t(SIN DEFINIR)\r\n-- #CLASIFICATION:\r\n\r\n\t\t--002-GESTION COMPRAS y VENTAS\r\n\t\r\n-- #DESCRIPTION:\r\n--\t\t\tACTUALIZACIÓN DE DATOS ECONÓMICOS DE CLIENTE\r\n--\t\t\t1.- COMPROBACIONES\r\n--\t\t\t2.- SI CAMBIA EL METODO PRECIO RECALCULA TOTALES DE LÍNEAS DE OFERTAS Y PEDIDO YA QUE PUEDEN CAMBIAR LOS REDONDEOS DE LÍNEAS\r\n--\t\t\t3.- INSERCION EN CASCADA DE COPIAS DE ALBARANES, FACTURAS,....\r\n--\t\t\t4.- SI CAMBIA EL IVA RECALCULA RIESGOS DE CLIENTE Y RECALCULA TOTALES DE CABECERA DE DOCUMENTOS.\r\n\r\n-- #PARAMETERS: \r\n\r\n-- #OBSERVATIONS:\r\n--\t\t\r\n-- #CHANGES: \r\n--\t\t\t19/08/2016-CARMEN -T.48859 CALCULO DE TOTALES, SE QUITAN COMPROBACIONES DE INTEGRIDAD SE AÑADEN FK , SE REPASA EL TRIGGER\r\n--\t\t\t12/09/2016 t.48859 carmen- ELIMINO EL RECALCULO DE RIESGOS, AHORA SE CALCULA CON LOS TOTALES.\r\n--\t\t\t26/09/2016-CARMEN-T48859-El metodo de calculo ya lanza el recálculo de las líneas no hace falta que lance las cabeceras. \r\n--\t\t\t26/09/2016- CARMEN T48859 - Quito el cálculo de totales al cambiar el iva del cliente, ya que el cambio de iva del cliente no hace que cambie el Iva de las líneas, y no afecta al recálculo de los totales\r\n--\t\t\t30/11/2016- ADOLFO T54096 - Añado relacion por el campo revisión de las ofertas. De lo contario al cambiar el método de precio cliente aparece error.\r\n--\t\t\t20211015-#16440-rromero: validacion para que no puedan poner parejas Iva-Imp.Indirecto incoherente\r\n--\t\t\t20220616--#17882 carmen: impedir cambiar a un método de cálculo de precios TPV si el cliente tiene pedidos que no vienen de tickets\r\n-- #EXAMPLE: \r\n--\t\t\t<Example, varchar(5000),>\r\n\r\n-- =============================================\r\n\r\nDeclare @Ins int\r\nDeclare @IdCliente T_Id_Cliente\r\nDeclare @CopiasOferta smallint\r\nDeclare @CopiasPedido smallint \r\nDeclare @CopiasAlbaran smallint\r\nDeclare @CopiasFactura smallint\r\nDeclare @vret int\r\nDeclare @vretDocu int\r\nDeclare @Tab_Ids Dat_Objeto_IdDocObjeto\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n-------------------------------------------------------------------------------------\r\n--------------------  COMPROBACIONES\r\n-------------------------------------------------------------------------------------\r\n\tIF EXISTS (SELECT 1 FROM Inserted I \r\n\t\t\t\t\t\tWHERE I.IdIva IS NOT NULL AND I.IdImpuestoIndirecto IS NOT NULL AND NOT EXISTS (SELECT 1 FROM IVAS WHERE IVAS.IdImpuesto = I.IdImpuestoIndirecto AND IVAS.IdIVA = I.IdIva)) BEGIN\r\n\t\t\tPRINT 'No se puede definir un IVA con un impuesto indirecto que no le corresponda. ' + CHAR(13) + CHAR(13) + 'Revise los campos IVA-Impuestos Indirectos.' + CHAR(13)\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\t\t\r\n\tEND\r\n\r\n\tIF UPDATE(DiaPago1) OR UPDATE(DiaPago2) BEGIN\r\n\t\t-- no permitir insertar DiaPago2 o DiaPago3 si DiaPago1\tes 0 \r\n\t\tIF EXISTS (SELECT IdDoc FROM Inserted WHERE DiaPago1=0 AND DiaPago2<>0)\r\n\t\tBEGIN\r\n\t\t\tPRINT 'No se puede definir el segundo día de Pago sin definir el primero.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\t\t\r\n\t\tEND\r\n\tEND\r\n\r\n\r\n\tIF UPDATE(DiaPago2) OR UPDATE(DiaPago3) BEGIN\r\n\r\n\t\tIF EXISTS (SELECT IdDoc FROM Inserted WHERE DiaPago2=0 AND DiaPago3<>0)\r\n\t\tBEGIN\r\n\t\t\tPRINT 'No se puede definir el tercer día de Pago sin definir el segundo.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\t\t\r\n\t\tEND\r\n\r\n\tEND\r\n\r\n\t\r\n\t-- al marcar check en Economicos de Plantas sobre Aplicar Ley Morosidad, no permitir si el cliente no está marcado. \r\n\tIF UPDATE(AplicarLeyMorosidad) BEGIN\r\n\r\n\t\tIF (SELECT COUNT(I.IdDoc) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc INNER JOIN Clientes_Datos C ON I.IdCliente=C.IdCliente INNER JOIN Clientes_Datos_Economicos E ON C.Padre=E.IdCliente\r\n\t\tWHERE D.AplicarLeyMorosidad =0 AND I.AplicarLeyMorosidad<>0 AND E.AplicarLeyMorosidad=0) >0\r\n\t\tBEGIN\r\n\t\t\t\tPRINT dbo.Traducir(32510, 'Es necesario aplicar la Ley de Morosidad en el Cliente antes de activarla en sus Plantas.  ')\r\n\t\t\t\tROLLBACK TRAN\r\n\t\t\t\tRETURN \r\n\t\tEND\r\n\r\n\t\t-- al marcar/desmarcar el chek en el cliente, que lo hereden las plantas\r\n\t\tIF (SELECT COUNT(I.IdDoc) FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc INNER JOIN Clientes_Datos C ON I.IdCliente=C.IdCliente WHERE C.Nivel=0 AND D.AplicarLeyMorosidad<>I.AplicarLeyMorosidad)>0 \r\n\t\tBEGIN\r\n\t\t\t\tUPDATE E SET AplicarLeyMorosidad=I.AplicarLeyMorosidad\r\n\t\t\t\tFROM Clientes_Datos_Economicos E INNER JOIN Clientes_Datos C ON E.IdCliente=C.IdCliente INNER JOIN  Inserted I ON C.Padre=I.IdCliente INNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\t\tWHERE D.AplicarLeyMorosidad<>I.AplicarLeyMorosidad\r\n\t\tEND\r\n\r\n\r\n\tEND\r\n\r\n\t---- #17882 No permitir cambiar a un método de cálculo TPV si el cliente o sus plantas  tienen Pedidos Pendientes\r\n\tIF EXISTS (SELECT 1 FROM inserted I INNER JOIN Deleted D ON I.IdDoc =D.IdDoc\r\n\t\t\t\tINNER JOIN Metodo_Calculo_Precios M ON I.IdMetodoPrecio=M.IdMetodo \r\n\t\t\t\tLEFT JOIN Clientes_Datos CD ON  I.IdCliente=CD.Padre\r\n\t\t\t\tINNER JOIN PEdidos_Cli_Cabecera  P ON P.IdCliente=I.IdCliente OR  P.IdCliente=ISNULL(CD.IdCliente ,'')\r\n\t\t\t\tINNER JOIN Pedidos_Cli_Lineas  L ON P.IdPedido=L.IdPedido\r\n\t\t\t\tWHERE M.TPV<>0 AND L.IdEstado BETWEEN 0 AND 7\r\n\t\t\t\t\r\n\t\t\t\t) BEGIN \r\n\t\t\t\t\tPRINT 'Imposible poder cambiar a un método de cambio de precios TPV, teniendo este o sus plantas pedidos pendientes'\r\n\t\t\t\t\tROLLBACK TRAN\r\n\t\t\t\t\tRETURN\r\n\r\n\t\t\t\tEND\r\n\r\n\t\r\n-------------------------------------------------------------------------------------\r\n--------------------   CAMBIO DE MÉTODO PRECIO RECALCULO TOTALS LÍNEAS DE DOCUMENTOS---\r\n---------------------- OJO ESTO HAY PENSARLO POR QUE PUEDE BLOQUEAR LA APLICACIÓN SI TIENE MUCHOS DOCUMENTOS.\r\n-------------------------------------------------------------------------------------\r\n\t-- al modificar el metodo de calculo recalcular totales de docuementos asociados (menos de facturas_actualizadas)\r\n\tIF EXISTS (SELECT I.IdDoc FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc WHERE I.IdMetodoPrecio<>D.IdMetodoPrecio OR ISNULL(I.IdIva,-1)<>ISNULL(D.IdIva,-1) )\r\n\tBEGIN\r\n\r\n\t-- CARMEN 16/08/2016 - T.48859 -- \r\n\r\n\t\t\r\n\t--- CAMBIO ESTO SOLO VOY A PASAR EL RECALCULO DE LAS LÍNEAS YA QUE ESTAS DISPARAN EL RECÁLCULO DE LAS CABECERAS ...\r\n\t\t-- recalculo totales lineas documentos\r\n\t\t-- ofertas\r\n\t\tINSERT INTO @Tab_Ids (Objeto, IdDocObjeto )\r\n\t\tSELECT 'Oferta_Lineas', L.IdDoc \r\n\t\tFROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\tINNER JOIN Ofertas_Cli_Cabecera C ON I.IdCliente=C.IdCliente\r\n\t\t\tINNER JOIN Ofertas_Cli_Lineas L ON C.IdOferta=L.IdOferta AND C.Revision = L.Revision \r\n \t WHERE (I.IdMetodoPrecio<>D.IdMetodoPrecio OR ISNULL(I.IdIva,-1)<>ISNULL(D.IdIva,-1)) AND L.IdEstado IN (0,1)\r\n\t \r\n\t\t\tIF EXISTS (SELECT TOP 1 * fROM @Tab_Ids ) BEGIN\r\n\t\t\t\tEXEC @vretDocu=PCalcularBases_Documentos @Tab_Ids \r\n\t\t\t\tIF @vretDocu=0 BEGIN\r\n\t\t\t\t\tPRINT 'Error en el cálculo de totales del documento.'\r\n\t\t\t\t\tROLLBACK TRAN\r\n\t\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\tEND\r\n\tDELETE FROM @Tab_Ids \r\n\tINSERT INTO @Tab_Ids (Objeto, IdDocObjeto )\r\n\t SELECT 'Pedido_Lineas', L.IdDoc \r\n\t FROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\tINNER JOIN Pedidos_Cli_Cabecera C ON I.IdCliente=C.IdCliente\r\n\t\t\tINNER JOIN Pedidos_Cli_Lineas L ON C.IdPedido=L.IdPedido\r\n\t\t\t--CROSS APPLY dbo.FunObjeto_CalculaTotalLinea('Pedido_Lineas',L.IdDoc) F\r\n\t\tWHERE (I.IdMetodoPrecio<>D.IdMetodoPrecio OR ISNULL(I.IdIva,-1)<>ISNULL(D.IdIva,-1)) AND L.IdEstado IN (0,1,2,3,4,5,6,7) \r\n\t\t\t\r\n\t\t\tIF EXISTS (SELECT TOP 1 * fROM @Tab_Ids ) BEGIN\r\n\t\t\t\tEXEC @vretDocu=PCalcularBases_Documentos @Tab_Ids \r\n\t\t\t\tIF @vretDocu=0 BEGIN\r\n\t\t\t\t\tPRINT 'Error en el cálculo de totales del documento.'\r\n\t\t\t\t\tROLLBACK TRAN\r\n\t\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\tEND\r\n\r\n\t\t\t\t\r\n\t\t--UT005669 facturas de deudor\r\n\t\tDELETE FROM @Tab_Ids\r\n\t\tINSERT INTO @Tab_Ids (IdDocObjeto , Objeto)\r\n\t\tSELECT F.IdDoc ,'Facturas'\r\n\t\tFROM Inserted I INNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\t\tINNER JOIN Facturas_Cli_Cab F ON I.IdCliente=F.IdCliente\r\n\t\t\tWHERE (I.IdMetodoPrecio<>D.IdMetodoPrecio OR ISNULL(I.IdIva,-1)<>ISNULL(D.IdIva,-1)) AND F.IdEstado =0\r\n\r\n\t\tIF EXISTS (SELECT IdDocobjeto FROM @Tab_Ids) BEGIN\r\n\t\t\t\t\tEXEC @vretDocu=PCalcularBases_Documentos @Tab_Ids\r\n\t\t\t\t\tIF @vretDocu=0 BEGIN\r\n\t\t\t\t\t\tPRINT 'Error en el cálculo de totales del documento.'\r\n\t\t\t\t\t\tROLLBACK TRAN\r\n\t\t\t\t\t\tRETURN\r\n\t\t\t\t\tEND\r\n\t\tEND\r\n\r\n\t\t\r\n\r\n\tEND \r\n\r\n\r\n-------------------------------------------------------------------------------------\r\n----------------------- INSERCIONES EN CASCADA\r\n-------------------------------------------------------------------------------------\r\n\t------------------------------------------------------------------------------------------------------\r\n\t-- Al insertar un cliente insertar en \r\n\t--\tClientes_CopiasOfertas\r\n\t--\tClientes_CopiasPedidos\r\n\t--\tClientes_CopiasAlbaranes\r\n\t--\tClientes_CopiasFacturas\r\n\t------------------------------------------------------------------------------------------------------\r\n\tIF UPDATE(IdCliente) OR UPDATE(CopiasOferta) OR UPDATE(CopiasPedido) OR UPDATE(CopiasFactura) OR UPDATE(CopiasAlbaran) BEGIN\r\n\r\n\t\tIF (SELECT COUNT(*) FROM Inserted I INNER JOIN Deleted D ON D.IdDoc=I.IdDoc WHERE D.IdCliente<>I.IdCliente OR D.CopiasOferta<>I.CopiasOferta OR D.CopiasPedido<>I.CopiasPedido OR D.CopiasFactura<>I.CopiasFactura OR D.CopiasAlbaran<>I.CopiasAlbaran)>0 BEGIN\r\n\r\n\t\t\t--eliminar las copias de Ofertas\r\n\t\t\tDELETE Clientes_CopiasOfertas\r\n\t\t\tFROM Clientes_CopiasOfertas C INNER JOIN  Deleted D ON C.IdCliente=D.IdCliente \r\n\t\t\t--eliminar las copias de Pedidos\r\n\t\t\tDELETE Clientes_CopiasPedidos \r\n\t\t\tFROM Clientes_CopiasPedidos C INNER JOIN  Deleted D ON C.IdCliente=D.IdCliente \r\n\r\n\t\t\t--eliminar las copias de Albaran\r\n\t\t\tDELETE Clientes_CopiasAlbaranes \r\n\t\t\tFROM Clientes_CopiasAlbaranes C INNER JOIN  Deleted D ON C.IdCliente=D.IdCliente \r\n\t\r\n\t\t\t--eliminar las copias de facturas \r\n\t\t\tDELETE Clientes_CopiasFacturas \r\n\t\t\tFROM Clientes_CopiasFacturas C INNER JOIN  Deleted D ON C.IdCliente=D.IdCliente\r\n\r\n\t\t\t--meter las copias  de facturas y albaran\r\n\t\t\tDECLARE  Copias CURSOR LOCAL FOR\r\n\t\t\t\tSELECT I.IdCliente,I.CopiasOferta,I.CopiasPedido,I.CopiasAlbaran,I.CopiasFactura FROM Inserted I \r\n\t\t\tOPEN Copias\r\n\r\n\t\t\tFETCH NEXT FROM Copias INTO @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n\t\t\tWHILE @@FETCH_STATUS<>-1 BEGIN\r\n\t\t\t\tEXEC @Vret=PClientes_InsertaCopias_Impresos @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n\t\t\t\tIF @Vret=0 BEGIN\r\n\t\t\t\t\tPRINT dbo.Traducir(11319, 'SE HA PRODUCIDO UN ERROR AL INSERTAR COPIAS')\r\n\t\t\t\t\tROLLBACK TRANSACTION\r\n\t\t\t\t\tCLOSE Copias\r\n\t\t\t\t\tDEALLOCATE Copias\r\n\t\t\t\t\tRETURN \r\n\t\t\t\tEND \r\n\t\t\t\tFETCH NEXT FROM Copias INTO  @IdCliente,@CopiasOferta,@CopiasPedido,@CopiasAlbaran,@CopiasFactura\r\n \t\t\tEND\r\n\t\t\tCLOSE Copias\r\n\t\t\tDEALLOCATE Copias\r\n\r\n\t\tEND\r\n\tEND\r\n\r\n\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Datos_GCredito_Categoria_UTrig",
      "tableName": "Clientes_Datos_GCredito_Categoria",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Datos_GCredito_Categoria_UTrig] \r\nON [dbo].Clientes_Datos_GCredito_Categoria \r\nFOR UPDATE \r\nAS\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\t-- no se pueden eliminar los 3 primeros registros\r\n\tIF (SELECT COUNT(*) FROM Deleted WHERE IdCategoria BETWEEN 0 AND 2)>0 BEGIN\r\n\t\tPRINT dbo.Traducir(25889, 'Imposible modificar registro.')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN \r\n\tEND \r\n\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Datos_GCredito_TSocio_UTrig",
      "tableName": "Clientes_Datos_GCredito_TSocio",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Datos_GCredito_TSocio_UTrig] \r\nON [dbo].Clientes_Datos_GCredito_TSocio \r\nFOR UPDATE \r\nAS\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\t-- no se pueden eliminar los 3 primeros registros\r\n\tIF (SELECT COUNT(*) FROM Deleted WHERE IdTipoSocio BETWEEN 0 AND 2)>0 BEGIN\r\n\t\tPRINT dbo.Traducir(25889, 'Imposible modificar registro.')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN \r\n\tEND \r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Descuentos_Itrig",
      "tableName": "Clientes_Descuentos",
      "type": "SQL_TRIGGER",
      "definition": "-- Author:\t\tMª CARMEN MARTÍN\r\n-- Create date: 09/07/08\r\n-- Description:\tNO DEJAMOS INSERTAR LINEAS DE DESCUENTO DEL MISMO IDARTICULO O IDFAMILIA\r\n-- =============================================\r\nCREATE TRIGGER [dbo].[Clientes_Descuentos_Itrig] \r\n   ON  dbo.Clientes_Descuentos \r\n   FOR INSERT\r\nAS \r\nBEGIN\r\n\tIF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n\t\tIF (\r\n\t\tSelect Count(*) from inserted I Inner join Clientes_Descuentos CD on CD.IDCliente=I.IdCliente\r\n\t\tWHERE i.iddoc<>cd.iddoc and I.IdArticulo=Cd.IdArticulo and I.IdFamilia=cd.IdFamilia and i.venta=cd.venta)>0\r\n\t\tBEGIN\r\n\t\t\tPRINT dbo.Traducir(24193, 'Este Artículo- Familia ya tiene descuento asociado para este cliente. Imposible insertar. Clientes_descuentos')\r\n\t\t\tROLLBACk TRAN\r\n\t\t\tRETURN\r\n\t\tEND \r\n\r\n\tEND \r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Dias_Excepcion_ITrig",
      "tableName": "Clientes_Dias_Excepcion",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Dias_Excepcion_ITrig] \r\nON [dbo].Clientes_Dias_Excepcion \r\nFOR INSERT \r\nAS\r\n  IF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n    IF EXISTS(SELECT IdDoc from inserted I where MesDesde=MesHasta AND DiaDesde >DiaHasta) BEGIN\r\n      print dbo.Traducir(32302, 'El Dia Desde debe ser inferior al Dia Hasta para un mismo mes.')\r\n      rollback tran\r\n      return\r\n    END\r\n\r\n    IF EXISTS( SELECT Desde \r\n               FROM (\r\n                 SELECT  Desde = CASE WHEN MesDesde <10 THEN '0'+CONVERT(varchar,MesDesde)\r\n                                      ELSE CONVERT(varchar,MesDesde)\r\n                                 END + \r\n                                 CASE WHEN DiaDesde <10 THEN '0'+CONVERT(varchar,DiaDesde)\r\n                                      ELSE CONVERT(varchar,DiaDesde)\r\n                                 END \r\n                 from inserted I\r\n               ) a   \r\n               WHERE isdate(convert(varchar(4),YEAR(GetDate()),112)  + Desde)=0 ) BEGIN\r\n      print dbo.Traducir(32742, 'La combinación DiaMes Desde no es una fecha valida.')\r\n      rollback tran\r\n      return\r\n    END\r\n    \r\n    IF EXISTS( SELECT Hasta\r\n               FROM (\r\n                 SELECT Hasta = CASE WHEN MesHasta <10 THEN '0'+CONVERT(varchar,MesHasta)\r\n                                      ELSE CONVERT(varchar,MesHasta)\r\n                                 END + \r\n                                 CASE WHEN DiaHasta <10 THEN '0'+CONVERT(varchar,DiaHasta)\r\n                                      ELSE CONVERT(varchar,DiaHasta)\r\n                                 END + ' 23:59:59'\r\n                 from inserted I\r\n               ) a   \r\n               WHERE isdate(convert(varchar(4),YEAR(GetDate()),112)  + Hasta)=0 ) BEGIN\r\n      print dbo.Traducir(32743, 'La combinación DiaMes Hasta no es una fecha valida.')\r\n      rollback tran\r\n      return\r\n    END\r\n  \r\n    IF EXISTS( select i.Iddoc \r\n               from inserted I \r\n               cross apply funClientes_Dias_ExcepcionesVto(i.IdCliente,year(getdate()),default) v \r\n               cross apply funClientes_Dias_ExcepcionesVto(i.IdCliente,year(getdate()),default) v2 \r\n               where I.IdDoc= v.IdDoc and v.IdDoc <>v2.IdDoc \r\n                 AND (\r\n                         v.FechaDesde between v2.FechaDesde and v2.FechaHasta \r\n                      or v.FechaHasta between v2.FechaDesde and v2.FechaHasta\r\n                      or (v.FechaDesde <= v2.FechaDesde AND v.FechaHasta >= v2.FechaHasta)\r\n                     ) ) BEGIN\r\n      print dbo.Traducir(32763, 'Las fechas de excepción no pueden solaparse. (Ambas días son incluidas en el periodo de excepción.).')\r\n      rollback tran\r\n      return\r\n    END\r\n  END",
      "isDisabled": false
    },
    {
      "name": "Clientes_Dias_Excepcion_UTrig",
      "tableName": "Clientes_Dias_Excepcion",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [dbo].[Clientes_Dias_Excepcion_UTrig] \r\nON [dbo].Clientes_Dias_Excepcion \r\nFOR UPDATE \r\nAS\r\n  IF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n    IF EXISTS(SELECT IdDoc from inserted I where MesDesde=MesHasta AND DiaDesde >DiaHasta) BEGIN\r\n      print dbo.Traducir(32302, 'El Dia Desde debe ser inferior al Dia Hasta para un mismo mes.')\r\n      rollback tran\r\n      return\r\n    END\r\n\r\n    IF EXISTS( SELECT Desde \r\n               FROM (\r\n                 SELECT  Desde = CASE WHEN MesDesde <10 THEN '0'+CONVERT(varchar,MesDesde)\r\n                                      ELSE CONVERT(varchar,MesDesde)\r\n                                 END + \r\n                                 CASE WHEN DiaDesde <10 THEN '0'+CONVERT(varchar,DiaDesde)\r\n                                      ELSE CONVERT(varchar,DiaDesde)\r\n                                 END \r\n                 from inserted I\r\n               ) a   \r\n               WHERE isdate(convert(varchar(4),YEAR(GetDate()),112)  + Desde)=0 ) BEGIN\r\n      print dbo.Traducir(32742, 'La combinación DiaMes Desde no es una fecha valida.')\r\n      rollback tran\r\n      return\r\n    END\r\n    \r\n    IF EXISTS( SELECT Hasta\r\n               FROM (\r\n                 SELECT Hasta = CASE WHEN MesHasta <10 THEN '0'+CONVERT(varchar,MesHasta)\r\n                                      ELSE CONVERT(varchar,MesHasta)\r\n                                 END + \r\n                                 CASE WHEN DiaHasta <10 THEN '0'+CONVERT(varchar,DiaHasta)\r\n                                      ELSE CONVERT(varchar,DiaHasta)\r\n                                 END + ' 23:59:59'\r\n                 from inserted I\r\n               ) a   \r\n               WHERE isdate(convert(varchar(4),YEAR(GetDate()),112)  + Hasta)=0 ) BEGIN\r\n      print dbo.Traducir(32743, 'La combinación DiaMes Hasta no es una fecha valida.')\r\n      rollback tran\r\n      return\r\n    END\r\n  \r\n    IF EXISTS( select i.Iddoc \r\n               from inserted I \r\n               cross apply funClientes_Dias_ExcepcionesVto(i.IdCliente,year(getdate()),default) v \r\n               cross apply funClientes_Dias_ExcepcionesVto(i.IdCliente,year(getdate()),default) v2 \r\n               where I.IdDoc= v.IdDoc and v.IdDoc <>v2.IdDoc \r\n                 AND (\r\n                         v.FechaDesde between v2.FechaDesde and v2.FechaHasta \r\n                      or v.FechaHasta between v2.FechaDesde and v2.FechaHasta\r\n                      or (v.FechaDesde <= v2.FechaDesde AND v.FechaHasta >= v2.FechaHasta)\r\n                     ) ) BEGIN\r\n      print dbo.Traducir(32763, 'Las fechas de excepción no pueden solaparse. (Ambas días son incluidas en el periodo de excepción.).')\r\n      rollback tran\r\n      return\r\n    END\r\n  END",
      "isDisabled": false
    },

    {
      "name": "Clientes_Domiciliaciones_ITrig",
      "tableName": "Clientes_Domiciliaciones",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Clientes_Domiciliaciones_ITrig] \r\nON [dbo].[Clientes_Domiciliaciones]\r\nFOR INSERT\r\nAS\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tClientes_Domiciliaciones_ITrig\r\n-- #CREATION: \r\n--\t\t\t\tSin definir\r\n-- #CLASIFICATION:\r\n--\t\t\t\t002-GESTION COMPRAS y VENTAS\r\n-- #DESCRIPTION:\r\n--\t\t\t\tTrigger estándar de inserción en la tabla Clientes_Domiciliaciones\r\n-- #PARAMETERS: \r\n--\r\n-- #OBSERVATIONS:\r\n--\r\n-- #CHANGES: \r\n--\t\t\t\t30/08/2016-fbueno-Cambio mensaje de error\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n-- =============================================\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal \r\n--\tClientes_Datos\r\n--\tBancos_Sucursales\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15201, 'Cliente No Existente, Soy Clientes_Domiciliaciones')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdBanco)\r\n\tFROM Inserted LEFT JOIN Bancos_Sucursales ON (Inserted.IdBanco= Bancos_Sucursales.IdBanco AND Inserted.IdSucursal= Bancos_Sucursales.IdSucursal)\r\n\tWHERE Bancos_Sucursales.IdBanco Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15201, 'Sucursal No Existente, Soy Clientes_Domiciliaciones')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Domiciliaciones_UTrig",
      "tableName": "Clientes_Domiciliaciones",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Domiciliaciones_UTrig] \r\nON [dbo].[Clientes_Domiciliaciones]\r\nFOR UPDATE\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tClientes_Domiciliaciones_UTrig\r\n-- #CREATION: \r\n--\t\t\t\tSin definir\r\n-- #CLASIFICATION:\r\n--\t\t\t\t002-GESTION COMPRAS y VENTAS\r\n-- #DESCRIPTION:\r\n--\t\t\t\tTrigger estándar de update en la tabla Clientes_Domiciliaciones\r\n-- #PARAMETERS: \r\n--\r\n-- #OBSERVATIONS:\r\n--\r\n-- #CHANGES: \r\n--\t\t\t\t20191129-#14214-rromero: evitamos poder marcar la domiciliación como inactiva si está en alguna ficha de cliente\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n-- =============================================\r\nAS\r\n\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n-----------------------------------------------------------------------------------------------------------------------\r\n-- Comprobar integridad con tabla Principal \r\n--\tClientes_Datos\r\n--\tBancos_Sucursales\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15201, 'Sucursal No Existente, Soy Clientes_Domiciliaciones')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdBanco) OR UPDATE(IdSucursal) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdBanco)\r\n\tFROM Inserted LEFT JOIN Bancos_Sucursales ON (Inserted.IdBanco= Bancos_Sucursales.IdBanco AND Inserted.IdSucursal= Bancos_Sucursales.IdSucursal)\r\n\tWHERE Bancos_Sucursales.IdBanco Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15201, 'Sucursal No Existente, Soy Clientes_Domiciliaciones')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\n\r\nEND\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n--EVITAR ACTUALIZACION si hay regs rels en tablas:\r\n--\t-Clientes_Datos_Economicos\r\n--\t-Facturas_Cli_Cab\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) Or UPDATE(IdDomiciliacion) BEGIN\r\n\tIF \t(SELECT count(*) FROM \tClientes_Datos_Economicos INNER JOIN Deleted ON  Clientes_Datos_Economicos.IdCliente=Deleted.IdCliente And Clientes_Datos_Economicos.IdDomiciliacion=Deleted.IdDomiciliacion)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14364, 'Imposible modificar Domiciliacion, Existen CLIENTES con esta Domiciliacion por defecto')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\t/*IF EXISTS\t\r\n\t\t(SELECT * \r\n\t\tFROM \tFacturas_Cli_Cab,Deleted \r\n\t\tWHERE  Facturas_Cli_Cab.IdCliente=Deleted.IdCliente And Facturas_Cli_Cab.IdDomiciliacion=Deleted.IdDomiciliacion)\r\n\tBEGIN\r\n\t\tPRINT 'Imposible modificar Domiciliacion, Existen FACTURAS con esta Domiciliacion'\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND*/\r\n\r\n------------------------------------------------------------------------------------------------\r\n\tIF \t(SELECT count(*)  FROM Deleted D INNER JOIN  Clientes_Datos CD ON D.IdCliente=CD.Padre INNER JOIN Clientes_Datos_Economicos CE ON CD.IdCliente= CE.IdCliente AND D.IdDomiciliacion=CE.IdDomiciliacion)>0\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(14365, 'Imposible modificar Domiciliacion, Existen PLANTAS con esta Domiciliacion por defecto')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\nEND \r\n\r\n\tIF EXISTS (SELECT 1 FROM Inserted I INNER JOIN Deleted D ON I.IdDoc = D.IdDoc\r\n\t\t\t\t\tWHERE I.Activa<> D.Activa AND I.Activa = 0\r\n\t\t\t\t\t\tAND EXISTS (SELECT 1 FROM Clientes_Datos_Economicos CDE WHERE CDE.IdDomiciliacion = I.IdDomiciliacion AND CDE.IdCliente = I.IdCliente)) BEGIN\r\n\t\tPRINT 'No se puede marcar como inactiva la domiciliación porque existe en alguna/s ficha/s de cliente/s'\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\nEND -- fin IF EXISTS(SELECT 1 FROM inserted) / fin Clientes_Domiciliaciones_UTrig",
      "isDisabled": false
    },
    {
      "name": "Clientes_Domiciliaciones_Empresa_ITrig",
      "tableName": "Clientes_Domiciliaciones_Empresa",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Domiciliaciones_Empresa_ITrig] \r\nON [dbo].[Clientes_Domiciliaciones_Empresa] \r\nFOR INSERT \r\nAS BEGIN\r\n\r\n\tIF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n\r\n\t\t--La domiciliacion debe pertenecer a la empresa\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT *\r\n\t\t\tFROM Inserted Ins\r\n\t\t\t\tLEFT JOIN Empresas_Domiciliaciones Emp On Ins.IdDomiciliacion=Emp.IdDomiciliacion And Ins.IdEmpresa=Emp.IdEmpresa\r\n\t\t\tWHERE \r\n\t\t\t\tEmp.IdDomiciliacion Is Null\r\n\t\t) BEGIN\r\n\t\t\tPRINT dbo.Traducir(14489, 'La domiciliación de empresa especificada no pertenece a la empresa indicada')\r\n\t\t\tROLLBACK TRAN \r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Domiciliaciones_Empresa_UTrig",
      "tableName": "Clientes_Domiciliaciones_Empresa",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [dbo].[Clientes_Domiciliaciones_Empresa_UTrig] \r\nON [dbo].[Clientes_Domiciliaciones_Empresa]\r\nFOR UPDATE \r\nAS BEGIN\r\n\r\n\r\n\tIF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n \r\n\t\tIF UPDATE(IdEmpresa) OR UPDATE(IdDomiciliacion) BEGIN\r\n\r\n\t\t\t--La domiciliacion debe pertenecer a la empresa\r\n\t\t\tIF EXISTS(\r\n\t\t\t\tSELECT *\r\n\t\t\t\tFROM Inserted Ins\r\n\t\t\t\t\tLEFT JOIN Empresas_Domiciliaciones Emp On Ins.IdDomiciliacion=Emp.IdDomiciliacion And Ins.IdEmpresa=Emp.IdEmpresa\r\n\t\t\t\tWHERE \r\n\t\t\t\t\tEmp.IdDomiciliacion Is Null\r\n\t\t\t) BEGIN\r\n\t\t\t\tPRINT dbo.Traducir(14489, 'La domiciliación de empresa especificada no pertenece a la empresa indicada')\r\n\t\t\t\tROLLBACK TRAN \r\n\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\tEND\r\n\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Domiciliaciones_Mandatos_ITrig",
      "tableName": "Clientes_Domiciliaciones_Mandatos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\ncreate trigger Clientes_Domiciliaciones_Mandatos_ITrig\r\non Clientes_Domiciliaciones_Mandatos\r\nfor insert\r\n\r\nas\r\n\r\n  IF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n\r\n\t-- Hay que dejar para cada cliente y domiciliación el último mandato insertado activo y los demás inactivos\r\n\r\n\tdeclare @IdCliente\t\t\tas T_Id_Cliente\r\n\tdeclare @IdDomiciliacion\tas T_Id_Domiciliacion\r\n\tdeclare @IdDocActivo\t\tas T_CEESI_Id_Documento\r\n\tDECLARE @IdTipo\t\t\t\tas int\r\n\tdeclare c cursor for\r\n\t\tselect IdCliente, IdDomiciliacion, max(IdDoc), IdTipo from inserted group by IdCliente, IdDomiciliacion, IdTipo \r\n\topen c\r\n\twhile 1 = 1 begin\r\n\t\tfetch next from c into @IdCliente, @IdDomiciliacion, @IdDocActivo, @IdTipo\r\n\t\tif @@fetch_status = -1 break\r\n\t\t\r\n\t\t-- Desactivamos todos menos el último insertado\r\n\t\tupdate Clientes_Domiciliaciones_Mandatos set activo = 0 where \r\n\t\tActivo = 1 and IdCliente = @IdCliente and IdDomiciliacion = @IdDomiciliacion and IdDoc <> @IdDocActivo AND IdTipo=@IdTipo \r\n\t\t-- Activamos el último insertado\r\n\t\tupdate Clientes_Domiciliaciones_Mandatos set activo = 1 where \r\n\t\tActivo = 0 and IdCliente = @IdCliente and IdDomiciliacion = @IdDomiciliacion and IdDoc = @IdDocActivo AND IdTipo=@IdTipo \r\n\r\n\tend \r\n\t\r\n\tclose c\r\n\tdeallocate c\r\n\r\n\r\n  end",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_Conf_ITrig",
      "tableName": "Clientes_Efectos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Clientes_Efectos_Conf_ITrig]\r\nON [dbo].[Clientes_Efectos] \r\nFOR INSERT \r\nAS\r\nIF @@ROWCOUNT<>0 BEGIN\r\n\r\n\t-- insertar en tabla configurable\r\n\tINSERT INTO Conf_Clientes_Efectos (IdFactura,IdEfecto) \r\n\tSELECT I.IdFactura,I.IdEfecto \r\n\tFROM Inserted I\r\n\t\tLEFT JOIN Conf_Clientes_Efectos CEC ON I.IdFactura = CEC.IdFactura AND I.IdEfecto = CEC.IdEfecto\r\n\tWHERE\r\n\t\tCEC.IdEfecto IS NULL\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Efectos_ITrig",
      "tableName": "Clientes_Efectos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Efectos_ITrig]\r\nON [dbo].[Clientes_Efectos] \r\nFOR INSERT \r\nAS\r\n -- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tClientes_Efectos_ITrig\r\n-- #CREATION: \r\n--\t\t\t\t01/01/1900\r\n-- #CLASIFICATION:\r\n--\t\t\t\t001-ECONOMICO FINANCIERO\r\n-- #DESCRIPTION:\r\n--\t\t\tTrigger de Insert de Clientes_Efectos\r\n-- #PARAMETERS: \r\n-- \t\t@Param1:\tDescripción del parámetro 1 (múltiples líneas)\r\n--\t\t@Param2:\tDescripción del parámetro 2 (múltiples líneas)\r\n-- #OBSERVATIONS:\r\n-- #CHANGES: \r\n--\t\t\t31/05/2016-Piti-50142-No permitimos que el importeACuenta y el ImporteTotal tengan diferente signo\r\n--\t\t\t20/09/2016- Carmen T.52811-Añado los estados 7,8,9 al los riesgos de impagados.\r\n--\t\t\t27/09/2016-Carmen. T.52811- Para calcular el riesgo estaba multiplicando por el cambio en vez de dividir\r\n--\t\t\t20/01/2020-Carmen. #14310- Quitar la inserción de Clientes_Efectos_Historicos, se hace en los procesos\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n-- =============================================\r\nDeclare @Ins \t\t\tInt\r\nDeclare @Empresa \t\tT_Id_Empresa\r\nDeclare @IdPadre \t\tT_Id_Cliente\r\nDeclare @IdCliente \t\tT_Id_Cliente\r\nDeclare @IdEstado \t\tT_Id_EstadoEfecto\r\nDeclare @ImporteEuros \t\tT_Precio\r\nDeclare @ACuentaEuros\t\tT_Precio \r\nDeclare @ImporteTotal\t\tT_Precio \r\nDeclare @ImporteACuenta\t\tT_Precio \r\nDeclare @ImporteCambioEuros\tT_Precio\r\nDECLARE @Fecha\t\t\t\tSMALLDATETIME\r\n\r\n\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t--T50142, 31/05/2016. Piti\r\n\tIf (SELECT COUNT(*)\r\n\t\tFROM Inserted I \r\n\t\tWHERE Sign(I.ImporteAcuenta)<>0 and SIGN(I.ImporteAcuenta)<>SIGN(I.ImporteTotal))>0 BEGIN\t\r\n\t\t\tPRINT 'El importe Total y el importe a cuenta deben tener el mismo signo, Tabla: Clientes_Efectos'\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal \r\n--\tClientes_Domiciliaciones\r\n--\tClientes_Datos\r\n--\tFacturas_Cli_Cab\r\n--\tEmpresas_Domiciliaciones\r\n--\tEmpleados_Datos\r\n--\tMoneda\r\n--\tFacturas_Prov_Cab\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF EXISTS(\r\n\t\tSELECT 1 \r\n\t\tFROM Inserted LEFT JOIN Facturas_Cli_Cab  ON Inserted.IdFactura= Facturas_Cli_Cab.IdFactura\r\n\t\tWHERE  Inserted.IdFactura IS NOT NULL AND Inserted.IdFactura<>0 AND Facturas_Cli_Cab.IdFactura IS NULL\r\n\t-- IdFactura=0 ---> no viene de ninguna factura\r\n\t) BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13786, 'Factura No Existente, Tabla: Clientes_Efectos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvGen)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvGen= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvGen IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13768, 'Factura de Proveedor Generada No Existente, Tabla: Clientes_Efectos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\tIF EXISTS \r\n\t\t(SELECT * FROM Inserted WHERE ImporteCambioEuros = 0)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13437, 'El Cambio del Importe en divisa NO puede ser 0')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\tIF EXISTS \r\n\t\t(SELECT * FROM Inserted WHERE GastosCambioEuros = 0)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13436, 'El Cambio de los Gastos en divisa NO puede ser 0')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\t\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n-- Comprobar TipoEfecto/Domiciliacion\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n\tIF EXISTS (\r\n\t\tSELECT I.IdFactura\r\n\t\tFROM\r\n\t\t\tInserted I\r\n\t\tINNER JOIN Delegaciones DLG ON I.IdDelegacion = DLG.IdDelegacion\r\n\t\tINNER JOIN Empresas_Domiciliaciones ED ON I.IdDomiciliacion = ED.IdDomiciliacion AND DLG.IdEmpresa = ED.IdEmpresa\r\n\t\tINNER JOIN Efectos_Tipos ET ON I.Tipo = ET.Tipo\r\n\t\tWHERE (\r\n\t\t\t(ET.Factoring=0 AND ED.Factoring=1)\r\n\t\t\tOR\r\n\t\t\t(ET.Factoring=1 AND ED.Factoring=0)\r\n\t\t\t)\r\n\t\t) BEGIN\r\n\t\tPRINT dbo.Traducir(28510, 'Error. No puede asignarse un tipo de efecto factoring a una domiciliación no factoring, y viceversa')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN \r\n\tEND\r\n\t\t\r\n\t\t\r\n\t\t\r\n\r\n-- insertar en tabla configurable\r\n\t--Generado trigger aparte\r\n\t--INSERT INTO Conf_Clientes_Efectos (IdFactura,IdEfecto) SELECT IdFactura,IdEfecto FROM Inserted\r\n\r\n-----------------------------------------------------------------------------------------------------------\r\n-- actualizar la tabla  Clientes_Riesgos\r\n-----------------------------------------------------------------------------------------------------------\r\n\r\n\t;WITH LineasRiesgoNuevas(IdCliente,IdPadre) AS (\r\n\t\tSELECT DISTINCT\r\n\t\t\tI.IdCliente, ISNULL(CD.Padre,CD.IdCliente)\r\n\t\tFROM Inserted I\r\n\t\tINNER JOIN Clientes_Datos CD ON I.IdCliente = CD.IdCliente\r\n\t\tLEFT JOIN Clientes_Riesgos CR ON I.IdCliente = CR.IdCliente --AND ISNULL(CD.Padre,CD.IdCliente)=CR.IdPadre\r\n\t\tWHERE CR.IdCliente IS NULL\r\n\t) \r\n\tINSERT INTO Clientes_Riesgos(IdCliente,IdPadre,RiesgoPed,RiesgoAlb,RiesgoFact,RiesgoImpagados,RiesgoRecibidos,RiesgoNoRecibidos,RiesgoAlquiler,AnticiposFianzas)\r\n\tSELECT IdCliente,IdPadre,0,0,0,0,0,0,0,0\r\n\tFROM LineasRiesgoNuevas\r\n\t\r\n\t;WITH LineasRiesgo(IdCliente, IdPadre, RiesgoImpagados, RiesgoRecibidos, RiesgoNoRecibidos) AS (\r\n\t\tSELECT \r\n\t\t\tI.IdCliente, ISNULL(CD.Padre,CD.IdCliente),\r\n\t\t\tSUM(CASE WHEN I.IdEstado IN (5,7,8,9)\tTHEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado  IN (5,7,8,9)\tTHEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN I.IdEstado IN (1,2,3) THEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado IN (1,2,3)THEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN I.IdEstado=0\t\t\tTHEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado=0\t\t\tTHEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END)\r\n\t\tFROM Inserted I\r\n\t\tINNER JOIN Clientes_Datos CD ON I.IdCliente = CD.IdCliente\r\n\t\tGROUP BY I.IdCliente, ISNULL(CD.Padre,CD.IdCliente)\r\n\t) \r\n\tUPDATE CR\r\n\tSET\r\n\t\tCR.RiesgoImpagados\t= CR.RiesgoImpagados  + LR.RiesgoImpagados,\r\n\t\tCR.RiesgoRecibidos\t= CR.RiesgoRecibidos  + LR.RiesgoRecibidos,\r\n\t\tCR.RiesgoNoRecibidos= CR.RiesgoNoRecibidos+ LR.RiesgoNoRecibidos\r\n\tFROM LineasRiesgo LR\r\n\t\tINNER JOIN Clientes_Riesgos CR ON LR.IdCliente = CR.IdCliente AND LR.IdPadre = CR.IdPadre\r\n\t\r\n\r\n\t--UT6397-Asociación de efectos con cobros de facturas, inserción datos iniciales\r\n\r\n\tINSERT INTO Clientes_Efectos_Cobros_Facturas(IdFactura,IdEfecto,IdFacturaAsignada,ImporteAsignado,ImporteCobrado)\r\n\tSELECT \r\n\t\tI.IdFactura,I.IdEfecto,F.IdFactura,\r\n\t\tI.ImporteTotal,\r\n\t\tCASE WHEN I.IdEstado=4 THEN --Cobrado\r\n\t\t\tI.ImporteTotal\r\n\t\tELSE\r\n\t\t\tCASE WHEN I.ImporteACuenta <> 0 THEN --Cobro parcial\r\n\t\t\t\tI.ImporteACuenta\r\n\t\t\tELSE\r\n\t\t\t\t0\r\n\t\t\tEND\r\n\t\tEND\r\n\tFROM \r\n\t\tInserted I\r\n\t\tINNER JOIN Facturas_Cli_Cab F ON I.IdFactura = F.IdFactura\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_RECC_UTrig",
      "tableName": "Clientes_Efectos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Efectos_RECC_UTrig]\r\nON [dbo].[Clientes_Efectos] \r\nFOR UPDATE \r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n\r\n-- #NAME:\r\n---\t\t\t\tClientes_Efectos_RECC_UTrig\r\n-- #CREATION: \r\n--\t\t\t08/11/2017\r\n-- #CLASIFICATION:\r\n--\t\t\r\n\t\t--001-ECONOMICO FINANCIERO\r\n\t\t\r\n\t\t\r\n-- #DESCRIPTION:\r\n--\tAl cobrar efecto (4) insertar en LibroIva_RECC un registro por cada factura (sujeta a RECC) a las que se este dando el cobro (se registrara la fecha de cobro y los iddoc efecto)\r\n--\ttambién se hace apunte del pago del iva\r\n-- #PARAMETERS: \r\n--\t\t\t<Parameters,varchar(1000),>\r\n\t\t\r\n-- \t\t@Param1:\tDescripción del parámetro 1 (múltiples líneas)\r\n\t\t--\t\t@Param2:\tDescripción del parámetro 2 (múltiples líneas)\r\n\r\n-- #OBSERVATIONS:\r\n--\tCARMEN 08/11/2017 \r\n--\tEsto no es del todo correcto ya que las facturas que se acojen al criterio de caja no son todas, sólo son las nacionales SIN recargo de equivalencia y Tampoco las rectificativas\r\n--\tAdemás no es verdad que los efectos pasen al LibroIVA_RECC cuando se cobren, esto es solo si se cobran antes del 31/12/ del año siguiente a la fecha en que se haya realizado la operación, \r\n--\tsi no hay que registrarlas al 31/12/del año siguiente de la operación esto quiere decir que en este caso tampoco se deshará el registro del iva cuando paso de cobrado a otro estado\r\n-- Y los incobrables tienen otro tratamiento\r\n--\tAsí como las facturas rectificativas (si son negativas) que tienen que compensarse con la misma cantidad en positivo de la factura a la que rectifican..\r\n-- De momento sólo vamos a quitar los incobrables para el resto hay que hacer otros procesos en otros puntos y terminar eliminando este trigger.\r\n-- FIN CARMEN 08/11/2017\r\n-- #CHANGES: \r\n--\t\t CARMEN  08/11/2017-- Se quita también el estado de incobrable (no tiene que hacer esto cuando el efecto es incobrable)\r\n--\t Esto hay que arreglarlo también en el proceso de hacer y deshacer incobrable \r\n\t--Si incobro un efecto hay que registrarlo en libroIVA_RECC se hará cuando se realice el análisis \r\n\t-- UT 2621 Carmen 20/12/2017 Cambio por llamada SP  PClientes_Efectos_RegistraIVARECC\r\n-- #EXAMPLE: \r\n--\t\t\t<Example, varchar(5000),>\r\n\r\n-- =============================================\r\n\r\nAS\r\n\r\nDECLARE \r\n\t@vret int\t\t,\r\n\t@TabDocs Dat_Objeto_IdDocObjeto\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n-- CARMEN  08/011/2017-- Se quita también el estado de incobrable (no tiene que hacer esto cuando el efecto es incobrable)\r\n--\t Esto hay que arreglarlo también en el proceso de hacer y deshacer incobrable \r\n\t--Si incobro un efecto hay que registrarlo en libroIVA_RECC se hará cuando se realice el análisis \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\tIF EXISTS (SELECT * FROM Inserted I INNER JOIN Deleted D ON I.IdDoc =D.IdDoc \r\n\t WHERE ((D.IdEstado=4 AND I.IdEstado<>4) OR (D.ImporteACuenta<>I.ImporteACuenta AND D.ImporteACuenta>I.ImporteACuenta))) \r\n\t\t\t\tINSERT INTO @TabDocs (Objeto, IdDocObjeto )\r\n\t\t\t\tSELECT 'Efectos', I.IdDoc \r\n\t\t\t\tFROM Inserted I \r\n\t\t\t\t\tINNER JOIN Deleted D ON I.IdDoc =D.IdDoc  \r\n\t\t\t\tWHERE((D.IdEstado=4 AND I.IdEstado<>4) OR (D.ImporteACuenta<>I.ImporteACuenta AND D.ImporteACuenta>I.ImporteACuenta)) \r\n\t\t---------------------------- DESHACER EL COBRO\r\n\tIF EXISTS (SELECT * FROM @TabDocs ) BEGIN\r\n\t\t\tEXEC @vret= PClientes_Efectos_RegistraIVARECC @TabDocs ,0\r\n\t\t\tIF @Vret =0 BEGIN\r\n\r\n\t\t\t\tPRINT 'ERROR Registrando en Libro IVA RECC'\r\n\t\t\t\tRETURN \r\n\t\t\t\tROLLBACK TRAN\r\n\t\t\tEND\r\n\tEND\r\n\r\n\t---------------------------- COBRO\r\n\tDELETE FROM @TabDocs\r\n\r\n\t-- efectos que pasa a cobrados con facturas sujetas a RECC\r\n\t-- si los efectos que cambian de estado estan sujetos a RECC sus padres tambien (hay una restriccion para que no se puedan mezclar)\r\n\r\n\tIF EXISTS (SELECT * FROM Inserted I INNER JOIN Deleted D ON I.IdDoc =D.IdDoc  WHERE ((D.Idestado NOT IN (4,9) AND I.IdEstado =4 )OR (D.ImporteACuenta<>I.ImporteACuenta AND D.ImporteACuenta<I.ImporteACuenta) ))\r\n\tINSERT INTO @TabDocs (Objeto, IdDocObjeto )\r\n\tSELECT 'Efectos', I.IdDoc \r\n\tFROM Inserted I \r\n\t\tINNER JOIN Deleted D ON I.IdDoc =D.IdDoc  \r\n\tWHERE ((D.Idestado NOT IN (4,9) AND I.IdEstado =4 )OR (D.ImporteACuenta<>I.ImporteACuenta AND D.ImporteACuenta<I.ImporteACuenta) ) \r\n\tIF EXISTS (SELECT * FROM @TabDocs ) BEGIN\r\n\t\t\tEXEC @vret= PClientes_Efectos_RegistraIVARECC @TabDocs ,1 \r\n\t\t\tIF @Vret =0 BEGIN\r\n\r\n\t\t\t\tPRINT 'ERROR Registrando en Libro IVA RECC'\r\n\t\t\t\tRETURN \r\n\t\t\t\tROLLBACK TRAN\r\n\t\t\tEND\r\n\tEND\r\n\t\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_UTrig",
      "tableName": "Clientes_Efectos",
      "type": "SQL_TRIGGER",
      "definition": " \r\n\r\nCREATE TRIGGER [dbo].[Clientes_Efectos_UTrig]\r\nON [dbo].[Clientes_Efectos] \r\nFOR UPDATE \r\nAS\r\n\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tClientes_Efectos_UTrig\r\n-- #CREATION: \r\n--\t\t\t\t01/01/1900\r\n-- #CLASIFICATION:\r\n--\t\t\t\t001-ECONOMICO FINANCIERO\r\n-- #DESCRIPTION:\r\n--\t\t\tTrigger de Update de Clientes_Efectos\r\n-- #PARAMETERS: \r\n-- \t\t@Param1:\tDescripción del parámetro 1 (múltiples líneas)\r\n--\t\t@Param2:\tDescripción del parámetro 2 (múltiples líneas)\r\n-- #OBSERVATIONS:\r\n-- #CHANGES: \r\n--\t\t\t31/05/2016-Piti-50142-No permitimos que el importeACuenta y el ImporteTotal tengan diferente signo\r\n--\t\t\t20/09/2016- Carmen T.52811-Añado los estados 7,8,9 al los riesgos de impagados.\r\n--\t\t\t27/09/2016-Carmen. T.52811- Para calcular el riesgo estaba multiplicando por el cambio en vez de dividir \r\n--\t\t\t20/01/2020-Carmen. #14310- Quitar la inserción de Clientes_Efectos_Historicos, se hace en los procesos\r\n--\t\t\t20220208-#17279-- Añadir Option (maxrecursion 10000) para que no de error de recursividad\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n-- ============================================= \r\nDeclare @Ins \t\t\t\tInt\r\nDeclare @Empresa \t\t\tT_Id_Empresa\r\nDeclare @IdPadre \t\t\tT_Id_Cliente\r\nDeclare @IdCliente \t\t\tT_Id_Cliente\r\nDeclare @IdEstado \t\t\tT_Id_EstadoEfecto\r\nDeclare @ImporteEuros \t\tT_Precio\r\nDeclare @ACuentaEuros\t\tT_Precio \r\nDeclare @ImporteTotal\t\tT_Precio \r\nDeclare @ImporteACuenta\t\tT_Precio \r\nDeclare @ImporteCambioEuros\tT_Precio\r\nDeclare @IdEstadoAnt\t\tT_Id_EstadoEfecto\r\nDECLARE @Fecha\t\t\t\tSMALLDATETIME\r\n\r\nDeclare @Vret\t\t\t\tInt\r\nDeclare @IdFactura\t\t\tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n--T50142, 31/05/2016. Piti\r\nIF UPDATE(ImporteACuenta) or UPDATE(ImporteTotal)  BEGIN\r\n\tIf (SELECT COUNT(*)\r\n\t\tFROM Inserted I inner join Deleted D on I.IdDoc=D.IDDoc\r\n\t\tWHERE ((I.ImporteACuenta<>D.ImporteACuenta) or (I.ImporteTotal<>D.ImporteTotal)) and Sign(I.ImporteAcuenta)<>0 and SIGN(I.ImporteAcuenta)<>SIGN(I.ImporteTotal))>0 BEGIN\t\r\n\t\t\tPRINT 'El importe Total y el importe a cuenta deben tener el mismo signo, Tabla: Clientes_Efectos'\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND\r\n---------------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal \r\n--\tClientes_Domiciliaciones\r\n--\tClientes_Datos\r\n--\tFacturas_Cli_Cab\r\n--\tEmpresas_Domiciliaciones\r\n--\tEmpleados_Datos\r\n---------------------------------------------------------------------------------------------------------------------------\r\n\r\nIF UPDATE(IdFactura) BEGIN\r\n\tIF EXISTS(\r\n\t\tSELECT 1\r\n\t\tFROM Inserted LEFT JOIN Facturas_Cli_Cab  ON Inserted.IdFactura= Facturas_Cli_Cab.IdFactura\r\n\t\tWHERE  Inserted.IdFactura IS NOT NULL AND Inserted.IdFactura<>0 AND Facturas_Cli_Cab.IdFactura IS NULL\r\n\t-- IdFactura=0 ---> no viene de ninguna factura\r\n\t) BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13786, 'Factura No Existente, Tabla: Clientes_Efectos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n----------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdDomiciliacion) BEGIN\r\n\tSELECT @Ins=COUNT(DISTINCT IdDomiciliacion)\r\n\tFROM \tConta_Ejercicios,Inserted\r\n\tWHERE Conta_Ejercicios.IdEjercicio=Inserted.IdEjercicio And IdDomiciliacion IS NOT NULL\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tEmpresas_Domiciliaciones\r\n\t\tWHERE IdDomiciliacion In \r\n\t\t\t(SELECT IdDomiciliacion\r\n\t\t\tFROM \tConta_Ejercicios,Inserted\r\n\t\t\tWHERE Conta_Ejercicios.IdEjercicio=Inserted.IdEjercicio And IdDomiciliacion IS NOT NULL))<> @Ins\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13419, 'Domiciliacion de Empresa No Existente, Tabla: Clientes_Efectos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND\r\n--------------------------------------------------------------------------------------------------------------------\r\n\r\nIF UPDATE(IdFacturaProvGen) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvGen)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvGen= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvGen IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13768, 'Factura de Proveedor Generada No Existente, Tabla: Clientes_Efectos')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(ImporteCambioEuros) BEGIN\r\n\tIF EXISTS \r\n\t\t(SELECT * FROM Inserted WHERE ImporteCambioEuros = 0)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13437, 'El Cambio del Importe en divisa NO puede ser 0')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(GastosCambioEuros) BEGIN\r\n\tIF EXISTS \r\n\t\t(SELECT * FROM Inserted WHERE GastosCambioEuros = 0)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13436, 'El Cambio de los Gastos en divisa NO puede ser 0')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n-- Comprobar TipoEfecto/Domiciliacion\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdDomiciliacion) OR UPDATE(Tipo) OR UPDATE (Remesa) BEGIN\r\n\tIF EXISTS (\r\n\t\tSELECT I.IdFactura\r\n\t\tFROM\r\n\t\t\tInserted I\r\n\t\tINNER JOIN Deleted D ON I.IdDoc=D.IdDoc\r\n\t\tINNER JOIN Delegaciones DLG ON I.IdDelegacion = DLG.IdDelegacion\r\n\t\tINNER JOIN Empresas_Domiciliaciones ED ON I.IdDomiciliacion = ED.IdDomiciliacion AND ED.IdEmpresa =DLG.IDEmpresa\r\n\t\tINNER JOIN Efectos_Tipos ET ON I.Tipo = ET.Tipo\r\n\t\tLEFT JOIN Clientes_Remesas CROld ON D.Remesa = CROld.IdRemesa AND D.IdEjercicio = CROld.IdEjercicio\r\n\t\tLEFT JOIN Delegaciones DLGOld ON D.IdDelegacion = DLGOld.IdDelegacion\r\n\t\tLEFT JOIN Empresas_Domiciliaciones EDOld ON CROld.IdDomiciliacion = EDOld.IdDomiciliacion AND EDOld.IdEmpresa =DLGOld.Idempresa\r\n\t\tLEFT JOIN Clientes_Remesas CRNew ON I.Remesa = CRNew.IdRemesa AND I.IdEjercicio = CRNew.IdEjercicio\r\n\t\tLEFT JOIN Delegaciones DLGNew ON I.IdDelegacion = DLGNew.IdDelegacion\r\n\t\tLEFT JOIN Empresas_Domiciliaciones EDNew ON CRNew.IdDomiciliacion = EDNew.IdDomiciliacion AND EDNew.IdEmpresa = DLGNew.IdEmpresa\r\n\t\tWHERE (\r\n\t\t\t(ET.Factoring=0 AND ED.Factoring=1)\r\n\t\t\tOR\r\n\t\t\t(ET.Factoring=1 AND ED.Factoring=0)\r\n\t\t\tOR\r\n\t\t\t(ISNULL(EDOld.Factoring,EDNew.Factoring)<>ISNULL(EDNew.Factoring,EDOld.Factoring))\r\n\t\t\t)\r\n\t\t) BEGIN\r\n\t\tPRINT dbo.Traducir(28510, 'Error. No puede asignarse un tipo de efecto factoring a una domiciliación no factoring, y viceversa')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN \r\n\tEND\r\nEND\r\n\r\n\r\n\r\n-----------------------------------------------------------------------------------------------------------\r\n-- actualizar la tabla  Clientes_Riesgos\r\n-----------------------------------------------------------------------------------------------------------\r\nIF UPDATE (IdCliente) OR UPDATE(IdEstado) OR UPDATE(ImporteTotal) OR UPDATE(ImporteACuenta) OR UPDATE(ImporteCambioEuros) BEGIN\r\n\r\n\t;WITH LineasRiesgoDel(IdCliente, IdPadre, RiesgoImpagados, RiesgoRecibidos, RiesgoNoRecibidos) AS (\r\n\t\tSELECT \r\n\t\t\tD.IdCliente, ISNULL(CD.Padre,CD.IdCliente),\r\n\t\t\tSUM(CASE WHEN D.IdEstado IN (5,7,8,9) THEN D.ImporteTotal / D.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN D.IdEstado IN (5,7,8,9)THEN D.ImporteACuenta / D.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN D.IdEstado IN (1,2,3)\tTHEN D.ImporteTotal / D.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN D.IdEstado IN (1,2,3)THEN D.ImporteACuenta / D.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN D.IdEstado=0\t\t\tTHEN D.ImporteTotal / D.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN D.IdEstado=0\t\t\tTHEN D.ImporteACuenta / D.ImporteCambioEuros ELSE 0 END)\r\n\t\tFROM Deleted D\r\n\t\tINNER JOIN Clientes_Datos CD ON D.IdCliente = CD.IdCliente\r\n\t\tGROUP BY D.IdCliente, ISNULL(CD.Padre,CD.IdCliente)\r\n\t), LineasRiesgoIns(IdCliente, IdPadre, RiesgoImpagados, RiesgoRecibidos, RiesgoNoRecibidos) AS (\r\n\t\tSELECT \r\n\t\t\tI.IdCliente, ISNULL(CD.Padre,CD.IdCliente),\r\n\t\t\tSUM(CASE WHEN I.IdEstado IN (5,7,8,9) THEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado IN (5,7,8,9) THEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN I.IdEstado IN (1,2,3) THEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado IN (1,2,3)THEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END),\r\n\t\t\tSUM(CASE WHEN I.IdEstado=0\t\t\tTHEN I.ImporteTotal / I.ImporteCambioEuros ELSE 0 END) - SUM(CASE WHEN I.IdEstado=0\t\t\tTHEN I.ImporteACuenta / I.ImporteCambioEuros ELSE 0 END)\r\n\t\tFROM Inserted I\r\n\t\tINNER JOIN Clientes_Datos CD ON I.IdCliente = CD.IdCliente\r\n\t\tGROUP BY I.IdCliente, ISNULL(CD.Padre,CD.IdCliente)\r\n\t)\r\n\tUPDATE CR\r\n\tSET\r\n\t\tCR.RiesgoImpagados\t= CR.RiesgoImpagados  + ISNULL(LRI.RiesgoImpagados,0) - ISNULL(LRD.RiesgoImpagados,0),\r\n\t\tCR.RiesgoRecibidos\t= CR.RiesgoRecibidos  + ISNULL(LRI.RiesgoRecibidos,0) - ISNULL(LRD.RiesgoRecibidos,0),\r\n\t\tCR.RiesgoNoRecibidos= CR.RiesgoNoRecibidos+ ISNULL(LRI.RiesgoNoRecibidos,0) - ISNULL(LRD.RiesgoNoRecibidos,0)\r\n\tFROM \r\n\t\tClientes_Riesgos CR\r\n\t\tINNER JOIN LineasRiesgoIns LRI ON CR.IdCliente = LRI.IdCliente AND CR.IdPadre = LRI.IdPadre\r\n\t\tINNER JOIN LineasRiesgoDel LRD ON CR.IdCliente = LRD.IdCliente AND CR.IdPadre = LRD.IdPadre\r\nEND\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\n-- Actualizacion del campo -Cobrada- de Facturas\r\n-- 25/05/15-T44258.Actualizado proceso para obtener todos los efectos relacionados con las facturas\r\n-- 09/11/15-T46482.Calcular sobre todas las facturas iniciales de los efectos implicados\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdEstado) BEGIN\r\n\r\n\tIF EXISTS (\r\n\t\tSELECT * \r\n\t\tFROM \r\n\t\t\tDeleted D INNER JOIN Inserted I ON D.IdDoc=I.IdDoc \r\n\t\tWHERE \r\n\t\t\tD.IdEstado<>I.IdEstado \r\n\t\t\t--AND D.IdFactura <> 0 \r\n\t\t\tAND (D.IdEstado = 4 OR I.IdEstado = 4))  \r\n\tBEGIN\r\n\t\t;WITH Facturas(IdFactura) AS (\r\n\t\t\tSELECT DISTINCT F.IdFactura\r\n\t\t\tFROM \r\n\t\t\t\tDeleted D \r\n\t\t\t\tINNER JOIN Inserted I ON D.IdDoc=I.IdDoc \r\n\t\t\t\tCROSS APPLY dbo.funTblDameFacturasEfecto(I.IdFactura,I.IdEfecto) F\t-- 20200217. #14579. se modifica llamada con funcion inline \r\n\t\t\tWHERE \r\n\t\t\t\tD.IdEstado<>I.IdEstado AND (D.IdEstado = 4 OR I.IdEstado = 4)\r\n\t\t), Estados(IdFactura,Estado) AS (\r\n\t\t\tSELECT \r\n\t\t\t\tF.IdFactura,\r\n\t\t\t\tCASE WHEN  dbo.funDameImporteCobradoFactura(F.IdFactura) >= CASE WHEN TOT.IdMoneda = 1 THEN TOT.TotalEuros ELSE TOT.Total END THEN 1 ELSE 0 END\r\n\t\t\tFROM\r\n\t\t\t\tFacturas F\r\n\t\t\t\tCROSS APPLY dbo.funFacturas_Cli_Total(F.IdFactura) TOT\r\n\t\t)\r\n\t\tUPDATE FCC\r\n\t\tSET FCC.Cobrada = E.Estado\r\n\t\tFROM Facturas_Cli_Cab FCC\r\n\t\t\tINNER JOIN Estados E ON FCC.IdFactura = E.IdFactura\r\n\t\tWHERE FCC.Cobrada <> E.Estado\r\n\t\tOPTION (MAXRECURSION 10000)\r\n\tEND\r\nEND\r\n\r\n-- a\r\n-------------------------------------------------------------------------------------------------------------------\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_Factura_ITrig",
      "tableName": "Clientes_Efectos_Factura",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n/****** Objeto:  desencadenador dbo.Clientes_Efectos_Factura_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:49 ******/\r\nCREATE TRIGGER [Clientes_Efectos_Factura_ITrig] \r\nON [Clientes_Efectos_Factura]\r\nFOR INSERT \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Efectos (IdFActura,IdEfecto)\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Efectos\r\n\t\tWHERE \tConvert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\tIN \t(SELECT Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\t\tFROM \tInserted))<> @Ins\r\n\t\tBEGIN\t\r\n\r\n\t\t\tPRINT dbo.Traducir(13269, 'CAUSA ERROR: Inserción. Violación de la integridad referencial')\r\n\t\t\tPRINT dbo.Traducir(15215, 'TABLA: Clientes_Efectos_Factura')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_Factura_UTrig",
      "tableName": "Clientes_Efectos_Factura",
      "type": "SQL_TRIGGER",
      "definition": "\r\n/****** Objeto:  desencadenador dbo.Clientes_Efectos_Factura_UTrig  fecha de la secuencia de comandos: 14/06/01 14:21:49 ******/\r\nCREATE TRIGGER [Clientes_Efectos_Factura_UTrig] \r\nON [Clientes_Efectos_Factura]\r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\nIF UPDATE(IdFactura) OR UPDATE(IdEfecto) \r\nBEGIN\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Efectos (IdFActura,IdEfecto)\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Efectos\r\n\t\tWHERE \tConvert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\tIN \t(SELECT Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\t\tFROM \tInserted))<> @Ins\r\n\t\tBEGIN\t\r\n\r\n\t\t\tPRINT dbo.Traducir(13269, 'CAUSA ERROR: Inserción. Violación de la integridad referencial')\r\n\t\t\tPRINT dbo.Traducir(15215, 'TABLA: Clientes_Efectos_Factura')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\nEND\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Efectos_Hist_ITrig",
      "tableName": "Clientes_Efectos_Hist",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE  TRIGGER [dbo].[Clientes_Efectos_Hist_ITrig] \r\nON [dbo].[Clientes_Efectos_Hist]\r\nFOR INSERT AS\r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\r\n-- #NAME:\r\n---\t\t\t\tClientes_Efectos_Hist_ITrig\r\n-- #CREATION: \r\n--\t\t\t\tSin Definir\r\n-- #CLASIFICATION:\r\n--\t\t\t\t001-ECONOMICO FINANCIERO\r\n-- #DESCRIPTION:\r\n--\r\n-- #PARAMETERS: \r\n--\t\t\r\n-- #OBSERVATIONS:\r\n--\r\n-- #CHANGES: \r\n--\t\t\t20220510. #17739. llamara a la funcion sin duplicados\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n\r\n-- =============================================\r\n\r\nDECLARE @IdFactura\tT_Id_Factura\r\nDECLARE @IdEfecto\tT_Id_Efecto\r\nDECLARE @IdFacturaPadre\tT_Id_Factura\r\nDECLARE @IdEfectoPadre\tT_Id_Efecto\r\n\r\nDECLARE @TabIniciales TABLE (IdFactura int,IdEfecto int,IdFactura_Ini int,IdEfecto_Ini int)\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t-- no se pueden substituir varios efectos sujetos y no sujetos a RECC\r\n\tIF EXISTS (SELECT 1 FROM (SELECT DISTINCT IdFacturaPadre, IdEfectoPadre FROM Inserted) I CROSS APPLY dbo.[FunIL_Arbol_Efectos_Cliente] (I.IdFacturaPadre,I.IdEfectoPadre) T \r\n\t\tWHERE T.HayMezcla=1)\r\n\tBEGIN\r\n\t\tPRINT 'No es posible agrupar efectos de facturas sujetas al régimen especial de criterio de caja con efectos de facturas no acogidas a dicho régimen.'\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Efectos_Hist_UTrig",
      "tableName": "Clientes_Efectos_Hist",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n/****** Objeto:  desencadenador dbo.Clientes_Efectos_Hist_UTrig  fecha de la secuencia de comandos: 14/06/01 14:21:49 ******/\r\nCREATE TRIGGER [Clientes_Efectos_Hist_UTrig] \r\nON [Clientes_Efectos_Hist]\r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\nIF UPDATE(IdFactura) OR UPDATE(IdEfecto) \r\nBEGIN\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Efectos (IdFActura,IdEfecto)\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Efectos\r\n\t\tWHERE \tConvert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\tIN \t(SELECT Convert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\t\tFROM \tInserted))<> @Ins\r\n\t\tBEGIN\t\r\n\r\n\t\t\tPRINT dbo.Traducir(13269, 'CAUSA ERROR: Inserción. Violación de la integridad referencial')\r\n\t\t\tPRINT dbo.Traducir(15216, 'TABLA: Clientes_Efectos_Hist')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\nEND\r\n\r\nIF UPDATE(IdFacturaPadre) OR UPDATE(IdEfectoPadre) \r\nBEGIN\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Efectos (IdFActuraPadre,IdEfectoPadre)\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(Convert(varchar,IdFacturaPadre)+'-'+Convert(Varchar,IdEfectoPadre)))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Efectos\r\n\t\tWHERE \tConvert(varchar,IdFactura)+'-'+Convert(Varchar,IdEfecto)\r\n\t\t\tIN \t(SELECT Convert(varchar,IdFacturaPadre)+'-'+Convert(Varchar,IdEfectoPadre)\r\n\t\t\t\tFROM \tInserted))<> @Ins\r\n\t\tBEGIN\t\r\n\r\n\t\t\tPRINT dbo.Traducir(13269, 'CAUSA ERROR: Inserción. Violación de la integridad referencial')\r\n\t\t\tPRINT dbo.Traducir(15216, 'TABLA: Clientes_Efectos_Hist')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\r\nEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_FormasPago_ITrig",
      "tableName": "Clientes_FormasPago",
      "type": "SQL_TRIGGER",
      "definition": "\r\n/****** Objeto:  desencadenador dbo.Clientes_FormasPago_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:49 ******/\r\nCREATE TRIGGER [Clientes_FormasPago_ITrig] \r\nON [Clientes_FormasPago] \r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Datos\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Datos\r\n\t\tWHERE \tIdCliente In (SELECT DISTINCT (IdCliente) FROM inserted))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13304, 'Cliente No Existente, Soy Clientes_FormasPago ')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_FormasPago_UTrig",
      "tableName": "Clientes_FormasPago",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Clientes_FormasPago_UTrig] \r\nON [dbo].[Clientes_FormasPago] \r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t--Compruebo integridad con tabla Principal Clientes_Datos\r\n\tIF UPDATE(IdCliente) BEGIN \r\n\t\t\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\t\t\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\t\t\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\t\t\tIF @Ins>0 BEGIN\t\r\n\t\t\t\tPRINT dbo.Traducir(13304, 'Cliente No Existente, Soy Clientes_FormasPago')\r\n\t\t\t\tROLLBACK TRANSACTION\r\n\t\t\t\tRETURN\r\n\t\t\tEND\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Grupos_Desc_ITrig",
      "tableName": "Clientes_Grupos_Desc",
      "type": "SQL_TRIGGER",
      "definition": "/****** Objeto:  desencadenador dbo.Clientes_Grupos_Desc_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:50 ******/\r\nCREATE TRIGGER [Clientes_Grupos_Desc_ITrig] \r\nON dbo.Clientes_Grupos_Desc \r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Grupos_Descuento\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT IdGrupo)\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tGrupos_Descuento\r\n\t\tWHERE \tIdGrupo IN (SELECT DISTINCT (IdGrupo) FROM Inserted))<>@Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13818, 'Grupo No Existente, Soy Clientes_Grupos_Desc')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n/**************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal Clientes_Datos\r\n***************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Datos\r\n\t\tWHERE \tIdCliente In (SELECT DISTINCT (IdCliente) FROM inserted))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13305, 'Cliente No Existente, Soy Clientes_Grupos_Desc')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Grupos_Desc_UTrig",
      "tableName": "Clientes_Grupos_Desc",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Clientes_Grupos_Desc_UTrig] \r\nON dbo.Clientes_Grupos_Desc \r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t\t--\tComprobar integridad con tabla Principal Grupos_Descuento\r\n\t\tIF UPDATE(IdGrupo)  BEGIN\r\n\t\t\tSELECT @Ins=COUNT(Inserted.IdGrupo)\r\n\t\t\tFROM Inserted LEFT JOIN Grupos_Descuento ON (Inserted.IdGrupo= Grupos_Descuento.IdGrupo)\r\n\t\t\tWHERE Grupos_Descuento.IdGrupo Is Null\r\n\r\n\t\t\tIF @Ins>0 BEGIN\t\r\n\t\t\t\tPRINT dbo.Traducir(13171, 'Articulo No Existente, Soy Grupos_Descuento')\r\n\t\t\t\tROLLBACK TRANSACTION\r\n\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\tEND\r\n\r\n\t\t--\tCompruebo integridad con tabla Principal Clientes_Datos\r\n\t\tIF UPDATE(IdCliente) BEGIN \r\n\t\t\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\t\t\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\t\t\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\t\t\tIF @Ins>0 BEGIN\t\r\n\t\t\t\tPRINT dbo.Traducir(13312, 'Cliente No Existente, Soy Grupos_Descuento')\r\n\t\t\t\tROLLBACK TRANSACTION\r\n\t\t\t\tRETURN\r\n\t\t\tEND\r\n\t\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_LineasNegocio_ITrig",
      "tableName": "Clientes_LineasNegocio",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\nCREATE TRIGGER [Clientes_LineasNegocio_ITrig]\r\nON [Clientes_LineasNegocio] \r\nFOR INSERT\r\nAS\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n Declare @Ins Int\r\n Declare @Vret Int\r\n\r\n-----------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n-----------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente IS NULL AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT   dbo.Traducir(13321, 'Cliente No Existente, Tabla: Clientes_LineasNegocio')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_LineasNegocio_UTrig",
      "tableName": "Clientes_LineasNegocio",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_LineasNegocio_UTrig]\r\nON [Clientes_LineasNegocio] \r\nFOR UPDATE\r\nAS\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n Declare @Ins Int\r\n Declare @Vret Int\r\n\r\n-----------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--\tClientes_Datos\r\n-----------------------------------------------------------------------------------------\r\nIF UPDATE (IdCliente) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente IS NULL AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT   dbo.Traducir(13321, 'Cliente No Existente, Tabla: Clientes_LineasNegocio')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Niveles_UTrig",
      "tableName": "Clientes_Niveles",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n/****** Objeto:  desencadenador dbo.Clientes_Niveles_UTrig  fecha de la secuencia de comandos: 14/06/01 14:21:24 ******/\r\nCREATE TRIGGER [Clientes_Niveles_UTrig]\r\nON [Clientes_Niveles] \r\nFOR UPDATE \r\nAS\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n/***************************************************************************************************************************\r\n\tNO PERMITIR NUNCA ACTUALIZAR EL CAMPO NIVEL. LO MISMO QUE EN BORRADO (Está CA pero por si acaso)\r\n***************************************************************************************************************************/\r\n\tIF UPDATE(Nivel)\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13627, 'ES IMPOSIBLE ACTUALIZAR UN NIVEL DE CLIENTE')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Notas_ITrig",
      "tableName": "Clientes_Notas",
      "type": "SQL_TRIGGER",
      "definition": "\r\n/****** Objeto:  desencadenador dbo.Clientes_Notas_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:50 ******/\r\nCREATE TRIGGER [Clientes_Notas_ITrig] \r\nON [Clientes_Notas]\r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n/*************************************************************************************************************************\r\n\tCompruebo integridad con tabla Principal 'Clientes_Datos'\r\n*************************************************************************************************************************/\r\n\tSELECT \t@Ins=COUNT(DISTINCT(IdCliente))\r\n\tFROM \tInserted\r\n\r\n\tIF \t(SELECT COUNT(*) \r\n\t\tFROM \tClientes_Datos\r\n\t\tWHERE \tIdCliente In (SELECT DISTINCT (IdCliente) FROM inserted))<> @Ins\r\n\r\n\t\tBEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13306, 'Cliente No Existente, Soy Clientes_Notas')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Notas_UTrig",
      "tableName": "Clientes_Notas",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Clientes_Notas_UTrig] \r\nON [dbo].[Clientes_Notas]\r\nFOR UPDATE\r\nAS\r\n\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t-- Compruebo integridad con tabla Principal 'Clientes_Datos'\r\n\tIF UPDATE(IdCliente) BEGIN\r\n\r\n\t\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\t\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\t\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\t\tIF @Ins>0 BEGIN\t\r\n\t\t\tPRINT dbo.Traducir(13306, 'Cliente No Existente, Soy Clientes_Notas')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Origen_ITrig",
      "tableName": "Clientes_Origen",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_Origen_ITrig] ON [Clientes_Origen]\r\nFOR INSERT\r\nAS\r\n  IF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n    ---------------------------------------------------------------------\r\n    -- Comprobar integridad con tabla 'Clientes_Canales'\r\n    ---------------------------------------------------------------------\r\n    IF NOT EXISTS(SELECT IdCanal\r\n                    FROM Clientes_Canales\r\n                    WHERE IdCanal IN (SELECT IdCanal FROM Inserted))\r\n    BEGIN\r\n      PRINT dbo.Traducir(13262, 'CANAL No Existente')\r\n      PRINT '------------------------------------------------------------------'\r\n      PRINT dbo.Traducir(13409, 'DETALLES')\r\n      PRINT '------------------------------------------------------------------'\r\n      PRINT dbo.Traducir(13269, 'CAUSA ERROR: Inserción. Violación de la integridad referencial')\r\n      PRINT dbo.Traducir(15217, 'TABLA: Clientes_Origen')\r\n      ROLLBACK TRANSACTION\r\n      RETURN\r\n    END\r\n  END",
      "isDisabled": false
    },
    {
      "name": "Clientes_Origen_UTrig",
      "tableName": "Clientes_Origen",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_Origen_UTrig] ON [Clientes_Origen]\r\nFOR UPDATE\r\nAS\r\n  IF EXISTS(SELECT 1 FROM inserted)\r\n\tBEGIN\r\n    ---------------------------------------------------------------------\r\n    -- Comprobar integridad con tabla 'Clientes_Canales'\r\n    ---------------------------------------------------------------------\r\n    IF NOT EXISTS(SELECT IdCanal\r\n                    FROM Clientes_Canales\r\n                    WHERE IdCanal IN (SELECT IdCanal FROM Inserted))\r\n    BEGIN\r\n      PRINT dbo.Traducir(13262, 'CANAL No Existente')\r\n      PRINT '------------------------------------------------------------------'\r\n      PRINT dbo.Traducir(13409, 'DETALLES')\r\n      PRINT '------------------------------------------------------------------'\r\n      PRINT dbo.Traducir(13263, 'CAUSA ERROR: Actualización. Violación de la integridad referencial')\r\n      PRINT dbo.Traducir(15217, 'TABLA: Clientes_Origen')\r\n      ROLLBACK TRANSACTION\r\n      RETURN\r\n    END\r\n  END",
      "isDisabled": false
    },

    {
      "name": "Clientes_Peticiones_Tipos_UTrig",
      "tableName": "Clientes_Peticiones_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [Clientes_Peticiones_Tipos_UTrig] ON [Clientes_Peticiones_Tipos] \r\nFOR UPDATE \r\nAS\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\t-- Si hay peticiones del tipo modificado, no se puede cambiar el campo IdTipoDef\r\n\tIF EXISTS (SELECT IdTipoPeticion\r\n\t\t\t\t\t\t\tFROM Clientes_Peticiones\r\n\t\t\t\t\t\t\tWHERE IdTipoPeticion IN (SELECT Del.IdTipoPeticion\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM Inserted Ins INNER JOIN\r\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t Deleted Del ON Ins.IdDoc = Del.IdDoc AND\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t Ins.IdTipoDef <> Del.IdTipoDef))\r\n\tBEGIN\r\n\t\tPRINT dbo.Traducir(13330, 'Clientes_Peticiones_Tipos_UTrig. No se puede cambiar el campo ''IdTipoDef'' porque existen peticiones asociadas.')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_PreciosGrupos_IUTrig",
      "tableName": "Clientes_PreciosGrupos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER Clientes_PreciosGrupos_IUTrig\r\nON  Clientes_PreciosGrupos\r\nAFTER INSERT,UPDATE\r\nAS \r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tCEESI\\jjrodriguez\r\n-- #NAME:\r\n---\t\t\t\tClientes_PreciosGrupos_IUTrig\r\n-- #CREATION: \r\n--\t\t\t\t26/05/2021\r\n-- #CLASIFICATION:\r\n--\t\t\t\t002-COMPRAS-VENTAS\r\n-- #DESCRIPTION:\r\n--\t\t\t\tComprobaciones al insertar o actualizar datos en la tabla\r\n--\t\t\t\r\n-- #PARAMETERS: \r\n--\r\n-- #OBSERVATIONS:\r\n--\r\n-- #CHANGES: \r\n--\t\t\t\t20210526-#16308-Versión inicial\r\n-- #EXAMPLE: \r\n--\t\t\r\n-- =============================================\r\nBEGIN\r\n\r\n\tIF EXISTS(SELECT 1 FROM Inserted) BEGIN\r\n\r\n\t\t--Comprobar que se informa algún criterio\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\tIdArticulo IS NULL AND IdFamilia IS NULL AND IdMarca IS NULL\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Debe establecer artículo, familia o marca.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\t\t--Comprobar que se introduce exclusivamente articulo, Marca o marca\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdArticulo IS NOT NULL AND IdFamilia IS NOT NULL)\r\n\t\t\t\tOR\r\n\t\t\t\t(IdFamilia IS NOT NULL AND IdMarca IS NOT NULL)\r\n\t\t\t\tOR\r\n\t\t\t\t(IdArticulo IS NOT NULL AND IdMarca IS NOT NULL)\r\n\t\t\t\tOR\r\n\t\t\t\t(IdFamilia IS NOT NULL AND IdFamilia IS NOT NULL AND IdMarca IS NOT NULL)\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Debe establecer exclusivamente artículo, familia o marca.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\t\t--Comprobar validez fechas / cantidades\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted WHERE DesdeFecha > HastaFecha\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Rango de fechas no válido.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted WHERE DesdeCantidad > HastaCantidad\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Rango de cantidad no válido.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\r\n\r\n\t\t--Si se introduce artículo debe establecerse precio, o descuento\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdArticulo IS NOT NULL AND Precio IS NULL AND Descuento1 IS NULL AND Descuento2 IS NULL AND DescuentoPrecio IS NULL)\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Debe establecer precio o descuento para el artículo.'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\t\t\r\n\t\t--Si se introduce familia debe establecerse descuento\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdFamilia IS NOT NULL AND Descuento1 IS NULL AND Descuento2 IS NULL)\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Debe establecer un descuento para la familia'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\t\t\r\n\t\t--Si se introduce familia no puede establecerse precio\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdFamilia IS NOT NULL AND (Precio IS NOT NULL OR DescuentoPrecio IS NOT NULL))\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. No puede seleccionar un precio para la familia'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n \r\n\t\t\r\n\t\t--Si se introduce Marca debe establecerse descuento\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdMarca IS NOT NULL AND Descuento1 IS NULL AND Descuento2 IS NULL)\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. Debe establecer un descuento para la marca'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\t\t\r\n\t\t--Si se introduce Marca no puede establecerse precio\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(IdMarca IS NOT NULL AND (Precio IS NOT NULL OR DescuentoPrecio IS NOT NULL))\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. No puede seleccionar un precio para la marca'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n \r\n\t\t--Comprobar valores válidos descuentos\r\n\t\tIF EXISTS(\r\n\t\t\tSELECT 1\r\n\t\t\tFROM Inserted I\r\n\t\t\tWHERE\r\n\t\t\t\t(Descuento1 IS NOT NULL AND (Descuento1 < 0 OR Descuento1 > 100.0))\r\n\t\t\t\tOR\r\n\t\t\t\t(Descuento2 IS NOT NULL AND (Descuento2 < 0 OR Descuento2 > 100.0))\r\n\t\t) BEGIN\r\n\t\t\tPRINT 'ERROR. El valor introducido para el descuento no es válido'\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\t\tEND\r\n\r\n\tEND \r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Rappels_ITrig",
      "tableName": "Clientes_Rappels",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\nCREATE TRIGGER [Clientes_Rappels_ITrig] \r\nON [Clientes_Rappels]\r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal \r\n--\tClientes_Datos\r\n--\tRappels\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\tWHERE Clientes_Datos.IdCliente IS NULL AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13322, 'Cliente No Existente, Tabla: Clientes_Rappels')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdRappel)\r\n\tFROM Inserted LEFT JOIN Rappels ON (Inserted.IdRappel= Rappels.IdRappel)\r\n\tWHERE Rappels.IdRappel IS NULL AND Inserted.IdRappel IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15129, 'Rappel No Existente, Tabla: Clientes_Rappels')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Rappels_UTrig",
      "tableName": "Clientes_Rappels",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [Clientes_Rappels_UTrig] \r\nON [Clientes_Rappels]\r\nFOR UPDATE\r\nAS\r\n\r\nDeclare @Ins  \tint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n-----------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla Principal \r\n--\tClientes_Datos\r\n--\tRappels\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos ON (Inserted.IdCliente= Clientes_Datos.IdCliente)\r\n\tWHERE Clientes_Datos.IdCliente IS NULL AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13322, 'Cliente No Existente, Tabla: Clientes_Rappels')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n-----------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdRappel) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdRappel)\r\n\tFROM Inserted LEFT JOIN Rappels ON (Inserted.IdRappel= Rappels.IdRappel)\r\n\tWHERE Rappels.IdRappel IS NULL AND Inserted.IdRappel IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15129, 'Rappel No Existente, Tabla: Clientes_Rappels')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Referencias_ITrig",
      "tableName": "Clientes_Referencias",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_Referencias_ITrig] \r\nON [Clientes_Referencias] \r\nFOR INSERT \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n----------------------------------------------------------------------------------------------------\r\n-- Comprobar la Integridad con\r\n--\tClientes_Datos\r\n--\tReferencias\r\n----------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente Is Null AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13307, 'Cliente No Existente, Soy Clientes_Referencias')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Referencias_UTrig",
      "tableName": "Clientes_Referencias",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [Clientes_Referencias_UTrig] \r\nON [Clientes_Referencias] \r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n----------------------------------------------------------------------------------------------------\r\n-- Comprobar la Integridad con\r\n--\tClientes_Datos\r\n--\tReferencias\r\n----------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente Is Null AND Inserted.IdCliente IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13307, 'Cliente No Existente, Soy Clientes_Referencias')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Relaciones_ITrig",
      "tableName": "Clientes_Relaciones",
      "type": "SQL_TRIGGER",
      "definition": "\r\n \r\nCREATE TRIGGER [dbo].[Clientes_Relaciones_ITrig] \r\nON [dbo].[Clientes_Relaciones]\r\nFOR INSERT\r\nAS\r\n \r\nDeclare @Ins int\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--         Clientes_Datos\r\n------------------------------------------------------------------------------------------------------------------\r\n            SELECT @Ins=COUNT(Inserted.IdCliente)\r\n            FROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n            WHERE ( Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT dbo.Traducir(13308, 'CLIENTE No Existente, Soy Clientes_Relaciones')\r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\n------------------------------------------------------------------------------------------------------------------\r\n            SELECT @Ins=COUNT(Inserted.IdClienteRel)\r\n            FROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdClienteRel= Clientes_Datos.IdCliente\r\n            WHERE ( Inserted.IdClienteRel IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT dbo.Traducir(13329, 'CLIENTE Relacion No Existente, Soy Clientes_Relaciones')\r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\n------------------------------------------------------------------------------------------------------------------\r\n            SELECT @Ins=COUNT(Ins.IdClienteRel)\r\n            FROM Inserted Ins INNER JOIN Clientes_Relaciones Cli ON Ins.IdClienteRel= Cli.IdCliente AND Cli.IdClienteRel= Ins.IdCliente\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT  dbo.Traducir(26253, 'No se puede introducir esta relación. Existe ya la relación inversa.') \r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Relaciones_UTrig",
      "tableName": "Clientes_Relaciones",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [dbo].[Clientes_Relaciones_UTrig] \r\nON [dbo].[Clientes_Relaciones]\r\nFOR UPDATE\r\nAS\r\n \r\nDeclare @Ins int\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n------------------------------------------------------------------------------------------------------------------\r\n-- Compruebo integridad con tabla \r\n--         Clientes_Datos\r\n------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) BEGIN\r\n            SELECT @Ins=COUNT(Inserted.IdCliente)\r\n            FROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n            WHERE ( Inserted.IdCliente IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT dbo.Traducir(13308, 'CLIENTE No Existente, Soy Clientes_Relaciones')\r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\nEND\r\n-----------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdClienteRel) BEGIN\r\n            SELECT @Ins=COUNT(Inserted.IdClienteRel)\r\n            FROM Inserted LEFT JOIN Clientes_Datos ON Inserted.IdClienteRel= Clientes_Datos.IdCliente\r\n            WHERE ( Inserted.IdClienteRel IS NOT NULL)  AND (Clientes_Datos.IdCliente IS NULL)\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT dbo.Traducir(13329, 'CLIENTE Relacion No Existente, Soy Clientes_Relaciones')\r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\nEND\r\n------------------------------------------------------------------------------------------------------------------\r\nIF UPDATE(IdCliente) OR UPDATE(IdClienteRel) BEGIN\r\n            SELECT @Ins=COUNT(Ins.IdClienteRel)\r\n            FROM Inserted Ins INNER JOIN Clientes_Relaciones Cli ON Ins.IdClienteRel= Cli.IdCliente AND Cli.IdClienteRel= Ins.IdCliente\r\n            IF @Ins>0 BEGIN            \r\n                        PRINT  dbo.Traducir(26253, 'No se puede introducir esta relación. Existe ya la relación inversa.') \r\n                        ROLLBACK TRANSACTION\r\n                        RETURN\r\n            END\r\nEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Remesas_ITrig",
      "tableName": "Clientes_Remesas",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_Remesas_ITrig]\r\nON [Clientes_Remesas] \r\nFOR INSERT \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------\r\n--Compruebo integridad con tabla Principal \r\n--\tConta_Ejercicios\r\n--\tMoneda\r\n--\tFacturas_Prov_Cab\r\n------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdEjercicio)\r\n\tFROM Inserted LEFT JOIN Conta_Ejercicios  ON Inserted.IdEjercicio= Conta_Ejercicios.IdEjercicio\r\n\tWHERE Conta_Ejercicios.IdEjercicio IS NULL AND Inserted.IdEjercicio IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13847, 'IdEjercicio No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdMoneda)\r\n\tFROM Inserted LEFT JOIN Moneda  ON Inserted.IdMoneda= Moneda.IdMoneda\r\n\tWHERE Moneda.IdMoneda IS NULL AND Inserted.IdMoneda IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(14619, 'Moneda No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdMonedaOtros)\r\n\tFROM Inserted LEFT JOIN Moneda  ON Inserted.IdMonedaOtros= Moneda.IdMoneda\r\n\tWHERE Moneda.IdMoneda IS NULL AND Inserted.IdMonedaOtros IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(14625, 'Moneda para Gastos, Intereses o Comisiones No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvGastos)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvGastos= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvGastos IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13758, 'Factura de Acreedor de Gastos No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvComisiones)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvComisiones= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvComisiones IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13757, 'Factura de Acreedor de Comisiones No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Remesas_UTrig",
      "tableName": "Clientes_Remesas",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER [Clientes_Remesas_UTrig]\r\nON [Clientes_Remesas] \r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n------------------------------------------------------------------------\r\n--Compruebo integridad con tabla Principal \r\n--\tConta_Ejercicios\r\n--\tMoneda\r\n--\tFacturas_Prov_Cab\r\n------------------------------------------------------------------------\r\nIF UPDATE(IdEjercicio) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdEjercicio)\r\n\tFROM Inserted LEFT JOIN Conta_Ejercicios  ON Inserted.IdEjercicio= Conta_Ejercicios.IdEjercicio\r\n\tWHERE Conta_Ejercicios.IdEjercicio IS NULL AND Inserted.IdEjercicio IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13850, 'IdEjercicio No Existente, Tabla: Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------\r\nIF UPDATE(IdMoneda) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdMoneda)\r\n\tFROM Inserted LEFT JOIN Moneda  ON Inserted.IdMoneda= Moneda.IdMoneda\r\n\tWHERE Moneda.IdMoneda IS NULL AND Inserted.IdMoneda IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(14619, 'Moneda No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------\r\nIF UPDATE(IdMonedaOtros) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdMonedaOtros)\r\n\tFROM Inserted LEFT JOIN Moneda  ON Inserted.IdMonedaOtros= Moneda.IdMoneda\r\n\tWHERE Moneda.IdMoneda IS NULL AND Inserted.IdMonedaOtros IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(14625, 'Moneda para Gastos, Intereses o Comisiones No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND \r\n\r\n------------------------------------------------------------------------\r\nIF UPDATE(IdFacturaProvGastos) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvGastos)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvGastos= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvGastos IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13758, 'Factura de Acreedor de Gastos No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------\r\nIF UPDATE(IdFacturaProvComisiones) BEGIN\r\n\tSELECT @Ins=COUNT(Inserted.IdFacturaProvComisiones)\r\n\tFROM Inserted LEFT JOIN Facturas_Prov_Cab  ON Inserted.IdFacturaProvComisiones= Facturas_Prov_Cab.IdFactura\r\n\tWHERE Facturas_Prov_Cab.IdFactura IS NULL AND Inserted.IdFacturaProvComisiones IS NOT NULL\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT  dbo.Traducir(13757, 'Factura de Acreedor de Comisiones No Existente, Tabla:  Clientes_Remesas')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND\r\n------------------------------------------------------------------------\r\n-- no se puede modificar el idmoneda si tiene efectos asociados\r\n------------------------------------------------------------------------\r\n\tIF EXISTS \r\n\t\t(SELECT * FROM Deleted D INNER JOIN Inserted I ON D.IdDoc=I.IdDoc INNER JOIN Clientes_Efectos CE ON CE.IdEjercicio=D.IdEjercicio AND CE.Remesa=D.IdRemesa\r\n\t\tWHERE D.IdMoneda<>I.IdMoneda)\r\n\tBEGIN\r\n\t\tPRINT  dbo.Traducir(14836, 'No se puede modificar la moneda existen efectos asociados.')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n------------------------------------------------------------------------\r\n--Si se modifica la domiciliacion se modifica en todos sus efectos\r\n------------------------------------------------------------------------\r\n\tIF UPDATE(IdDomiciliacion) BEGIN\r\n\t\tUPDATE Clientes_Efectos\r\n\t\tSET Clientes_Efectos.IdDomiciliacion=Inserted.IdDomiciliacion\r\n\t\tFROM Clientes_Efectos, Deleted, Inserted\r\n\t\tWHERE Deleted.IdRemesa =Clientes_Efectos.Remesa AND Deleted.IdEjercicio =Clientes_Efectos.IdEjercicio \r\n\tEND\r\n\r\n\t--07/02/17-T55048\r\n\t------------------------------------------------------------------------\r\n\t--Si se modifica la fecha de la remesa se modifica en todos sus efectos\r\n\t------------------------------------------------------------------------\r\n\tIF UPDATE(Fecha) BEGIN\r\n\r\n\t\tUPDATE CE SET CE.FechaRemesa = I.Fecha\r\n\t\tFROM \r\n\t\t\tInserted I\r\n\t\t\tINNER JOIN Deleted D ON I.IdDoc = D.IdDoc\r\n\t\t\tINNER JOIN Clientes_Efectos CE ON CE.Remesa = I.IdRemesa AND CE.IdEjercicio = I.IdEjercicio\r\n\t\tWHERE \r\n\t\t\tI.Fecha <> CE.FechaRemesa AND I.Fecha<>D.Fecha\r\n\tEND\r\n\t\r\n\r\nEND",
      "isDisabled": false
    },

    {
      "name": "Clientes_Tipos_ITrig",
      "tableName": "Clientes_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [Clientes_Tipos_ITrig] \r\nON [Clientes_Tipos] \r\nFOR INSERT \r\nAS\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n------------------------------------------------------------------------------------------------------\r\n--NUNCA DEJAR INSERTAR LOS TIPOS DE CLIENTE \r\n------------------------------------------------------------------------------------------------------\r\n\tPRINT dbo.Traducir(13629, 'ES IMPOSIBLE AÑADIR TIPOS DE CLIENTE ')\r\n\tROLLBACK TRAN\r\n\tRETURN\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Clientes_Tipos_UTrig",
      "tableName": "Clientes_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\nCREATE TRIGGER [Clientes_Tipos_UTrig]\r\nON [Clientes_Tipos] \r\nFOR UPDATE \r\nAS\r\n\r\nDeclare @Ins Int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n--\tNO PERMITIR NUNCA ACTUALIZAR EL CAMPO TIPO. LO MISMO QUE EN BORRADO (Está CA pero por si acaso)\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\tIF UPDATE(IdTipo) OR UPDATE(Descrip) BEGIN\r\n\t\tPRINT dbo.Traducir(13619, 'ES IMPOSIBLE ACTUALIZAR EL IDENTIFICADOR O LA DESCRIPCION DE UN TIPO DE CLIENTE')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\r\n\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n--\tCompruebar integridad con tabla Principal Conta_Subcuentas (Independiente del Ejercicio)\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\tIF UPDATE (CuentaVentas) BEGIN\r\n\r\n\t\tSELECT @Ins=COUNT(Inserted.CuentaVentas)\r\n\t\tFROM Inserted LEFT JOIN Conta_Subcuentas  ON Inserted.CuentaVentas= Conta_Subcuentas.SubCuenta\r\n\t\tWHERE Conta_Subcuentas.SubCuenta IS NULL AND Inserted.CuentaVentas IS NOT NULL\r\n\t\r\n\t\tIF @Ins>0 BEGIN\t\r\n\t\t\tPRINT  dbo.Traducir(24586, 'SUBCUENTA CONTABLE No Existente, Soy Clientes_Tipos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN\r\n\t\tEND\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "ClientesFact_Tipos_UTrig",
      "tableName": "ClientesFact_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [ClientesFact_Tipos_UTrig]\r\nON [ClientesFact_Tipos] \r\nFOR UPDATE \r\nAS\r\n\r\n DECLARE @Ins Int\r\n DECLARE @Tipo smallint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n------------------------------------------------------------------------------------\r\n-- NUNCA DEJAR MODIFICAR EL TIPO DE FACTURACION 0\r\n------------------------------------------------------------------------------------\r\n\tIF EXISTS\r\n\t\t(SELECT * FROM Deleted D, Inserted I WHERE D.IdDoc=I.IdDoc And D.IdTipo=0 And D.IdTipo<>I.IdTipo)\r\n\tBEGIN\r\n\t\tPRINT  dbo.Traducir(13693, 'ES IMPOSIBLE MODIFICAR EL TIPO DE FACTURACIÓN 0')\r\n\t\tROLLBACK TRAN\r\n\t\tRETURN\r\n\tEND\t\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_Conf_ITrig",
      "tableName": "Contactos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Contactos_Conf_ITrig] \r\nON Contactos \r\nFOR INSERT \r\nAS\r\n \r\nIF @@ROWCOUNT<>0 BEGIN\r\n\t-- insertar en configurables\r\n\tINSERT INTO Conf_Contactos(IdContacto)\r\n\tSELECT I.IdContacto FROM Inserted I LEFT JOIN Conf_Contactos T ON T.IdContacto=I.IdContacto\r\n\tWHERE T.IdContacto IS NULL\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_CRM_UTrig",
      "tableName": "Contactos",
      "type": "SQL_TRIGGER",
      "definition": "\r\nCREATE TRIGGER Contactos_CRM_UTrig \r\nON Contactos\r\nFOR UPDATE \r\n-- =============================================\r\n-- #AUTOR:\t\r\n--\t\t\t\tRaúl Romero Moreno\r\n\r\n-- #NAME:\r\n---\t\t\t\tContactos_CRM_UTrig\r\n-- #CREATION: \r\n--\t\t\t\t26/10/2017\r\n-- #CLASIFICATION:\r\n--\t\t\t\t\r\n-- #DESCRIPTION:\r\n--\t\t\ttrigger para grabar en la tabla Clientes_Datos_Comerciales, los datos comunes que se \r\n--\t\t\tmodifiquen en el contacto\r\n-- #PARAMETERS: \r\n--\t\t\t\r\n-- #OBSERVATIONS:\r\n--\t\t\t\r\n-- #CHANGES: \r\n--\t\t\tUT3239, 18/01/2018, fbueno: Añadir el IdCliente al enlace con Clientes_Contactos_CRM\r\n-- #EXAMPLE: \r\n--\t\t\t\r\n\r\n-- =============================================\r\nAS\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t-- actualizar en configurables\r\n\t--Generada KF\r\n\t--IF UPDATE(IdContacto) BEGIN\r\n  \r\n\t--\tUPDATE C SET C.IdContacto= I.IdContacto\r\n\t--\tFROM Conf_Contactos C INNER JOIN Deleted D ON D.IdContacto=C.IdContacto INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n\t--\tWHERE D.IdContacto<>I.IdContacto     \r\n\t--END\r\n\r\n\t-- al modificar los datos de un contacto 'DE CLIENTE' modificar en clientes_datos_comerciales (si esta relacionado a algun cliente)\r\n\tIF EXISTS (SELECT * FROM Inserted I INNER JOIN Deleted D ON I.IdContacto = D.IdContacto\r\n\t\t\t\t\tINNER JOIN Clientes_Contactos_CRM CCC ON CCC.IdContacto = I.IdContacto\r\n\t\t\t\t\tWHERE ISNULL(I.Nombre,'')<>ISNULL(D.Nombre,'')\r\n\t\t\t\t\tOR ISNULL(I.Cargo,'')<>ISNULL(D.Cargo,'') OR ISNULL(I.TelefonoMovil,'')<>ISNULL(D.TelefonoMovil,'')\r\n\t\t\t\t\tOR  ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'')\r\n\t\t\t\t\t) BEGIN\r\n\t\tUPDATE CDC \r\n\t\t\tSET NombreContacto=I.Nombre,\r\n\t\t\t\tCargoContacto=I.Cargo,\r\n\t\t\t\tTelMovilContacto=I.TelefonoMovil,\r\n\t\t\t\tDepartamento=I.Departamento\r\n\t\t\tFROM Inserted I \r\n\t\t\t\tINNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\t\tINNER JOIN Contactos_Objetos CO ON CO.IdContacto=I.IdContacto AND CO.Objeto='Cliente'\r\n\t\t\t\tINNER JOIN Clientes_Datos CD ON CD.IdDoc = CO.IdDocObjeto\r\n\t\t\t\tINNER JOIN Clientes_Contactos_CRM CCC ON CCC.IdContacto = I.IdContacto AND CCC.IdCliente = CD.IdCliente\r\n\t\t\t\tINNER JOIN Clientes_Datos_Comerciales CDC ON CCC.IdCliente=CDC.IdCliente\r\n\r\n\t\t\tWHERE  CDC.NombreContacto IS NOT NULL \r\n\t\t\t\tAND (\r\n\t\t\t\t\tISNULL(I.Nombre,'')<>ISNULL(D.Nombre,'')\r\n\t\t\t\t\tOR ISNULL(I.Cargo,'')<>ISNULL(D.Cargo,'') OR ISNULL(I.TelefonoMovil,'')<>ISNULL(D.TelefonoMovil,'')\r\n\t\t\t\t\tOR  ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'')\r\n\t\t\t\t)\r\n\r\n\tEND -- if\t\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_UTrig",
      "tableName": "Contactos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Contactos_UTrig] \r\nON [dbo].[Contactos] \r\nFOR UPDATE \r\nAS\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t--Implementado por FK\r\n\t-- actualizar en configurables\r\n\t--IF UPDATE(IdContacto) BEGIN\r\n\t--\tUPDATE C SET C.IdContacto= I.IdContacto\r\n\t--\tFROM Conf_Contactos C INNER JOIN Deleted D ON D.IdContacto=C.IdContacto INNER JOIN Inserted I ON D.IdDoc=I.IdDoc\r\n\t--\tWHERE D.IdContacto<>I.IdContacto     \r\n\t--\tEND\r\n\r\n\t-- al modificar los datos de un contacto 'DE CLIENTE' modificar en clientes_datos_comerciales (si esta relacionado a algun cliente)\r\n\tIF EXISTS (SELECT I.IdDoc \r\n\t\t\t\t\tFROM Inserted I \r\n\t\t\t\t\t\tINNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\t\t\t\tINNER JOIN Contactos_Objetos CO ON I.IdContacto=CO.IdContacto AND CO.Objeto='Cliente'\r\n\t\t\t\t\t\tINNER JOIN Clientes_Datos CD ON I.IdContacto=CD.IdContacto \r\n\t\t\t\t\t\tINNER JOIN Clientes_Datos_Comerciales CDC ON CD.IdCliente=CDC.IdCliente\r\n\t\t\t\t\t\t-- UT 3285: solo modificar si el contacto coincide con el indicado desde el CRM\r\n\t\t\t\t\t\tINNER JOIN Clientes_Contactos_CRM CCC ON CCC.IdCliente = CD.IdCliente AND CCC.IdContacto=I.IdContacto\r\n\t\t\t\t\tWHERE ISNULL(I.Nombre,'')<>ISNULL(D.Nombre,'') OR ISNULL(I.Cargo,'')<>ISNULL(D.Cargo,'') OR ISNULL(I.TelefonoMovil,'')<>ISNULL(D.TelefonoMovil,'')\r\n\t\t\t\t\t\tOR  ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,''))\r\n\tBEGIN\r\n\r\n\t\tUPDATE CDC SET NombreContacto=I.Nombre,\r\n\t\t\tCargoContacto=I.Cargo,\r\n\t\t\tTelMovilContacto=I.TelefonoMovil,\r\n\t\t\tDepartamento=I.Departamento\r\n\r\n\t\tFROM Inserted I \r\n\t\t\tINNER JOIN Deleted D ON I.IdDoc=D.IdDoc \r\n\t\t\tINNER JOIN Contactos_Objetos CO ON I.IdContacto=CO.IdContacto AND CO.Objeto='Cliente'\r\n\t\t\tINNER JOIN Clientes_Datos CD ON I.IdContacto=CD.IdContacto \r\n\t\t\tINNER JOIN Clientes_Datos_Comerciales CDC ON CD.IdCliente=CDC.IdCliente\r\n\t\t\t-- UT 3285: solo modificar si el contacto coincide con el indicado desde el CRM\r\n\t\t\tINNER JOIN Clientes_Contactos_CRM CCC ON CCC.IdCliente = CD.IdCliente AND CCC.IdContacto=I.IdContacto\r\n\t\tWHERE CDC.NombreContacto IS NOT NULL AND ( -- UT2138 estos campos desde el ERP no se tienen que propagar\r\n\t\t\t\tISNULL(I.Nombre,'')<>ISNULL(D.Nombre,'')\r\n\t\t\t\tOR ISNULL(I.Cargo,'')<>ISNULL(D.Cargo,'') OR ISNULL(I.TelefonoMovil,'')<>ISNULL(D.TelefonoMovil,'')\r\n\t\t\t\tOR  ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'')\r\n\t\t\t)\r\n\tEND\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_Objetos_UTrig",
      "tableName": "Contactos_Objetos",
      "type": "SQL_TRIGGER",
      "definition": "CREATE TRIGGER [dbo].[Contactos_Objetos_UTrig] \r\nON [dbo].[Contactos_Objetos]\r\nFOR UPDATE \r\nAS\r\n\r\n Declare @Ins int\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t-- si se modifican los campos: IdTipoRelacionContacto\r\n\tIF EXISTS (SELECT I.IdDoc FROM Deleted D INNER JOIN Inserted I ON D.IdDoc=I.IdDoc WHERE I.Objeto='Cliente' AND (ISNULL(I.IdTipo,'')<>ISNULL(D.IdTipo,'')\r\n\t\tOR ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'') OR ISNULL(I.CargoContacto,'')<>ISNULL(D.CargoContacto,'')))\r\n\tBEGIN\r\n\t\tUPDATE CDC SET IdTipoRelacionContacto=I.IdTipo,\r\n\t\t\tDepartamento=I.Departamento,\r\n\t\t\tCargoContacto=I.CargoContacto\r\n\t\t\t\t\r\n\t\tFROM Deleted D INNER JOIN Inserted I ON D.IdDoc=I.IdDoc INNER JOIN Clientes_Datos CD ON I.IdContacto=CD.IdContacto AND I.Objeto='Cliente' AND I.IdDocObjeto=CD.IdDoc\r\n\t\t\tINNER JOIN Clientes_Datos_Comerciales CDC ON CD.IdCliente=CDC.IdCliente\r\n\t\tWHERE ISNULL(I.IdTipo,'')<>ISNULL(D.IdTipo,'') OR ISNULL(I.Departamento,'')<>ISNULL(D.Departamento,'') OR ISNULL(I.CargoContacto,'')<>ISNULL(D.CargoContacto,'')\r\n\tEND\r\n\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_Tipos_ITrig",
      "tableName": "Contactos_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n/****** Objeto:  desencadenador dbo.Contactos_Tipos_ITrig  fecha de la secuencia de comandos: 14/06/01 14:21:26 ******/\r\nCREATE TRIGGER [Contactos_Tipos_ITrig]\r\nON [Contactos_Tipos] \r\nFOR INSERT \r\nAS\r\n\r\n DECLARE @Vret int\r\n\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t---------------------------------------------------------------------\r\n\t-- REHACER LOS FILTROS DE Objetos_Filtros\r\n\t---------------------------------------------------------------------\r\n\tEXEC\t@Vret=PObjetos_FiltrosContactos\r\n\r\n\tIF @Vret=0 BEGIN\r\n\t\t\tPRINT dbo.Traducir(15153, 'Se ha producido un error al rehacer la tabla: Objetos_Filtros para los tipos de contactos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN \r\n\tEND \r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Contactos_Tipos_UTrig",
      "tableName": "Contactos_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\nCREATE TRIGGER [dbo].[Contactos_Tipos_UTrig]\r\nON [dbo].[Contactos_Tipos] \r\nFOR UPDATE \r\nAS\r\n\r\nDECLARE @Ins Int\r\nDECLARE @Tipo smallint\r\nDECLARE @Vret smallint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\r\n\t---------------------------------------------------------------------\r\n\t-- NO DEJAR ELIMINAR EL TIPO DE CONTACTO 0 ni -1: Contacto de facturación / Razón Social\r\n\t---------------------------------------------------------------------\r\n\tIF \t(SELECT count(*) FROM\tDeleted WHERE IdTipo IN (0,-1))>0 \tBEGIN\r\n\t\t\tPRINT dbo.Traducir(26625, 'ES IMPOSIBLE MODIFICAR EL TIPO DE CONTACTO 0 (Contacto de facturación) o -1 (Razón Social)')\r\n\t\t\tROLLBACK TRAN\r\n\t\t\tRETURN\r\n\tEND\t\r\n\t---------------------------------------------------------------------\r\n\t-- REHACER LOS FILTROS DE Objetos_Filtros\r\n\t---------------------------------------------------------------------\r\n\tEXEC\t@Vret=PObjetos_FiltrosContactos\r\n\tIF @Vret=0 BEGIN\r\n\t\t\tPRINT dbo.Traducir(15153, 'Se ha producido un error al rehacer la tabla: Objetos_Filtros para los tipos de contactos')\r\n\t\t\tROLLBACK TRANSACTION\r\n\t\t\tRETURN \r\n\tEND \r\nEND",
      "isDisabled": false
    },
    {
      "name": "Prov_Contactos_Tipos_UTrig",
      "tableName": "Prov_Contactos_Tipos",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\nCREATE TRIGGER [Prov_Contactos_Tipos_UTrig]\r\nON [Prov_Contactos_Tipos] \r\nFOR UPDATE \r\nAS\r\n\r\nDECLARE @Ins Int\r\nDECLARE @Tipo smallint\r\nDECLARE @Vret smallint\r\n\r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n\t---------------------------------------------------------------------\r\n\t-- NO DEJAR ELIMINAR EL TIPO DE CONTACTO 0\r\n\t---------------------------------------------------------------------\r\n\tIF EXISTS\r\n\t\t(SELECT *\r\n\t\tFROM\tDeleted\r\n\t\tWHERE\tIdTipo=0)\r\n\t\tBEGIN\r\n\t\t\tPRINT dbo.Traducir(13691, 'ES IMPOSIBLE MODIFICAR EL TIPO DE CONTACTO 0 ')\r\n\t\t\tROLLBACK TRAN\r\n\r\n\t\t\tRETURN\r\n\t\tEND\t\r\n\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Proyectos_CRM_Clientes_ITrig",
      "tableName": "Proyectos_CRM_Clientes",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\n\r\n\r\n\r\nCREATE TRIGGER [Proyectos_CRM_Clientes_ITrig] \r\nON [Proyectos_CRM_Clientes] \r\nFOR INSERT\r\nAS\r\n\r\n Declare @Ins Int\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n ----------------------------------------------------------------------------------------------------\r\n -- Comprobar integridad con tabla \r\n --\tClientes_Datos\r\n --\tProyectos\r\n ----------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13317, 'Cliente No Existente, Soy Proyectos_CRM_Clientes')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n\r\n ----------------------------------------------------------------------------------------------------\r\n\tSELECT @Ins=COUNT(Inserted.IdProyecto)\r\n\tFROM Inserted LEFT JOIN Proyectos  ON Inserted.IdProyecto= Proyectos.IdProyecto\r\n\tWHERE Proyectos.IdProyecto Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15122, 'Proyecto No Existente, Soy Proyectos_CRM_Clientes')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\nEND",
      "isDisabled": false
    },
    {
      "name": "Proyectos_CRM_Clientes_UTrig",
      "tableName": "Proyectos_CRM_Clientes",
      "type": "SQL_TRIGGER",
      "definition": "\r\n\r\n\r\nCREATE TRIGGER [Proyectos_CRM_Clientes_UTrig] \r\nON [Proyectos_CRM_Clientes] \r\nFOR UPDATE\r\nAS\r\n\r\n Declare @Ins Int\r\n \r\nIF EXISTS(SELECT 1 FROM inserted)\r\nBEGIN\r\n\r\n ----------------------------------------------------------------------------------------------------\r\n -- Comprobar integridad con tabla \r\n --\tClientes_Datos\r\n --\tProyectos\r\n ----------------------------------------------------------------------------------------------------\r\n  IF UPDATE(IdCliente) BEGIN\r\n\r\n\tSELECT @Ins=COUNT(Inserted.IdCliente)\r\n\tFROM Inserted LEFT JOIN Clientes_Datos  ON Inserted.IdCliente= Clientes_Datos.IdCliente\r\n\tWHERE Clientes_Datos.IdCliente Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(13317, 'Cliente No Existente, Soy Proyectos_CRM_Clientes')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n  END\r\n ----------------------------------------------------------------------------------------------------\r\n  IF UPDATE(IdProyecto) BEGIN\r\n\r\n\tSELECT @Ins=COUNT(Inserted.IdProyecto)\r\n\tFROM Inserted LEFT JOIN Proyectos  ON Inserted.IdProyecto= Proyectos.IdProyecto\r\n\tWHERE Proyectos.IdProyecto Is Null\r\n\r\n\tIF @Ins>0 BEGIN\t\r\n\t\tPRINT dbo.Traducir(15122, 'Proyecto No Existente, Soy Proyectos_CRM_Clientes')\r\n\t\tROLLBACK TRANSACTION\r\n\t\tRETURN\r\n\tEND\r\n  END\r\nEND",
      "isDisabled": false
    }
  ]
}
